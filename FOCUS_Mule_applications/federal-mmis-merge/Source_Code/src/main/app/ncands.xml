<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
	xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
	xmlns:ss="http://www.springframework.org/schema/security" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/current/mule-spring-security.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">

	<configuration doc:name="Configuration">
    <expression-language>
     	<global-functions>  
     	def isDateInDST(date,TimeZoneID) { return java.util.TimeZone.getTimeZone(TimeZoneID).inDaylightTime(date);  }
     	
     	</global-functions> 
    </expression-language>
    </configuration>
    <sub-flow name="ncands-report-generation-Sub_Flow" doc:description="NCANDS Flow which handles Orchestration of the the data Colleaction, Calculation and Report Generation">
        <logger message="Select Id,Report_Start__c,Report_End__c,Request_Sent__c,Case_ID__c,Encrypt_PID__c,Federal_Fiscal_Year__c FROM DEL_Extract__c where Id = '#[flowVars.reportParams.ReportParameters.DocId]'" level="INFO" doc:name="Log Report Report Extraction"/>
        <enricher source="#[payload]" target="#[flowVars.ReportData]" doc:name="Message Enricher : Get Report Data" doc:description="Gather Report Data in variable">
            <sfdc:query-single config-ref="Salesforce__Basic_Authentication_dev" query="Select Id,Report_Start__c,Report_End__c,Request_Sent__c,Case_ID__c,Encrypt_PID__c,Federal_Fiscal_Year__c FROM DEL_Extract__c where Id = '#[flowVars.reportParams.ReportParameters.DocId]'" doc:name="Salesforce : Query Report Details Using ID"/>
        </enricher>
       <!-- <validation:is-true config-ref="Validation_Configuration1" message="Report Criteria Invalid : Either Case ID or a combination of Report Start Date and Report End Date should be specified" exceptionClass="java.lang.Exception" expression="#[((flowVars.ReportData.Case_ID__c != null &amp;&amp; flowVars.ReportData.Report_Start__c == null &amp;&amp; flowVars.ReportData.Report_End__c == null) || (flowVars.ReportData.Case_ID__c == null &amp;&amp; flowVars.ReportData.Report_Start__c != null &amp;&amp; flowVars.ReportData.Report_End__c != null))]" doc:name="Validation : Check for Valid Request" doc:description="Report if Criteria is valid For generating NCANDS report Either Case ID or a combination of Report Start Date and Report End Date should be specified but not both"/> -->
        <dw:transform-message doc:name="Transform Message : Create Query">
            <dw:input-payload mimeType="application/java"/>
            <dw:set-variable variableName="query1"><![CDATA[%dw 1.0
%output application/java
---
"SELECT ID,Secondary_Caregiver__c,Primary_Caregiver__c,Investigation_Outcome__c,Case_Type__c,Status__c,Case_Open_Date__c,Final_Case_Disposition_Pi__c,Referral_To_Law_Enforcement_And_DOJ__c,Case_Close_Date__c,Associated_Intake__c,Associated_Intake__r.Name,Associated_Intake__r.County__c,Associated_Intake__r.Report_Date__c,Associated_Intake__r.Report_Source__c,Associated_Intake__r.Incident_Date__c,Associated_Intake__r.Report_Referred_to_Law_Enforcement__c, (SELECT ID,Role__c,Relation__c,Person_PID__c,Person__r.BirthDate,Person__r.DEL_Gender__c,Person__r.DEL_Race_Primary__c,Person__r.DEL_Race_Secondary__c,Person__r.DEL_Ethnicity__c,Person__r.DEL_Date_of_Death__c,Person__c,Victim_Perpetrator_Relationship__c FROM Person_Cases__r where Person_PID__c != null), (SELECT ID,Interview_DateTime__c FROM Initial_Interviews__r WHERE Interview_Status__c = 'Completed' order by Interview_DateTime__c asc),(Select ID,Case_ID__c,Associated_Case_ID__c,Associated_Case_ID__r.Case_Type__c, Associated_Case_ID__r.Case_Subtype__c, Associated_Case_ID__r.Case_Open_Date__c, Associated_Case_ID__r.Case_Close_Date__c FROM Associated_Cases__r ),(Select ID,Case_ID__c,Case_ID__r.Case_Type__c, Case_ID__r.Case_Subtype__c, Case_ID__r.Case_Open_Date__c, Case_ID__r.Case_Close_Date__c ,Associated_Case_ID__c FROM Associated_Cases_Second__r ), (Select Id, Intake_ID__c from Associated_Cases1__r) from DEL_CASE__c" ++ " where (Case_Type__c = 'IA Investigation' OR Case_Type__c = 'Family Investigation') AND " ++
 ([
  ("Id = 'a02t0000003iSiH'")
// ("Case_Close_Date__c >= 2017-04-01 and Case_Close_Date__c <= 2018-04-30 limit 50" ) 
 ] filter ($ != null) joinBy " and ")]]></dw:set-variable>
            <dw:set-variable variableName="query"><![CDATA[%dw 1.0
%output application/java
---
"SELECT ID,Secondary_Caregiver__c,Primary_Caregiver__c,Investigation_Outcome__c,Case_Type__c,Status__c,Case_Open_Date__c,Final_Case_Disposition_Pi__c,Referral_To_Law_Enforcement_And_DOJ__c,Case_Close_Date__c,Associated_Intake__c,Associated_Intake__r.Name,Associated_Intake__r.County__c,Associated_Intake__r.Report_Date__c,Associated_Intake__r.Report_Source__c,Associated_Intake__r.Incident_Date__c,Associated_Intake__r.Report_Referred_to_Law_Enforcement__c, (SELECT ID,Role__c,Relation__c,Person_PID__c,Person__r.BirthDate,Person__r.DEL_Gender__c,Person__r.DEL_Race_Primary__c,Person__r.DEL_Race_Secondary__c,Person__r.DEL_Ethnicity__c,Person__r.DEL_Date_of_Death__c,Person__c,Victim_Perpetrator_Relationship__c FROM Person_Cases__r where Person_PID__c != null), (SELECT ID,Interview_DateTime__c FROM Initial_Interviews__r WHERE Interview_Status__c = 'Completed' order by Interview_DateTime__c asc),(Select ID,Case_ID__c,Associated_Case_ID__c,Associated_Case_ID__r.Case_Type__c, Associated_Case_ID__r.Case_Subtype__c, Associated_Case_ID__r.Case_Open_Date__c, Associated_Case_ID__r.Case_Close_Date__c FROM Associated_Cases__r ),(Select ID,Case_ID__c,Case_ID__r.Case_Type__c, Case_ID__r.Case_Subtype__c, Case_ID__r.Case_Open_Date__c, Case_ID__r.Case_Close_Date__c ,Associated_Case_ID__c FROM Associated_Cases_Second__r ), (Select Id, Intake_ID__c from Associated_Cases1__r) from DEL_CASE__c" ++ " where (Case_Type__c = 'IA Investigation' OR Case_Type__c = 'Family Investigation') AND " ++
 ([
  
 ("Case_Close_Date__c >=" ++ (flowVars.ReportData.Report_Start__c as :string {format : "yyyy-MM-dd"})) when (flowVars.ReportData.Report_Start__c != null),
 ("Case_Close_Date__c <=" ++ (flowVars.ReportData.Report_End__c as :string {format : "yyyy-MM-dd"})) when (flowVars.ReportData.Report_End__c != null), 
 ("Case_Close_Date__c != null and " ++ ("Id=" ++ "'" ++ flowVars.ReportData.Case_ID__c ++ "'")) when (flowVars.ReportData.Case_ID__c != null) 
 ] filter ($ != null) joinBy " and ")]]></dw:set-variable>
        </dw:transform-message>
        <flow-ref name="ncands-report-generation-references-Sub_Flow" doc:name="ncands-report-generation-references-Sub_Flow"/>
        <set-variable variableName="elementDetails" value="#[dw(&quot;[]&quot;)]" doc:name="Variable : Element Details" doc:description="Variable to store Element Details"/>
        <flow-ref name="ncands-report-calculateElements-Sub_Flow" doc:name="ncands-report-calculateElements-Sub_Flow"/>
        <validation:is-true config-ref="Validation_Configuration1" message="No Records found" exceptionClass="java.lang.Exception" expression="#[flowVars.elementDetails.size() &gt; 0]" doc:name="Validation : Check for records" doc:description="Check for records"/>
        <dw:transform-message doc:name="Transform Message : Create Fixed Length Report">
            <dw:input-payload mimeType="application/java"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output text/plain schemaPath="ncands.ffd"
---
flowVars.elementDetails]]></dw:set-payload>
        </dw:transform-message>
        <object-to-string-transformer doc:name="Object to String : Consume Payload as String" doc:description="Consume Payload as String which will be used or further operations"/>
        <message-properties-transformer scope="invocation" doc:name="Message Properties : Prepare File Details">
            <add-message-property key="FileAttachment" value="#[payload]"/>
            <add-message-property key="FileName" value="#[dw('&quot;NCANDS_&quot; ++ (now as :string {format : &quot;yyyyMMddHHmmss&quot;})')]"/>
            <add-message-property key="FileExtn" value="txt"/>
            <add-message-property key="FileDescription" value="NCANDS.txt"/>
        </message-properties-transformer>

        <flow-ref name="stpv_add_attachment" doc:name="stpv_add_attachment"/>
        <dw:transform-message doc:name="Transform Message : Attachment Response">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <dw:transform-message doc:name="Transform Message : Filter records having a Business Exception">
            <dw:set-variable variableName="elementDetails"><![CDATA[%dw 1.0
%output application/java
---
flowVars.elementDetails filter ( ($."Error Message" != null) and ($."Error Message" != "") )]]></dw:set-variable>
        </dw:transform-message>
        <choice doc:name="Choice : Check Exception file presence" doc:description=" Check Exception file presence">
            <when expression="#[flowVars.elementDetails.size() == 0]">
                <logger message="No Exception File present" level="INFO" doc:name="Logger : No Exception File present"/>
                <dw:transform-message doc:name="Transform Message : Prepare Update data">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[{
		Id:flowVars.reportParams.ReportParameters.DocId,
		"Attachment_Generated__c":  true as :boolean,
		"Failure_Reason__c": ""

}]]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <otherwise>
                <choice doc:name="Choice : Route Based on Attachment Success" doc:description="Route Based on Attachment Success, if attachment is successfull then proceed processing otherwise Stop processing ">
                    <when expression="#[(payload.Success != true)]">
                        <dw:transform-message doc:name="Transform Message : Prepare Update data">
                            <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[{
		Id:flowVars.reportParams.ReportParameters.DocId,
		"Attachment_Generated__c":  (false as :boolean),
		"Failure_Reason__c": "Federal Report File could not be attached."

}]]]></dw:set-payload>
                        </dw:transform-message>
                    </when>
                    <otherwise>

                        <flow-ref name="ncands-report-generation-create-CSV-File-Sub_Flow" doc:name="ncands-report-generation-create-CSV-File-Sub_Flow"/>
                        <dw:transform-message doc:name="Transform Message : Attachment Response">
                            <dw:input-payload mimeType="application/json"/>
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
                        </dw:transform-message>
                        <choice doc:name="Choice : Route Based on Attachment Success" doc:description="Route Based on Attachment Success, if attachment is successfull then proceed processing otherwise Stop processing ">
                            <when expression="#[payload.Success != true]">
                                <dw:transform-message doc:name="Transform Message : Prepare Update Payload">
                                    <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[{
		Id:flowVars.reportParams.ReportParameters.DocId,
		"Attachment_Generated__c":  (false as :boolean),
		"Failure_Reason__c": "Exception Report File could not be attached."

}]]]></dw:set-payload>
                                </dw:transform-message>
                            </when>
                            <otherwise>
                                <dw:transform-message doc:name="Transform Message : Prepare Update Payload">
                                    <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[{
		Id:flowVars.reportParams.ReportParameters.DocId,
		"Attachment_Generated__c":  true as :boolean,
		"Failure_Reason__c": ""

}]]]></dw:set-payload>
                                </dw:transform-message>
                            </otherwise>
                        </choice>
                    </otherwise>
                </choice>
            </otherwise>
        </choice>
        <sfdc:update config-ref="Salesforce__Basic_Authentication" type="DEL_Extract__c" doc:name="Salesforce : Update Report Record">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:update>
        <logger message="#[payload]" level="INFO" doc:name="Logger : Log Updation Result from Salesforce"/>
    <message-properties-transformer scope="invocation" doc:name="MP: Deleting FV">

				<delete-message-property key="InterfaceID"/>
				<delete-message-property key="interfaceTransactionStatus"/>
				<delete-message-property key="TransactionID"/>
				<delete-message-property key="LOVReturned"/>
				<delete-message-property key="SubPayload"/>
				<delete-message-property key="Tname"/>
				<delete-message-property key="Time"/>
				
				<delete-message-property key="reportParams"/>
				<delete-message-property key="InterfaceName"/>
				<delete-message-property key="InitialPayload"/>
				<delete-message-property key="providerIdList"/>
				<delete-message-property key="AddressDetailsMap"/>
				<delete-message-property key="FileAttachment"/>
				<delete-message-property key="FileBody"/>
				
				<delete-message-property key="query"/>
				<delete-message-property key="query1"/>
				<delete-message-property key="elementDetails"/>
				<delete-message-property key="associatedCasesMap"/>
				
				<delete-message-property key="AssociatedCase1"/>
				<delete-message-property key="associatedCasesMap"/>
				<delete-message-property key="AssociatedIDList"/>
				<delete-message-property key="AssociatedIntakeIDList"/>
				<delete-message-property key="AssociatedIntakeIDList1"/>
				<delete-message-property key="CaseDetails"/>
				<delete-message-property key="caseId"/>
				
				<delete-message-property key="CaseIDList"/>
				<delete-message-property key="CaseList"/>
				<delete-message-property key="casepersonscurrent"/>
				<delete-message-property key="ContactIDList"/>
				<delete-message-property key="counter"/>
				<delete-message-property key="currentAssociatedCases"/>
				<delete-message-property key="currentcase"/>
				
				<delete-message-property key="elementDetails"/>
				<delete-message-property key="FindingAllegation"/>
				<delete-message-property key="FindingAllegationString"/>
				<delete-message-property key="findingsInfoMap"/>
				<delete-message-property key="findingsMaltreatmentType"/>
				<delete-message-property key="ilcasesMap"/>
				<delete-message-property key="initInterview"/>
				
				<delete-message-property key="initReport"/>
				<delete-message-property key="intakeRecordsInfoMap"/>
				<delete-message-property key="intakePersonsMap"/>
				<delete-message-property key="maxCaseCloseDate"/>
				<delete-message-property key="minCaseOpenDate"/>
				<delete-message-property key="ncandsPerssonCaseIDList"/>
				<delete-message-property key="ncandsriskfactorsCaregiverMap"/>
				
				<delete-message-property key="ncandsriskfactorsMap"/>
				<delete-message-property key="nonVictimPerson"/>
				<delete-message-property key="PerpContactIDList"/>
				<delete-message-property key="perpSummaryMap"/>
				<delete-message-property key="personCasesIDList"/>
				<delete-message-property key="personCasesMap"/>
				<delete-message-property key="personSalesforceIDList"/>
				
				<delete-message-property key="personSalesforceIDListQuery"/>
				<delete-message-property key="petitionsMap"/>
				<delete-message-property key="placementIDList"/>
				<delete-message-property key="placementinfoMap"/>
				<delete-message-property key="placementinfoMap2"/>
				<delete-message-property key="PrimaryAllegation"/>
				<delete-message-property key="priorCasePersonList"/>
				
				<delete-message-property key="priorVictimsInfo"/>
				<delete-message-property key="query"/>
				<delete-message-property key="query1"/>
				
			</message-properties-transformer>
    </sub-flow>
    <sub-flow name="ncands-report-generation-references-Sub_Flow" doc:description="Flow which contains the references to the other Sub flows which are required to gather data for the report.">
        <enricher doc:name="Message Enricher : Get Qualified Case Details" doc:description="Get Qualified Case, Case Person, Associated Intake Details in separate variables">
            <flow-ref name="ncands-report-get-Case-and-client-details" doc:name="ncands-report-get-Case-and-client-details"/>
            <enrich source="#[payload]" target="#[flowVars.CaseDetails]"/>
            <enrich source="#[dw('payload.Associated_Intake__c default [] filter ($ != null)')]" target="#[flowVars.AssociatedIntakeIDList]"/>
            <enrich source="#[dw('(flatten payload.Person_Cases__r default []) filter ($.Id != null) map $.Id ')]" target="#[flowVars.personCasesIDList]"/>
            <!-- <enrich source="#[dw('(flatten payload.Person_Cases__r default []) filter ($.Person__c != null) map $.Person__c ')]" target="#[flowVars.ContactIDList]"/> -->
            <enrich source="#[dw('( (((flatten (payload.Associated_Cases__r default [])).Associated_Case_ID__c) default []) ++ (((flatten (payload.Associated_Cases_Second__r default [])).Case_ID__c) default []) ) distinctBy $')]" target="#[flowVars.AssociatedIDList]"/>
            <enrich source="#[dw('payload.Id')]" target="#[flowVars.CaseIDList]"/>
            <enrich source="#[dw('payload.Associated_Cases1__r default [] map $.Intake_ID__c')]" target="#[flowVars.AssociatedCase1]"/>
            <enrich source="#[dw('( (  (( payload.Case_Close_Date__c filter ($ != null) default [] map (($ as :date)) orderBy $ )[-1..0])[0] as :string {format : &quot;yyyy-MM-dd&quot;}  ) when ((( payload.Case_Close_Date__c filter ($ != null) default [] map (($ as :date)) orderBy $ )[-1..0])[0] != null) otherwise null )')]" target="#[flowVars.maxCaseCloseDate]"/>
            <enrich source="#[dw('(  ( payload.Case_Open_Date__c filter ($ != null) default [] map (($ as :date)) orderBy $ )[0] as :string {format : &quot;yyyy-MM-dd&quot;} )')]" target="#[flowVars.minCaseOpenDate]"/>
        </enricher>
		<enricher doc:name="Message Enricher : Get Custody Details" doc:description="Get Qualified Case, Case Person, Associated Intake Details in separate variables">
			<flow-ref name="ncands-Custody-records-Sub_Flow" doc:name="ncands-Custody-records-Sub_Flow"/>
			<enrich source="#[flowVars.CustodyDetails]" target="#[flowVars.CustodyDetails]"/>
			<enrich source="#[flowVars.FinalCustody]" target="#[flowVars.FinalCustody]"/>
			<enrich source="#[flowVars.CustodyList]" target="#[flowVars.CustodyList]"/>
			<enrich source="#[flowVars.FirstEverCustody]" target="#[flowVars.FirstEverCustody]"/>
		</enricher>

        <enricher doc:name="Message Enricher Get LOV Mappings" doc:description="Get LOV Mappings required for value mappings">
            <flow-ref name="NCANDS_callLOVflow" doc:name="NCANDS_callLOVflow"/>
            <enrich source="#[flowVars.LOVReturned]" target="#[flowVars.LOVReturned]"/>
        </enricher>
        <flow-ref name="ncands-report-get-Conference-Details-Sub_Flow" doc:name="ncands-report-get-Conference-Details-Sub_Flow" doc:description="Invoke Flow to get Case Conference Information related to the Associated Cases"/>
        <set-variable variableName="riskDactorDeciderDate" value="#[dw(&quot;((p('ncands.report.riskfactordecider.date') as :string) as :date {format : 'dd-MM-yyyy'})&quot;)]" doc:name="Variable : Set NCANDS Risk factor decider" doc:description="Set NCANDS RSIK fator decider in a variable"/>
        
        <flow-ref name="ncands-report-get-ncandsriskfactorscaregiver-Sub_Flow" doc:name="ncands-report-get-ncandsriskfactorscaregiver-Sub_Flow" doc:description="Invoke Flow to Gather NCANDS Risk factor Caregiver information"/>
        <flow-ref name="ncands-report-get-ncandsriskfactors-Sub_Flow" doc:name="ncands-report-get-ncandsriskfactors-Sub_Flow" doc:description="Invoke Flow to Gather NCANDS Risk factor information"/>
		<!-- <flow-ref name="ncands-report-get-victimDetails-Sub_Flow" doc:name="ncands-report-get-victimDetails-Sub_Flow"/> -->                    
		<flow-ref name="ncands-report-get-IntakeInfo-Sub_Flow" doc:name="ncands-report-get-IntakeInfo-Sub_Flow" doc:description="Invoke Flow to gather Intake information"/>
		
        <flow-ref name="ncands-report-get-intakePersonDetails-Sub_Flow" doc:name="ncands-report-get-intakePersonDetails-Sub_Flow" doc:description="Invoke flow to gather Inake Person Details "/>            
        <flow-ref name="ncands-report-get-case-initialinterviewinfo-Sub_Flow" doc:name="ncands-report-get-case-initialinterviewinfo-Sub_Flow" doc:description="Invoke flow to gather Initial Interview Details"/>
        <flow-ref name="ncands-report-get-case-reportinfo-Sub_Flow" doc:name="ncands-report-get-case-reportinfo-Sub_Flow" doc:description="Invoke flow to gather Initial Report Details"/>
        <flow-ref name="ncands-report_get_person_cases_Sub_Flow" doc:name="ncands-report_get_person_cases_Sub_Flow" doc:description="Invoke Flow to gather Person Cases Information"/>
        <!-- <flow-ref name="ncands-report-calculateElements-Sub_Flow" doc:name="ncands-report-calculateElements-Sub_Flow"/> -->
    </sub-flow>
    <sub-flow name="ncands-report-calculateElements-Sub_Flow" doc:description="This Flow uses data which was gathered before and takes care of the element calculation">
        <set-variable variableName="CaseList" value="#[dw(&quot;[]&quot;)]" doc:name="Variable : Initialize Case Ignore List" doc:description="Initialize Case Ignore List"/>
        <set-variable variableName="ContactIDList" value="#[dw(&quot;[]&quot;)]" doc:name="Variable : Initialize Contact List" doc:description="Initialize Contact List"/>
        <set-variable variableName="ncandsPersonCaseIDList" value="#[dw(&quot;[]&quot;)]" doc:name="Variable : Initialize Person Case List" doc:description="Initialize Person Case List"/>
        <foreach collection="#[flowVars.personCasesMap]" doc:name="For Each : Person Case Group" doc:description="Iterating over each  Person Case Group. Each Group represents the Person cases Associated with particular Case.">
            <dw:transform-message doc:name="Transform Message : Person Cases Group">
                <dw:input-payload mimeType="application/java"/><dw:set-variable variableName="personSalesforceIDList"><![CDATA[%dw 1.0
%output application/java
---
payload map $.Person__c]]></dw:set-variable>
                <dw:set-variable variableName="currentcase"><![CDATA[%dw 1.0
%output application/java
---
payload[0].Case__r]]></dw:set-variable>
                <dw:set-variable variableName="caseId"><![CDATA[%dw 1.0
%output application/java
---
payload[0].Case__c]]></dw:set-variable>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Filter Person Case with Age above 21">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%function getAge(date1,date2)  ( abs (date1 - date2).years)
---
payload filter (((getAge(now as :date,($.Person__r.Birthdate as :date))) < 21) when (($.Person__r.Birthdate) != null) otherwise false)]]></dw:set-payload>
         </dw:transform-message>
		  <dw:transform-message doc:name="Transform Message : Filter Person Cases other than Victim with Age more than 18">
                <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
%function getAge(date1,date2)  ( abs (date1 - date2).years)
---
payload filter (
	($.Role__c == "Victim") or (((getAge(((flowVars.ReportData.Report_End__c default now) as :date {format : "yyyy-MM-dd"}),($.Person__r.Birthdate as :date))) < 18) when (($.Person__r.Birthdate) != null) otherwise false)
)]]></dw:set-payload>
            </dw:transform-message> 
         <!-- <dw:transform-message doc:name="Transform Message : Filter Person Cases for the Current Case">
                <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java

payload filter ( using (personId = $.Person__c)
	($.Role__c == "Victim") or
	( 	
		($.Role__c == "Not Involved") and
		(flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c] != null) and 
		((sizeOf ( flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0]['Intake_Persons__r'] default [] filter (($.Validated_Person_Name__c == personId) and ($.Role__c == "Victim") ) ) ) == 1)
	) 
)]]></dw:set-payload>
            </dw:transform-message>   -->
            <dw:transform-message doc:name="Transform Message : Prepare Case List">
                <dw:input-payload mimeType="application/java"/><dw:set-variable variableName="CaseList"><![CDATA[%dw 1.0
%output application/java
---
((flowVars.CaseList) + flowVars.caseId) when ((sizeOf payload) > 0) otherwise flowVars.CaseList]]></dw:set-variable>

            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Get Contacts List">
                <dw:input-payload mimeType="application/java"/><dw:set-variable variableName="ContactIDList"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.ContactIDList) ++ (payload.Person__c default [])]]></dw:set-variable>
                <dw:set-variable variableName="ncandsPersonCaseIDList"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.ncandsPersonCaseIDList) ++ (payload.Id default [])]]></dw:set-variable>
            </dw:transform-message>


        </foreach>
        <flow-ref name="ncands-report-generation-get-findingsinfo-Sub_Flow" doc:name="ncands-report-generation-get-findingsinfo-Sub_Flow" doc:description="Invoke flow to get Finding, Victim, Perpetrator Details" />
        <flow-ref name="ncands-report-get-sdkriskassessment-Sub_Flow" doc:name="ncands-report-get-sdkriskassessment-Sub_Flow" doc:description="Invoke flow to get Risk assessment details"/>
		<flow-ref name="ncands-report-generation-get-priorabusers-Sub_Flow" doc:name="ncands-report-generation-get-priorabusers-Sub_Flow" doc:description="Invoke Flow to get Prior Abuser Details"/>
        <flow-ref name="ncands-report-generation-get-petitions-Sub_Flow" doc:name="ncands-report-generation-get-petitions-Sub_Flow" doc:description="Invoke Flow to get Petition details"/>
        <flow-ref name="ncands-report-get-placementsinfo-Sub_Flow" doc:name="ncands-report-get-placementsinfo-Sub_Flow" doc:description="Invoke Flow to get placement details"/>
        <flow-ref name="ncands-report-generation-get-independentcasesinfo-Sub_Flow" doc:name="ncands-report-generation-get-independentcasesinfo-Sub_Flow" doc:description="Invoke Flow to get Inpendent Living cases information"/>
        <foreach collection="#[flowVars.personCasesMap]" doc:name="For Each : Person Case Group" doc:description="Iterate over each Person Case Group">
        <dw:transform-message doc:name="Transform Message : Filter Person Case with Age above 21">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%function getAge(date1,date2)  ( abs (date1 - date2).years)
---
payload filter (((getAge(now as :date,($.Person__r.Birthdate as :date))) < 21) when (($.Person__r.Birthdate) != null) otherwise false)]]></dw:set-payload>
</dw:transform-message>

	<dw:transform-message doc:name="Transform Message : Filter Person Cases other than Victim with Age more than 18">
                <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
%function getAge(date1,date2)  ( abs (date1 - date2).years)
---
payload filter (
	($.Role__c == "Victim") or (((getAge(((flowVars.ReportData.Report_End__c default now) as :date {format : "yyyy-MM-dd"}),($.Person__r.Birthdate as :date))) <= 18) when (($.Person__r.Birthdate) != null) otherwise false)
)]]></dw:set-payload>
            </dw:transform-message> 
         <!-- <dw:transform-message doc:name="Transform Message : Filter Person Cases for the Current Case">
                <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java

payload filter ( using (personId = $.Person__c)
	($.Role__c == "Victim") or
	( 	
		($.Role__c == "Not Involved") and
		(flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c] != null) and 
		((sizeOf ( flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0]['Intake_Persons__r'] default [] filter (($.Validated_Person_Name__c == personId) and ($.Role__c == "Victim") ) ) ) == 1)
	) 
)]]></dw:set-payload>
            </dw:transform-message>  -->
            <choice doc:name="Choice : Check if Applicable Person Cases are present" doc:description="Check if Applicable Person Cases are present">
                <when expression="#[dw(&quot;(sizeOf payload) &gt; 0&quot;)]">
                    <dw:transform-message doc:name="Transform Message : Person Salesforce ID List">
                        <dw:input-payload mimeType="application/java"/>
                        <dw:set-variable variableName="personSalesforceIDList"><![CDATA[%dw 1.0
%output application/java
---
payload map $.Person__c]]></dw:set-variable>
                        <dw:set-variable variableName="personSalesforceIDListQuery"><![CDATA[%dw 1.0
%output application/java
---
((payload map $.Person__c) default []) map ("'" ++ $ ++ "'") joinBy ","]]></dw:set-variable>
                        <dw:set-variable variableName="caseId"><![CDATA[%dw 1.0
%output application/java
---
payload[0].Case__c]]></dw:set-variable>
                        <dw:set-variable variableName="currentcase"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.CaseDetails filter  ($.Id == payload[0].Case__c))[0]]]></dw:set-variable>
                    </dw:transform-message>
                    <dw:transform-message doc:name="Transform Message : Get Current Case Persons">
                        <dw:set-variable variableName="casepersonscurrent"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                    </dw:transform-message>
                    <logger message="Currently Processing #[flowVars.caseId]" level="INFO" doc:name="LOG Current Case"/>
                    <logger message="Select Id, Person__c from DEL_Person_Cases__c where (Case__r.case_type__c ='Family Investigation' Or Case__r.case_type__c ='IA Investigation') AND Person__c IN (#[flowVars.personSalesforceIDListQuery]) and Case__r.Case_Close_Date__c &lt; #[flowVars.currentcase.Case_Close_Date__c] AND Status__c = 'Closed' AND (Case__r.Investigation_Outcome__c = 'Substantiated' OR Case__r.Investigation_Outcome_for_Conversion__c ='Substantiated' OR Case__r.Investigation_Outcome_for_Conversion__c ='Abuse/Neglect/Dependency Substantiated, No Treatment' OR Case__r.Investigation_Outcome_for_Conversion__c ='Abuse/Neglect/Dependency Substantiated, Refer Treatment' OR Case__r.Investigation_Outcome_for_Conversion__c ='Maltreatment Founded No Treatment' OR Case__r.Investigation_Outcome_for_Conversion__c ='Maltreatment Founded Refer Treatmnt' OR Case__r.Investigation_Outcome_for_Conversion__c ='Abuse/Neglect/Dependency Substantiated, Link Current Treatment' OR Case__r.Investigation_Outcome_for_Conversion__c ='Maltrmt Founded, Rfr Contract Agncy' OR Case__r.Investigation_Outcome_for_Conversion__c ='Abuse/Neglect/Dependency Substantiated, Refer Contract Agency' OR Case__r.Investigation_Outcome_for_Conversion__c ='Maltrmt Founded Link Current Trtmt') and Case__c != '#[flowVars.caseId]' and role__c = 'Victim'" level="INFO" doc:name="Logger : Log Prior Person Cases"/>
                    <sfdc:query config-ref="Salesforce__Basic_Authentication" query="Select Id, Person__c from DEL_Person_Cases__c where (Case__r.case_type__c ='Family Investigation' Or Case__r.case_type__c ='IA Investigation') AND Person__c IN (#[flowVars.personSalesforceIDListQuery]) and Case__r.Case_Close_Date__c &lt; #[flowVars.currentcase.Case_Close_Date__c] AND Status__c = 'Closed' AND (Case__r.Investigation_Outcome__c = 'Substantiated' OR Case__r.Investigation_Outcome_for_Conversion__c ='Substantiated' OR Case__r.Investigation_Outcome_for_Conversion__c ='Abuse/Neglect/Dependency Substantiated, No Treatment' OR Case__r.Investigation_Outcome_for_Conversion__c ='Abuse/Neglect/Dependency Substantiated, Refer Treatment' OR Case__r.Investigation_Outcome_for_Conversion__c ='Maltreatment Founded No Treatment' OR Case__r.Investigation_Outcome_for_Conversion__c ='Maltreatment Founded Refer Treatmnt' OR Case__r.Investigation_Outcome_for_Conversion__c ='Abuse/Neglect/Dependency Substantiated, Link Current Treatment' OR Case__r.Investigation_Outcome_for_Conversion__c ='Maltrmt Founded, Rfr Contract Agncy' OR Case__r.Investigation_Outcome_for_Conversion__c ='Abuse/Neglect/Dependency Substantiated, Refer Contract Agency' OR Case__r.Investigation_Outcome_for_Conversion__c ='Maltrmt Founded Link Current Trtmt') and Case__c != '#[flowVars.caseId]' and role__c = 'Victim'" doc:name="Salesforce : Check Prior Case Persons" doc:description="Check Prior Case Persons"/>
                    <dw:transform-message doc:name="Transform Message : Consume payload">
                        <dw:input-payload mimeType="application/java"/>
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
                    </dw:transform-message>
                    <dw:transform-message doc:name="Transform Message : Form Qualified Case Persons Query">
                        <dw:input-payload mimeType="application/java"/>
                        <dw:set-variable variableName="priorCasePersonList"><![CDATA[%dw 1.0
%output application/java
---
(( ((payload map $.Id) distinctBy $) map ("'" ++ $ ++ "'") joinBy ",")) when ((sizeOf payload) > 0) otherwise "''"]]></dw:set-variable>
                    </dw:transform-message>
                    <choice doc:name="Choice : Check if Prior Case Persons are there" doc:description="Check if Prior Case Persons are present">
                        <when expression="#[dw(&quot;(sizeOf payload) == 0&quot;)]">
                            <logger message="No Prior Victims for the Current Case and it's Case Persons" level="INFO" doc:name="Logger : No Prior Victims"/>
                        </when>
                        <otherwise>
                            <sfdc:query config-ref="Salesforce__Basic_Authentication" query="Select Id, Victim__r.Person__c, Victim__c from DEL_Victim__c where Victim__c IN (#[flowVars.priorCasePersonList]) and Finding_ID__r.Finding_Status__c = 'Completed'" doc:name="Salesforce : Get Prior Victims information" doc:description="Get Prior Victim information."/>
                            <dw:transform-message doc:name="Transform Message : Consume Payload">
                                <dw:input-payload mimeType="application/java"/>
                                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
                            </dw:transform-message>
                            <dw:transform-message doc:name="Transform Message : Pror Victms Map">
                                <dw:input-payload mimeType="application/java"/>
                                <dw:set-variable variableName="priorVictimsInfo"><![CDATA[%dw 1.0
%output application/java
---
(payload default []) groupBy $.Victim__r.Person__c]]></dw:set-variable>
                            </dw:transform-message>
                        </otherwise>
                    </choice>
                    <dw:transform-message doc:name="Transform Message : Get Associated Cases">
                        <dw:input-payload mimeType="application/java"/>
                        <dw:set-variable variableName="currentAssociatedCases"><![CDATA[%dw 1.0
%output application/java
---
( (
( (flowVars.currentcase.Associated_Cases__r default []) map {
	Id : $.Associated_Case_ID__c,
	Case_Open_Date__c : $.Associated_Case_ID__r.Case_Open_Date__c,
	Case_Close_Date__c : $.Associated_Case_ID__r.Case_Close_Date__c,
	Case_Type__c : $.Associated_Case_ID__r.Case_Type__c,
	Case_Subtype__c : $.Associated_Case_ID__r.Case_Subtype__c
} ) ++ 
( (flowVars.currentcase.Associated_Cases_Second__r default []) map {
	Id : $.Case_ID__c,
	Case_Open_Date__c : $.Case_ID__r.Case_Open_Date__c,
	Case_Close_Date__c : $.Case_ID__r.Case_Close_Date__c,
	Case_Type__c : $.Case_ID__r.Case_Type__c,
	Case_Subtype__c : $.Case_ID__r.Case_Subtype__c
} ) 
) filter ( ($.Case_Type__c == "Treatment") or  ($.Case_Type__c == "Permanency") or ($.Case_Type__c == "Guardianship")) ) distinctBy $.Id]]></dw:set-variable>
                    </dw:transform-message>
                    <dw:transform-message doc:name="Transform Messege: Mapping for Findina Allegation">
                        <dw:set-variable variableName="findingsMaltreatmentType"><![CDATA[%dw 1.0
%output application/java
%var priority = {
"Primary" : "1",
"Secondary" : "2",
"Tertiary" : "3",
"Additional" : "4"
}
---
flowVars.casepersonscurrent map {
	Finding_Type__c : flowVars.findingsInfoMap[flowVars.caseId][$.Id].Finding_ID__r map (priority [$.Finding_Type__c]) default ["5"],
	Primary_Finding_Type__c : flowVars.findingsInfoMap[flowVars.caseId][$.Id].Finding_ID__r map ($.Maltreatment_Type__c when (["Emotional Neglect (Mild To Moderate)","Emotional Neglect (Severe)","Emotional Abuse (Mild To Moderate)","Emotional Abuse (Severe)"] contains $.Maltreatment_Type__c ) otherwise $.Primary_Finding_Type__c ) default ["Blank"] 
} 
]]></dw:set-variable>
</dw:transform-message>
                    <dw:transform-message doc:name="Transform Messege: Non Victm Person">
                        <dw:set-variable variableName="nonVictimPerson"><![CDATA[%dw 1.0
%output application/java
---
flowVars.casepersonscurrent map ( using (personId = $.Person__c)
		( ($.Role__c != "Victim") and ((flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c] != null) and 
			((sizeOf ( flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0]["Intake_Persons__r"] default [] filter (($.Validated_Person_Name__c == personId) and ($.Role__c != "Victim") ) ) ) == 1)
		))
	)
]]></dw:set-variable>
<dw:set-variable variableName="FindingAllegation"><![CDATA[%dw 1.0
%output application/java
%var priority = {
"Primary" : "1",
"Secondary" : "2",
"Tertiary" : "3",
"Additional" : "4"
}
%var priorityMap = {
"Physical Abuse" : "1",
"Abuse" : "1",
"Neglect" : "2",
"Sexual Abuse/Exploitation" : "4",
"Sex Abuse" : "4",
"Emotional Neglect (Mild To Moderate)" : "5",
"Emotional Neglect (Severe)" : "5",
"Emotional Abuse (Mild To Moderate)" : "5",
"Emotional Abuse (Severe)" : "5",
"Emotional Abuse/Neglect" : "5",
"Dependency" : "8",
"Blank" : "6"
}
---
flowVars.casepersonscurrent map {
		//(priority[flowVars.findingsInfoMap[flowVars.caseId][$.Id].Finding_ID__r.Finding_Type__c[0] default "Additional"]) : (priorityMap[flowVars.findingsMaltreatmentType[$$].Primary_Finding_Type__c[0]]),
		("1" when (((flowVars.findingsMaltreatmentType[$$].Finding_Type__c[0] == "2") or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[0] == "3") or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[0] == "4")) and (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[0] != null)) otherwise (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[0] default "5")) : (priorityMap[(flowVars.findingsMaltreatmentType[$$].Primary_Finding_Type__c distinctBy $)[0]]),
		//(priority[flowVars.findingsInfoMap[flowVars.caseId][$.Id].Finding_ID__r.Finding_Type__c[1] default "Additional"]) : (priorityMap[flowVars.findingsMaltreatmentType[$$].Primary_Finding_Type__c[1]]),
		("2" when (((flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1] == flowVars.findingsMaltreatmentType[$$].Finding_Type__c[0]) or flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1] == "1" or flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1] == "3" or flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1] == "4") and (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1] != null)) otherwise ("5" when flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1] == null otherwise flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1]) default "5") : (priorityMap[(flowVars.findingsMaltreatmentType[$$].Primary_Finding_Type__c distinctBy $)[1]]),
		//(priority[flowVars.findingsInfoMap[flowVars.caseId][$.Id].Finding_ID__r.Finding_Type__c[2] default "Additional"]) : (priorityMap[flowVars.findingsMaltreatmentType[$$].Primary_Finding_Type__c[2]]),
		("3" when (((flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == flowVars.findingsMaltreatmentType[$$].Finding_Type__c[0]) or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1]) or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == "2") or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == "1") or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == "4")) and (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] != null)) otherwise ("5" when flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == null otherwise flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2]) default "5") : (priorityMap[(flowVars.findingsMaltreatmentType[$$].Primary_Finding_Type__c distinctBy $)[2]]),
		//(priority[flowVars.findingsInfoMap[flowVars.caseId][$.Id].Finding_ID__r.Finding_Type__c[3] default "Additional"]) : (priorityMap[flowVars.findingsMaltreatmentType[$$].Primary_Finding_Type__c[3]])
		("4" when (((flowVars.findingsMaltreatmentType[$$].Finding_Type__c[3] == flowVars.findingsMaltreatmentType[$$].Finding_Type__c[0]) or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[3] == flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1]) or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[3] == flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2]) or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == "2") or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == "1") or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == "3")) and  (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[3] != null) ) otherwise ("5" when flowVars.findingsMaltreatmentType[$$].Finding_Type__c[3] == null otherwise flowVars.findingsMaltreatmentType[$$].Finding_Type__c[3]) default "5") : (priorityMap[(flowVars.findingsMaltreatmentType[$$].Primary_Finding_Type__c distinctBy $)[3]])
	} default []
]]></dw:set-variable>
<dw:set-variable variableName="FindingAllegationString"><![CDATA[%dw 1.0
%output application/java 
%var priority = {
"Primary" : "1",
"Secondary" : "2",
"Tertiary" : "3",
"Additional" : "4"
}
%var priority = {
"Physical Abuse" : "Physical Abuse",
"Abuse" : "Abuse",
"Neglect" : "Neglect",
"Sexual Abuse/Exploitation" : "Sexual Abuse/Exploitation",
"Sex Abuse" : "Sex Abuse",
"Emotional Neglect (Mild To Moderate)" : "Emotional Neglect",
"Emotional Neglect (Severe)" : "Emotional Neglect",
"Emotional Abuse (Mild To Moderate)" : "Emotional Neglect",
"Emotional Abuse (Severe)" : "Emotional Neglect",
"Emotional Abuse/Neglect" : "Emotional Neglect",
"Dependency" : "Dependency"
}
---
flowVars.casepersonscurrent map {
		("1" when ((flowVars.findingsMaltreatmentType[$$].Finding_Type__c[0] == "2") or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[0] == "3") or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[0] == "4")) otherwise (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[0] default "4")) : priority[(flowVars.findingsMaltreatmentType[$$].Primary_Finding_Type__c distinctBy $)[0]],
		("2" when (((flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1] == flowVars.findingsMaltreatmentType[$$].Finding_Type__c[0]) or flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1] == "1" or flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1] == "3" or flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1] == "4") and (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1] != null)) otherwise ("5" when flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1] == null otherwise flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1]) default "5") : priority[(flowVars.findingsMaltreatmentType[$$].Primary_Finding_Type__c distinctBy $)[1]],
		("3" when (((flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == flowVars.findingsMaltreatmentType[$$].Finding_Type__c[0]) or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1]) or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == "2") or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == "1") or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == "4")) and (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] != null)) otherwise ("5" when flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == null otherwise flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2]) default "5") : priority[(flowVars.findingsMaltreatmentType[$$].Primary_Finding_Type__c distinctBy $)[2]],
		("4" when (((flowVars.findingsMaltreatmentType[$$].Finding_Type__c[3] == flowVars.findingsMaltreatmentType[$$].Finding_Type__c[0]) or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[3] == flowVars.findingsMaltreatmentType[$$].Finding_Type__c[1]) or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[3] == flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2]) or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == "2") or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == "1") or (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[2] == "3")) and  (flowVars.findingsMaltreatmentType[$$].Finding_Type__c[3] != null) ) otherwise ("5" when flowVars.findingsMaltreatmentType[$$].Finding_Type__c[3] == null otherwise flowVars.findingsMaltreatmentType[$$].Finding_Type__c[3]) default "5") : priority[(flowVars.findingsMaltreatmentType[$$].Primary_Finding_Type__c distinctBy $)[3]]
	} default [] filter $ != null 
]]></dw:set-variable>
<dw:set-variable variableName="PrimaryAllegation"><![CDATA[%dw 1.0
%output application/java
---
flowVars.casepersonscurrent map (flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0].MaltreatmentList default [] filter $ != null) distinctBy $
]]></dw:set-variable>
                    </dw:transform-message>
                    <dw:transform-message doc:name="Transform Messege: Sort Finding Allegation">
<dw:set-variable variableName="FindingAllegation"><![CDATA[%dw 1.0
%output application/java 
---
//((flowVars.FindingAllegation[0] default [] ) ++ (flowVars.FindingAllegation[1] default [] ) ++ (flowVars.FindingAllegation[2] default [] ) ++ (flowVars.FindingAllegation[3] default [] ) filter $ != null) orderBy $$ map $ distinctBy $
flowVars.FindingAllegation map ($ filter $ != null orderBy $$ distinctBy $)
]]></dw:set-variable>
<dw:set-variable variableName="FindingAllegationString"><![CDATA[%dw 1.0
%output application/java 
---
//((flowVars.FindingAllegationString[0] default [] ) ++ (flowVars.FindingAllegationString[1] default [] ) ++ (flowVars.FindingAllegationString[2] default [] ) ++ (flowVars.FindingAllegationString[3] default [] ) filter $ != [null]) orderBy $$ map $ distinctBy $
flowVars.FindingAllegationString map ($ filter $ != null orderBy $$ distinctBy $)
]]></dw:set-variable>               
                    </dw:transform-message>
                    <dw:transform-message doc:name="Transform Message : Calculate Elements">
                        <dw:input-payload mimeType="application/java"/>
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%function pad(char, times) (char ++ pad(char, times - 1)) when times > 0 otherwise ""
%function getAge(date1,date2)  ( abs (date1 - date2).years)
%function encrypt(str) (( pad("0",( 12 - ( sizeOf (( 999999999999 - (str as :number)) as :string ) ))) ++ (999999999999 - (str as :number)) ) splitBy "" reduce ((val,acc = "") -> acc ++ (flowVars.LOVReturned[ ("ENCRYPTION_MAPPING-" ++ val)][0] default ""))   )
%function encryptPad(str) ( (encrypt(str)) when ((flowVars.ReportData.Encrypt_PID__c != null ) and (flowVars.ReportData.Encrypt_PID__c == "true" )) otherwise (( pad("0",(12 - (sizeOf str))) ++ str) when (str != null) otherwise "" ) )
%function raceDetermine(primary,secondary,expectedvalue) ("1" when ( ((primary default "") == expectedvalue) or ((secondary default "") == expectedvalue)) otherwise ("9" when ((primary default "") == "Unable to Determine") otherwise "2"))
%function getDSTAdjustedDatetime1(standarddatetime) (((standarddatetime >> "US/Eastern") ) - |PT1H|) when (not (isDateInDST(((standarddatetime >> "US/Eastern") >> "US/Eastern") as :date,"US/Eastern") == true)) otherwise (standarddatetime >> "US/Eastern")
%function getDSTAdjustedDatetime(standarddatetime) (standarddatetime - |PT4H| )  when  (isDateInDST(((standarddatetime - |PT4H|) ) as :date,"US/Eastern") == true) otherwise (standarddatetime - |PT5H|)
%var priorityMap = {
"Physical Abuse" : "1",
"Abuse" : "1",
"Neglect" : "2",
"Sexual Abuse/Exploitation" : "4",
"Sex Abuse" : "4",
"Emotional Neglect (Mild To Moderate)" : "5",
"Emotional Neglect (Severe)" : "5",
"Emotional Abuse (Mild To Moderate)" : "5",
"Emotional Abuse (Severe)" : "5",
"Emotional Abuse/Neglect" : "5",
"Dependency" : "8",
"Blank" : "6"
}
---
flowVars.casepersonscurrent map {
	"isDST" : isDateInDST(($.Case__r.Associated_Intake__r.Report_Date__c as :date),"US/Eastern"),
	"PID" : $.Person_PID__c default "",
	"CaseID" : $.Case__r.Name default "",
	"SubmissionYear"  : flowVars.ReportData.Federal_Fiscal_Year__c default "", 
	"StateTerritory" : "DE", 
	"ReportID" : encryptPad($.Case__r.Associated_Intake__r.Name) when (($.Case__r.Associated_Intake__r.Name != null) ) otherwise ($.Case__r.Associated_Intake__r.Name default ""),
	"ChildID" :  encryptPad($.Person_PID__c) when ($.Person_PID__c !=null ) otherwise ($.Person_PID__c default ""),	
	"CountyofReport" :  (flowVars.LOVReturned[( "COUNTY_MAP-" ++ (upper ($.Case__r.Associated_Intake__r.County__c default "")))][0]) default "",
	"ReportDate" : (((getDSTAdjustedDatetime(flowVars.initReport[$.Case__c].Report_Date__c[0] as :datetime) ) ) as :string {format : "MMddyyyy"}) when ((flowVars.initReport[$.Case__c] != null) and ( flowVars.initReport[$.Case__c].Report_Date__c[0] != null)) otherwise "",
    "InvestigationStartDate" : ( ( getDSTAdjustedDatetime( flowVars.initInterview[$.Case__c].Interview_DateTime__c[0] as :datetime)   ) as :string {format : "MMddyyyy"} ) when ( (flowVars.initInterview[$.Case__c] != null) and ( flowVars.initInterview[$.Case__c].Interview_DateTime__c[0] != null) ) otherwise ($.Case__r.Case_Open_Date__c  as :date {format : "yyyy-MM-dd"} as :string {format : "MMddyyyy"}),
	"InvestigationStartDateError" : "No DFS Initial Interview found for the Case" when ( (flowVars.initInterview[$.Case__c] == null) or ( (flowVars.initInterview[$.Case__c] != null) and ( flowVars.initInterview[$.Case__c].Interview_DateTime__c[0] == null) )  ) otherwise null,
	//"ReportTime" : ( ( getDSTAdjustedDatetime(flowVars.initReport[$.Case__c].Report_Date__c[0] as :datetime)  ) as :string {format : "HHmm"}) when ($.Case__r.Associated_Intake__r.Report_Date__c != null) otherwise "",	
	"InvestigationStartTime" : ( ( getDSTAdjustedDatetime( flowVars.initInterview[$.Case__c].Interview_DateTime__c[0] as :datetime )   ) as :string {format : "HHmm"} ) when ( (flowVars.initInterview[$.Case__c] != null) and ( flowVars.initInterview[$.Case__c].Interview_DateTime__c[0] != null) ) otherwise "",
	"ReportTime" : ( ( getDSTAdjustedDatetime($.Case__r.Associated_Intake__r.Report_Date__c as :datetime)   ) as :string {format : "HHmm"}) when ($.Case__r.Associated_Intake__r.Report_Date__c != null) otherwise "",
	
	"ReportSource" : ( flowVars.LOVReturned[("REPORT_SOURCE-" ++ ($.Case__r.Associated_Intake__r.Report_Source__c) )][0] default "88" ) when ($.Case__r.Associated_Intake__r.Report_Source__c != null) otherwise "99",	
	"ReportDisposition" : ( ( (flowVars.LOVReturned[("DISPOSITION_MAP-" ++ $.Case__r.Investigation_Outcome__c)][0]) when ( (flowVars.LOVReturned[("DISPOSITION_MAP-" ++ $.Case__r.Investigation_Outcome__c)][0]) != null ) otherwise ("07" when ((sizeOf (flowVars.findingsInfoMap[flowVars.caseId] default {})) > 0) otherwise "88" ) ) when ($.Case__r.Investigation_Outcome__c != null)  otherwise "99" ) when ($.Case__r.Status__c != "Abridged") otherwise ( "07" when ($.Case__r.Status__c == "Abridged") otherwise "99" ),
	
	"ReportDispositionDate" : ($.Case__r.Case_Close_Date__c as :date as :string {format : "MMddyyyy"}) when ($.Case__r.Status__c == "Abridged") otherwise ( $.Case__r.Date_Completed__c as :date as :string {format : "MMddyyyy"} when ($.Case__r.Date_Completed__c != null) otherwise ($.Case__r.Case_Close_Date__c as :date as :string {format : "MMddyyyy"}) ),
	"Notifications" : ("3") when ($.Case__r.Case_Type__c == "IA Investigation") otherwise (( "2" when ($.Case__r.Associated_Intake__r.Report_Referred_to_Law_Enforcement__c == "Yes") otherwise ("1" when ($.Case__r.Associated_Intake__r.Report_Referred_to_Law_Enforcement__c == "No") otherwise "9")) when ($.Case__r.Case_Type__c == "Family Investigation") otherwise "9"),  
	"NotificationsError" : "No Originating Intake found" when ($.Case__r.Associated_Intake__r == null) otherwise null,
	
	"IntakeReportDate" : $.Case__r.Associated_Intake__r.Report_Date__c,
	//"ChildAgeatReport" :  ( "77" when (($.Person__r.Birthdate as :date) > ($.Case__r.Associated_Intake__r.Report_Date__c as :date) ) otherwise ( pad("0",(2 - (sizeOf ( (getAge($.Case__r.Associated_Intake__r.Report_Date__c as :date,($.Person__r.Birthdate as :date))) as :string ) ))) ++ ( (getAge($.Case__r.Associated_Intake__r.Report_Date__c as :date,($.Person__r.Birthdate as :date))) as :string )) when (getAge($.Case__r.Associated_Intake__r.Report_Date__c as :date,($.Person__r.Birthdate as :date)) <= 75) otherwise "75"  ) when (($.Person__r.Birthdate as :date) != null and $.Case__r.Associated_Intake__r.Report_Date__c != null) otherwise "",
	"ChildDateofBirth" : ( $.Person__r.Birthdate as :date as :string {format : "MMddyyyy"}) when ($.Person__r.Birthdate != null) otherwise ( ( flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c].DOB__c  as :date as :string {format : "MMddyyyy"}  ) when ( (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c] != null) and  (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c] != null) and flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c].DOB__c != null ) otherwise "" ),
	
	"ChildSex" :  ((flowVars.LOVReturned[( "CHILD_SEX-" ++ ($.Person__r.DEL_Gender__c default ""))][0] default "" )) when ($.Person__r.DEL_Gender__c != null) otherwise (  (flowVars.LOVReturned[( "CHILD_SEX-" ++ flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c].Gender__c default "")][0] default "" ) when ((flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c] != null ) and (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c] != null) ) otherwise "" ),	
	
	"ChildRaceAmericanIndianorAlaskaNative" : ("1" when ( (($.Person__r.DEL_Race_Primary__c default "") == "American Indian or Alaskan Native") or (($.Person__r.DEL_Race_Secondary__c default "") == "American Indian or Alaskan Native")) otherwise ("9" when (($.Person__r.DEL_Race_Primary__c default "") == "Unable to Determine") otherwise "2") ) when ($.Person__r.DEL_Race_Primary__c != null) otherwise ("1" when ( (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c].Race__c default "") == "American Indian or Alaskan Native") otherwise ("9" when ( (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c].Race__c default "") == "Unable to Determine") otherwise "2" ) ) ,

	"ChildRaceAsian" : ("1" when ( (($.Person__r.DEL_Race_Primary__c default "") == "Asian") or (($.Person__r.DEL_Race_Secondary__c default "") == "Asian")) otherwise ("9" when (($.Person__r.DEL_Race_Primary__c default "") == "Unable to Determine") otherwise "2") ) when ($.Person__r.DEL_Race_Primary__c != null) otherwise ("1" when ( (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c].Race__c default "") == "Asian") otherwise ("9" when ( (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c].Race__c default "") == "Unable to Determine") otherwise "2" ) ) ,	
	
	"ChildRaceBlackorAfricanAmerican" : ("1" when ( (($.Person__r.DEL_Race_Primary__c default "") == "Black or African American") or (($.Person__r.DEL_Race_Secondary__c default "") == "Black or African American")) otherwise ("9" when (($.Person__r.DEL_Race_Primary__c default "") == "Unable to Determine") otherwise "2") ) when ($.Person__r.DEL_Race_Primary__c != null) otherwise ("1" when ( (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c].Race__c default "") == "Black or African American") otherwise ("9" when ( (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c].Race__c default "") == "Unable to Determine") otherwise "2" ) ) ,	

	"ChildRaceNativeHawaiianorOtherPacificIslander" : ("1" when ( (($.Person__r.DEL_Race_Primary__c default "") == "Native Hawaiian or Other Pacific Islander") or (($.Person__r.DEL_Race_Secondary__c default "") == "Native Hawaiian or Other Pacific Islander")) otherwise ("9" when (($.Person__r.DEL_Race_Primary__c default "") == "Unable to Determine") otherwise "2") ) when ($.Person__r.DEL_Race_Primary__c != null) otherwise ("1" when ( (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c].Race__c default "") == "Native Hawaiian or Other Pacific Islander") otherwise ("9" when ( (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c].Race__c default "") == "Unable to Determine") otherwise "2" ) ) ,	

	"ChildRaceWhite" : ("1" when ( (($.Person__r.DEL_Race_Primary__c default "") == "White") or (($.Person__r.DEL_Race_Secondary__c default "") == "White")) otherwise ("9" when (($.Person__r.DEL_Race_Primary__c default "") == "Unable to Determine") otherwise "2") ) when ($.Person__r.DEL_Race_Primary__c != null) otherwise ("1" when ( (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c].Race__c default "") == "White") otherwise ("9" when ( (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c].Race__c default "") == "Unable to Determine") otherwise "2" ) ),	

	"ChildRaceUnabletoDetermine" : (("1" when (($.Person__r.DEL_Race_Primary__c default "") == "Unable to Determine") otherwise "2")) when ($.Person__r.DEL_Race_Primary__c != null) otherwise ("1" when ( (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c].Race__c default "") == "Unable to Determine") otherwise "2"),
		
	"ChildEthnicity" : ( flowVars.LOVReturned[("CHILD_ETHNICITY-" ++ ($.Person__r.DEL_Ethnicity__c))][0] default "9" ) when ($.Person__r.DEL_Ethnicity__c != null) otherwise (  (flowVars.LOVReturned[( "CHILD_ETHNICITY-" ++ flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c].Ethnicity__c default "")][0] default "" ) when ((flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c] != null ) and (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c] != null) ) otherwise "" ),
	"CountyofResidence" : ( flowVars.LOVReturned[("COUNTY_MAP-" ++ ( upper ( (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c])[0].Intake_Address__r.County__c default "") ) )][0] default "" ) when ( (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c] != null) and (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c] != null) and (flowVars.intakePersonsMap[$.Case__r.Associated_Intake__c][$.Person__c][0].Intake_Address__r.County__c != null) ) otherwise "999",

	"LivingArrangement" : (flowVars.LOVReturned[("LIVING_ARRANGEMENT-" ++ ($.Case__r.Living_Arrangement__c default ""))][0] default "99") when ($.Case__r.Living_Arrangement__c != null) otherwise "99", 
	"LivingArrangement2" : (flowVars.LOVReturned[("LIVING_ARRANGEMENT-" ++ (flowVars.ncandsriskfactorsMap[$.Id][0].Living_Arrangement__c))][0] default "99") when (flowVars.ncandsriskfactorsMap[$.Id][0].Living_Arrangement__c != null) otherwise "99",
	
	"MilitaryFamilyMember" : "1" when ( (($.Case__r.Primary_Caregiver_Member_of_Military__c default "") == "Yes") or (($.Case__r.Secondary_Caregiver_Member_of_Military__c default "") == "Yes") ) otherwise ("2" when ( (($.Case__r.Primary_Caregiver_Member_of_Military__c default "") == "No") or (($.Case__r.Secondary_Caregiver_Member_of_Military__c default "") == "No") ) otherwise "9" ),
	"MilitaryFamilyMember2" : "1" when ( ( (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Primary_Caregiver_Member_of_Military__c == "Yes") or 	(flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Secondary_Caregiver_Member_of_Military__c == "Yes") ) ) otherwise ("2" when ( ( (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Primary_Caregiver_Member_of_Military__c == "No") or 	(flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Secondary_Caregiver_Member_of_Military__c == "No") ) ) otherwise "9"),	
	
	"PriorVictims"  : "2" when (flowVars.priorVictimsInfo[$.Person__c] == null) otherwise ( "1" when 
	 ( (sizeOf (flowVars.priorVictimsInfo[$.Person__c] default [] )) > 0 )
	otherwise "2" ),
	"PrimaryAllegation" : flowVars.PrimaryAllegation[0] ,
	"FindingAllegation" : flowVars.FindingAllegation[$$],
	"FindingAllegationString" : flowVars.FindingAllegationString[$$],
	//"Maltreatment-1Type" : ( ( ( priorityMap[flowVars.findingsInfoMap[flowVars.caseId][$.Id].Finding_ID__r.Primary_Finding_Type__c[0]]) when ( ( ( sizeOf (  (flowVars.findingsInfoMap[flowVars.caseId][$.Id] default []) filter ( (($.Finding_ID__r.Finding_Status__c default "") == "Completed" ) and (($.Finding_ID__r.Finding_Type__c == "Primary" ) or ($.Finding_ID__r.Finding_Type__c == "Secondary" ) or ($.Finding_ID__r.Finding_Type__c == "Tertiary" ) or ($.Finding_ID__r.Finding_Type__c == "Additional") ) ) ) ) > 0 ) and flowVars.findingsInfoMap[flowVars.caseId][$.Id].Finding_ID__r.Primary_Finding_Type__c[0] != null )  otherwise ( flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0].MaltreatmentList[0] default "6" ))) ,			
	"Maltreatment-1Type" : ( ( ( flowVars.FindingAllegation[$$][0]) when ( ( ( sizeOf (  (flowVars.findingsInfoMap[flowVars.caseId][$.Id] default []) filter ( (($.Finding_ID__r.Finding_Status__c default "") == "Completed" ) and (($.Finding_ID__r.Finding_Type__c == "Primary" ) or ($.Finding_ID__r.Finding_Type__c == "Secondary" ) or ($.Finding_ID__r.Finding_Type__c == "Tertiary" ) or ($.Finding_ID__r.Finding_Type__c == "Additional") ) ) ) ) > 0 ) and (flowVars.FindingAllegation[$$][0] != null) )  otherwise ( flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0].MaltreatmentList[0] default "6" ))) ,
	"Maltreatment-1DispositionLevel" : using (assIntakeId = $.Case__r.Associated_Intake__c default "") ( "05" when ($.Role__c != "Victim") otherwise ( "07" when ($.Case__r.Status__c == "Abridged") otherwise ("05" when ( ["Unsubstantiated","No Evidence to Substantiate","Unsubstantiated with Concern"] contains ($.Case__r.Investigation_Outcome__c default "") ) otherwise ( "01" when ((( sizeOf ( (( (flowVars.findingsInfoMap[flowVars.caseId] default {})[$.Id] ) default [] ) filter ( ($.Finding_ID__r.Finding_Status__c == "Completed" ) and ( ("Substantiated") contains ($.Finding_ID__r.Perpetrator_Outcome__c default "" ) ) ) ) ) > 0) and ( ("Substantiated") contains ($.Case__r.Investigation_Outcome__c default "") ) ) otherwise "99" ) ) ) ),
	//"Maltreatment-1TypeString" :  flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0].MaltreatmentType[0] default [],
	"Maltreatment-1TypeString" : flowVars.FindingAllegationString[$$][0] default [],
	//"FindingAllegation" : ($."FindingAllegation" -- [$."FindingAllegation"[0]] default []) when ($."FindingAllegation"[0] default "" == $."Maltreatment-1Type") otherwise [],
	//"PrimaryAllegation" : ($."PrimaryAllegation" -- [$."PrimaryAllegation"[0]] default []) when ($."PrimaryAllegation"[0] default "" == $."Maltreatment-1Type") otherwise [],  
	
	//"Maltreatment-2Type" : ( ( ( priorityMap[flowVars.findingsInfoMap[flowVars.caseId][$.Id].Finding_ID__r.Primary_Finding_Type__c[1]]) when ( ( ( sizeOf (  (flowVars.findingsInfoMap[flowVars.caseId][$.Id] default []) filter ( (($.Finding_ID__r.Finding_Status__c default "") == "Completed" ) and (($.Finding_ID__r.Finding_Type__c == "Primary" ) or ($.Finding_ID__r.Finding_Type__c == "Secondary" ) or ($.Finding_ID__r.Finding_Type__c == "Tertiary" ) or ($.Finding_ID__r.Finding_Type__c == "Additional") ) ) ) ) > 0 ) and flowVars.findingsInfoMap[flowVars.caseId][$.Id].Finding_ID__r.Primary_Finding_Type__c[1] != null )  otherwise ( flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0].MaltreatmentList[1] when (flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0].MaltreatmentList[1] != null) otherwise (flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0].MaltreatmentList[0] default "9") ))),
	"Maltreatment-2Type" : ( ( ( flowVars.FindingAllegation[$$][1]) when ( ( ( sizeOf (  (flowVars.findingsInfoMap[flowVars.caseId][$.Id] default []) filter ( (($.Finding_ID__r.Finding_Status__c default "") == "Completed" ) and (($.Finding_ID__r.Finding_Type__c == "Primary" ) or ($.Finding_ID__r.Finding_Type__c == "Secondary" ) or ($.Finding_ID__r.Finding_Type__c == "Tertiary" ) or ($.Finding_ID__r.Finding_Type__c == "Additional") ) ) ) ) > 0 ) and (flowVars.FindingAllegation[$$][1] != null) )  otherwise ( flowVars.PrimaryAllegation[0][0] default "9" ))),
	"Maltreatment-2DispositionLevel" : using (assIntakeId = $.Case__r.Associated_Intake__c default "") ( "05" when ($.Role__c != "Victim") otherwise ( "07" when ($.Case__r.Status__c == "Abridged") otherwise ("05" when ( ["Unsubstantiated","No Evidence to Substantiate","Unsubstantiated with Concern"] contains ($.Case__r.Investigation_Outcome__c default "") ) otherwise ( "01" when ((( sizeOf ( (( (flowVars.findingsInfoMap[flowVars.caseId] default {})[$.Id] ) default [] ) filter ( ($.Finding_ID__r.Finding_Status__c == "Completed" ) and ( ("Substantiated") contains ($.Finding_ID__r.Perpetrator_Outcome__c default "" ) ) ) ) ) > 0) and ( ("Substantiated") contains ($.Case__r.Investigation_Outcome__c default "") ) ) otherwise "99" ) ) ) ),
	//"Maltreatment-2TypeString" :  flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0].MaltreatmentType[1] default [],
	"Maltreatment-2TypeString" : flowVars.FindingAllegationString[$$][1] default [],
	//"FindingAllegation" : ($."FindingAllegation" -- [$."FindingAllegation"[0]] default []) when ($."FindingAllegation"[0] default "" == $."Maltreatment-2Type") otherwise [],
	//"PrimaryAllegation" : ($."PrimaryAllegation" -- [$."PrimaryAllegation"[0]] default []) when ($."PrimaryAllegation"[0] default "" == $."Maltreatment-2Type") otherwise [],  
	
	//"Maltreatment-3Type" : ( ( ( priorityMap[flowVars.findingsInfoMap[flowVars.caseId][$.Id].Finding_ID__r.Primary_Finding_Type__c[2]]) when ( ( ( sizeOf ( (flowVars.findingsInfoMap[flowVars.caseId][$.Id] default []) filter ( (($.Finding_ID__r.Finding_Status__c default "") == "Completed" ) and (($.Finding_ID__r.Finding_Type__c == "Primary" ) or ($.Finding_ID__r.Finding_Type__c == "Secondary" ) or ($.Finding_ID__r.Finding_Type__c == "Tertiary" ) or ($.Finding_ID__r.Finding_Type__c == "Additional") ) ) ) ) > 0 ) and flowVars.findingsInfoMap[flowVars.caseId][$.Id].Finding_ID__r.Primary_Finding_Type__c[2] != null) otherwise (flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0].MaltreatmentList[2] when (flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0].MaltreatmentList[2] != null) otherwise (flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0].MaltreatmentList[1] )) )),		
	"Maltreatment-3Type" : ( ( ( flowVars.FindingAllegation[$$][2]) when ( ( ( sizeOf ( (flowVars.findingsInfoMap[flowVars.caseId][$.Id] default []) filter ( (($.Finding_ID__r.Finding_Status__c default "") == "Completed" ) and (($.Finding_ID__r.Finding_Type__c == "Primary" ) or ($.Finding_ID__r.Finding_Type__c == "Secondary" ) or ($.Finding_ID__r.Finding_Type__c == "Tertiary" ) or ($.Finding_ID__r.Finding_Type__c == "Additional") ) ) ) ) > 0 ) and (flowVars.FindingAllegation[$$][2] != null)) otherwise (flowVars.PrimaryAllegation[0][0] default "9")) ),
	"Maltreatment-3DispositionLevel" : using (assIntakeId = $.Case__r.Associated_Intake__c default "") ( "05" when ($.Role__c != "Victim") otherwise ( "07" when ($.Case__r.Status__c == "Abridged") otherwise ("05" when ( ["Unsubstantiated","No Evidence to Substantiate","Unsubstantiated with Concern"] contains ($.Case__r.Investigation_Outcome__c default "") ) otherwise ( "01" when ((( sizeOf ( (( (flowVars.findingsInfoMap[flowVars.caseId] default {})[$.Id] ) default [] ) filter ( ($.Finding_ID__r.Finding_Status__c == "Completed" ) and ( ("Substantiated") contains ($.Finding_ID__r.Perpetrator_Outcome__c default "" ) ) ) ) ) > 0) and ( ("Substantiated") contains ($.Case__r.Investigation_Outcome__c default "") ) ) otherwise "99" ) ) ) ),
	//"Maltreatment-3TypeString" :  flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0].MaltreatmentType[2] default [],
	"Maltreatment-3TypeString" : flowVars.FindingAllegationString[$$][2] default [],
	//"FindingAllegation" : ($."FindingAllegation" -- [$."FindingAllegation"[0]] default []) when ($."FindingAllegation"[0] default "" == $."Maltreatment-3Type") otherwise [],
	//"PrimaryAllegation" : ($."PrimaryAllegation" -- [$."PrimaryAllegation"[0]] default []) when ($."PrimaryAllegation"[0] default "" == $."Maltreatment-3Type") otherwise [],  	
	
	"Maltreatment-4Type" : ( ( ( flowVars.FindingAllegation[$$][3]) when (( ( sizeOf (  (flowVars.findingsInfoMap[flowVars.caseId][$.Id] default []) filter ( (($.Finding_ID__r.Finding_Status__c default "") == "Completed" ) and (($.Finding_ID__r.Finding_Type__c == "Primary" ) or ($.Finding_ID__r.Finding_Type__c == "Secondary" ) or ($.Finding_ID__r.Finding_Type__c == "Tertiary" ) or ($.Finding_ID__r.Finding_Type__c == "Additional") ) ) ) ) > 0 ) and (flowVars.FindingAllegation[$$][3] != null)) otherwise (flowVars.PrimaryAllegation[0][0] default "9"))),
	//"Maltreatment-4Type" : ( ( ( priorityMap[flowVars.findingsInfoMap[flowVars.caseId][$.Id].Finding_ID__r.Primary_Finding_Type__c[3]]) when (( ( sizeOf (  (flowVars.findingsInfoMap[flowVars.caseId][$.Id] default []) filter ( (($.Finding_ID__r.Finding_Status__c default "") == "Completed" ) and (($.Finding_ID__r.Finding_Type__c == "Primary" ) or ($.Finding_ID__r.Finding_Type__c == "Secondary" ) or ($.Finding_ID__r.Finding_Type__c == "Tertiary" ) or ($.Finding_ID__r.Finding_Type__c == "Additional") ) ) ) ) > 0 ) and flowVars.findingsInfoMap[flowVars.caseId][$.Id].Finding_ID__r.Primary_Finding_Type__c[3] != null) otherwise (flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0].MaltreatmentList[3] when (flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0].MaltreatmentList[3] != null) otherwise (flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0].MaltreatmentList[2] ) ))),	
	"Maltreatment-4DispositionLevel" : using (assIntakeId = $.Case__r.Associated_Intake__c default "") ( "05" when ($.Role__c != "Victim") otherwise ( "07" when ($.Case__r.Status__c == "Abridged") otherwise ("05" when ( ["Unsubstantiated","No Evidence to Substantiate","Unsubstantiated with Concern"] contains ($.Case__r.Investigation_Outcome__c default "") ) otherwise ( "01" when ((( sizeOf ( (( (flowVars.findingsInfoMap[flowVars.caseId] default {})[$.Id] ) default [] ) filter ( ($.Finding_ID__r.Finding_Status__c == "Completed" ) and ( ("Substantiated") contains ($.Finding_ID__r.Perpetrator_Outcome__c default "" ) ) ) ) ) > 0) and ( ("Substantiated") contains ($.Case__r.Investigation_Outcome__c default "") ) ) otherwise "99" ) ) ) ),
	//"Maltreatment-4TypeString" :  flowVars.intakeInfoRecordsMap[$.Case__r.Associated_Intake__c][0].MaltreatmentType[3] default [],
	"Maltreatment-4TypeString" : flowVars.FindingAllegationString[$$][3] default [],
	"MaltreatmentDeath" : ( ("2" when ($.Role__c != "Victim") otherwise ("1" when ( ( sizeOf (  (flowVars.findingsInfoMap[flowVars.caseId][$.Id] default []) filter ( (($.Finding_ID__r.Finding_Status__c default "") == "Completed" ) and ( ($.Finding_ID__r.Finding_Type__c == "Primary" ) or ($.Finding_ID__r.Finding_Type__c == "Secondary" ) or ($.Finding_ID__r.Finding_Type__c == "Tertiary" ) or ($.Finding_ID__r.Finding_Type__c == "Additional") ) and ( ["Abuse","Neglect"] contains ($.Finding_ID__r.Primary_Finding_Type__c default "")) and ($.Finding_ID__r.Maltreatment_Type__c == "Death")  )  ) ) > 0) otherwise "2" ))  when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" ) otherwise ("2" when (($.Case__r.Status__c == "Abridged" or $.Case__r.Investigation_Outcome__c == "Unsubstantiated" or $.Case__r.Investigation_Outcome__c == "Unsubstantiated with Concern" or $.Case__r.Investigation_Outcome__c == "No Evidence to Substantiate" )  ) otherwise "9"  ) ),	
	"DateofDeath" : ($.Person__r.DEL_Date_of_Death__c as :date as :string {format : "MMddyyyy"}) when ($.Person__r.DEL_Date_of_Death__c != null) otherwise "",
	"checkCase" : ( ($.Case__r.Case_Close_Date__c as :date) <= (flowVars.riskDactorDeciderDate) ),
	
	//"PrimaryCaregiverID" : $.Case__r.Primary_Caregiver__c when ( ($.Case__r.Case_Close_Date__c as :date) <= (flowVars.riskDactorDeciderDate) ) otherwise  flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Primary_Caregiver__c,
	//"PrimaryCaregiverID" : flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Primary_Caregiver__c,
	"PrimaryCaregiverID" : $.Case__r.Primary_Caregiver__c when ( ($.Case__r.Primary_Caregiver__c != null) ) otherwise  flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Primary_Caregiver__c,
	"PrimaryCaregiverMOM" : $.Case__r.Primary_Caregiver_Member_of_Military__c when ( ($.Case__r.Case_Close_Date__c as :date) <= (flowVars.riskDactorDeciderDate) ) otherwise flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Primary_Caregiver_Member_of_Military__c,
	//"SecondaryCaregiverID" : $.Case__r.Secondary_Caregiver__c when ( ($.Case__r.Case_Close_Date__c as :date) <= (flowVars.riskDactorDeciderDate) ) otherwise flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Secondary_Caregiver__c,
	//"SecondaryCaregiverID" : flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Secondary_Caregiver__c,
	"SecondaryCaregiverID" : $.Case__r.Secondary_Caregiver__c when ( ($.Case__r.Secondary_Caregiver__c != null) ) otherwise flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Secondary_Caregiver__c,
	"SecondaryCaregiverMOM" : $.Case__r.Secondary_Caregiver_Member_of_Military__c when ( ($.Case__r.Case_Close_Date__c as :date) <= (flowVars.riskDactorDeciderDate) ) otherwise flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Secondary_Caregiver_Member_of_Military__c,
	
	"AlcoholAbuse-Child" : (("1") when ($.Case__r.Alcohol_Abuse__c == "Yes") otherwise "2" ) when ( ($.Case__r.Status__c != "Abridged") and ($.Case__r.Investigation_Outcome__c == "Substantiated") and ($.Case__r.Alcohol_Abuse__c != null) ) otherwise "9",	
	"AlcoholAbuse-Child2" : (("1") when (flowVars.ncandsriskfactorsMap[$.Id][0].Alcohol_Abuse__c == "Yes") otherwise "2" ) when ($.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsMap[$.Id][0].Alcohol_Abuse__c != null) ) otherwise "9",
	
	"DrugAbuse-Child" : (("1") when ($.Case__r.Drug_Abuse__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ($.Case__r.Drug_Abuse__c != null) ) otherwise "9",	
	"DrugAbuse-Child2" : (("1") when ((flowVars.ncandsriskfactorsMap[$.Id][0].Drug_Abuse__c default "") == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsMap[$.Id][0].Drug_Abuse__c != null) ) otherwise "9",
	
	"MentalRetardation-Child" : (("1") when ($.Case__r.Mental_Retardation__c  == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ($.Case__r.Mental_Retardation__c != null) ) otherwise "9",
	"MentalRetardation-Child2" : (("1") when (flowVars.ncandsriskfactorsMap[$.Id][0].Intellectual_Disability__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsMap[$.Id][0].Intellectual_Disability__c != null) ) otherwise "9",
	
	"EmotionallyDisturbed-Child" : (("1") when ($.Case__r.Clinically_Diag_Emotional_Disturbance__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ($.Case__r.Clinically_Diag_Emotional_Disturbance__c != null) ) otherwise "9",
	"EmotionallyDisturbed-Child2" : (("1") when (flowVars.ncandsriskfactorsMap[$.Id][0].Clinically_Diag_Emotional_Disturbance__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsMap[$.Id][0].Clinically_Diag_Emotional_Disturbance__c != null) ) otherwise "9",
	
	"VisuallyorHearingImpaired-Child" : (("1") when ($.Case__r.Visually_Hearing_Impaired__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ($.Case__r.Visually_Hearing_Impaired__c != null) ) otherwise "9",
	"VisuallyorHearingImpaired-Child2" : (("1") when (flowVars.ncandsriskfactorsMap[$.Id][0].Visually_Hearing_Impaired__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsMap[$.Id][0].Visually_Hearing_Impaired__c != null) ) otherwise "9",
	
	"LearningDisability-Child" : (("1") when ($.Case__r.Learning_Disability__c == "Yes") otherwise "2" ) when ( ($.Case__r.Status__c != "Abridged") and ($.Case__r.Investigation_Outcome__c == "Substantiated") and ($.Case__r.Learning_Disability__c != null)  ) otherwise "9" ,
	"LearningDisability-Child2" : (("1") when (flowVars.ncandsriskfactorsMap[$.Id][0].Learning_Disability__c  == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsMap[$.Id][0].Learning_Disability__c != null) ) otherwise "9",
	
	"PhysicallyDisabled-Child" : (("1") when ($.Case__r.Phy_Defect_Handicap_Delayed_Phy_Dev__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ($.Case__r.Phy_Defect_Handicap_Delayed_Phy_Dev__c != null) ) otherwise "9",
	"PhysicallyDisabled-Child2" : (("1") when (flowVars.ncandsriskfactorsMap[$.Id][0].Phy_Defect_Handicap_Delayed_Phy_Dev__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsMap[$.Id][0].Phy_Defect_Handicap_Delayed_Phy_Dev__c != null) ) otherwise "9",
	
	"BehaviorProblem-Child" : (("1") when ($.Case__r.Behavior_Problem_Child__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ($.Case__r.Behavior_Problem_Child__c != null) ) otherwise "9",
	"BehaviorProblem-Child2" : (("1") when (flowVars.ncandsriskfactorsMap[$.Id][0].Behavior_Problem_Child__c  == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsMap[$.Id][0].Behavior_Problem_Child__c != null) ) otherwise "9",
	
	"OtherMedicalCondition-Child" : (("1") when ($.Case__r.Other_Med_Diag_Condition_With_Spl_Care__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ($.Case__r.Other_Med_Diag_Condition_With_Spl_Care__c != null) ) otherwise "9",
	"OtherMedicalCondition-Child2" : (("1") when (flowVars.ncandsriskfactorsMap[$.Id][0].Other_Med_Diag_Condition_With_Spl_Care__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsMap[$.Id][0].Other_Med_Diag_Condition_With_Spl_Care__c != null) ) otherwise "9",

	"AlcoholAbuse-Caregiver(s)" : (("1") when ($.Case__r.Addiction_Alcohol_Misuse__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ($.Case__r.Addiction_Alcohol_Misuse__c != null) ) otherwise "9",
	"AlcoholAbuse-Caregiver(s)2" : (("1") when (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Alcohol_Abuse__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Alcohol_Abuse__c != null) ) otherwise "9",
	
	"DrugAbuse-Caregiver(s)" : (("1") when (($.Case__r.Addiction_Drug_Misuse__c default "") == "Yes") otherwise ("2" when (($.Case__r.Addiction_Drug_Misuse__c default "") == "No") otherwise "9") ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ( ($.Case__r.Addiction_Drug_Misuse__c default "") != "") ) otherwise "9",
	"DrugAbuse-Caregiver(s)2" : (("1") when (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Drug_Abuse__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Drug_Abuse__c != null) ) otherwise "9",
	
	"MentalRetardation-Caregiver(s)" : (("1") when (($.Case__r.Mental_Retardation_Caregiver__c default "") == "Yes") otherwise ("2" when (($.Case__r.Mental_Retardation_Caregiver__c default "") == "No") otherwise "9") ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ( ($.Case__r.Mental_Retardation_Caregiver__c default "") != "") ) otherwise "9",
	"MentalRetardation-Caregiver(s)2" : (("1") when (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Intellectual_Disability__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Intellectual_Disability__c != null) ) otherwise "9",	
	
	"EmotionallyDisturbed-Caregiver(s)" : (("1") when ($.Case__r.Clinically_Diag_Emotional_Dist_Caregiver__c  == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ( $.Case__r.Clinically_Diag_Emotional_Dist_Caregiver__c  != null) ) otherwise "9",
	"EmotionallyDisturbed-Caregiver(s)2" : (("1") when (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Clinically_Diag_Emotional_Dist_Caregiver__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Clinically_Diag_Emotional_Dist_Caregiver__c != null) ) otherwise "9",
	
	"VisuallyorHearingImpaired-Caregiver(s)" : (("1") when ($.Case__r.Visually_Hearing_Impaired_caregiver__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ( $.Case__r.Visually_Hearing_Impaired_caregiver__c  != null) ) otherwise "9",
	"VisuallyorHearingImpaired-Caregiver(s)2" : (("1") when (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Visually_Hearing_Impaired_caregiver__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Visually_Hearing_Impaired_caregiver__c != null) ) otherwise "9",
	
	"LearningDisability-Caregiver(s)" : (("1") when ($.Case__r.Learning_Disability_Caregiver__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ( $.Case__r.Learning_Disability_Caregiver__c  != null) ) otherwise "9",
	"LearningDisability-Caregiver(s)2" : (("1") when (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Learning_Disability_Caregiver__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Learning_Disability_Caregiver__c != null) ) otherwise "9",
	
	"PhysicallyDisabled-Caregiver(s)" : (("1") when ($.Case__r.Physically_Disabled_Defects_Handicaps__c  == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ( $.Case__r.Physically_Disabled_Defects_Handicaps__c  != null) ) otherwise "9",
	"PhysicallyDisabled-Caregiver(s)2" : (("1") when (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Physically_Disabled_Defects_Handicaps__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Physically_Disabled_Defects_Handicaps__c != null) ) otherwise "9",
	
	"OtherMedicalCondition-Caregiver(s)" : (("1") when (($.Case__r.Other_Medical_Chronic_Condition__c default "") == "Yes") otherwise ("2" when (($.Case__r.Other_Medical_Chronic_Condition__c default "") == "No") otherwise "9") ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (($.Case__r.Other_Medical_Chronic_Condition__c default "") != "") ) otherwise "9",
	"OtherMedicalCondition-Caregiver(s)2" : (("1") when (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Other_Medical_Chronic_Condition__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Other_Medical_Chronic_Condition__c != null) ) otherwise "9",
	
	"DomesticViolence" : (("1") when ($.Case__r.Domestic_Violence__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ($.Case__r.Domestic_Violence__c != null) ) otherwise "9",
	"DomesticViolence2" : (("1") when (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Domestic_Violence__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Domestic_Violence__c != null) ) otherwise "9",
	
	"InadequateHousing" : (("1") when ($.Case__r.Housing_Problems__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ($.Case__r.Housing_Problems__c != null) ) otherwise "9",
	"InadequateHousing2" : (("1") when (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Housing_Problems__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Housing_Problems__c != null) ) otherwise "9",
	
	"FinancialProblem" : (("1") when ($.Case__r.Low_Income_Financial_Stress__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and ($.Case__r.Low_Income_Financial_Stress__c != null) ) otherwise "9",
	"FinancialProblem2" : (("1") when (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Low_Income_Financial_Stress__c == "Yes") otherwise "2" ) when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsCaregiverMap[$.Case__c][0].Low_Income_Financial_Stress__c != null) ) otherwise "9",

	"HasAPlanofSafeCare" : (("1") when (flowVars.ncandsriskfactorsMap[$.Id][0].Has_a_Plan_of_Safe_Care_CARA__c  == "Yes") otherwise "2" ) when ($.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsMap[$.Id][0].Has_a_Plan_of_Safe_Care_CARA__c != null) ) otherwise "9",
	"CARA-RelatedServices" : (("1") when (flowVars.ncandsriskfactorsMap[$.Id][0].Referral_to_CARA_Related_Services__c == "Yes") otherwise "2" ) when ($.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" and (flowVars.ncandsriskfactorsMap[$.Id][0].Referral_to_CARA_Related_Services__c != null) ) otherwise "9",
	
	"PublicAssistance" : "9" when ($.Case__r.Status__c == "Abridged" or $.Case__r.Case_Type__c != "Family Investigation" ) otherwise  ( "9" when ((flowVars.sdkAssessmentMap[$.Case__c] == null) or (flowVars.sdkAssessmentMap[$.Case__c][0] == null) or (flowVars.sdkAssessmentMap[$.Case__c][0].S3__c == null) ) otherwise ("1" when ( ((flowVars.sdkAssessmentMap[$.Case__c][0].S3__c splitBy ";") contains "SNAP") or ((flowVars.sdkAssessmentMap[$.Case__c][0].S3__c splitBy ";") contains "TANF") or ((flowVars.sdkAssessmentMap[$.Case__c][0].S3__c splitBy ";") contains "Medicaid") or ((flowVars.sdkAssessmentMap[$.Case__c][0].S3__c splitBy ";") contains "Yes") or ((flowVars.sdkAssessmentMap[$.Case__c][0].S3__c splitBy ";") contains "Public Assistance") ) otherwise "2") ), 
	"PostResponseServices"  : "1" when (( ($.Case__r.Status__c != "Abridged")  and ( (sizeOf flowVars.currentAssociatedCases) > 0 ) ) or ( ($.Case__r.Status__c == "Abridged")  and ( (sizeOf flowVars.currentAssociatedCases) > 0 ) ))  otherwise "2",
		
	"EarliestCaseConf" : using (case1 = $.Case__r default {}) (((flowVars.associatedCasesMap[$.Case__c] default [] 
			filter ( ($.Conference_Status__c  == "Completed" ) and (($.Case_ID__r.Case_Type__c == "Treatment") or ($.Case_ID__r.Case_Type__c == "Permanency")) and (($.Conference_DateTime__c as :datetime as :date) <= ((case1.Case_Close_Date__c) + |P90D|)) 
				and (($.Conference_DateTime__c as :datetime as :date) >= (case1.Case_Open_Date__c)) 
			)
		) orderBy $.Conference_DateTime__c)[0]),
		
	"CaseConfTPG" : using (case1 = $.Case__r default {}) (((flowVars.associatedCasesMap[$.Case__c] default [] 
			filter ( (($.Case_ID__r.Case_Type__c == "Treatment") or ($.Case_ID__r.Case_Type__c == "Permanency") or ($.Case_ID__r.Case_Type__c == "Guardianship") )  
				
			)
		) )[0]),		
		
	"petition" : using (case1 = $.Case__r default {}) ( ( ( (flowVars.petitionsMap[$.Person__c] default []) filter ( ($.Petition_Children__r.Petition_Date__c != null) and ($.Petition_Children__r.Petition_Date__c >= (case1.Case_Open_Date__c)) and ($.Petition_Children__r.Petition_Date__c <= (case1.Case_Close_Date__c))  ) ) orderBy $.Petition_Children__r.Petition_Date__c )[-1..0] )[0] ,			

	"ServiceDatePlacement" : using (case1 = $.Case__r default {}) ( ( ((flowVars.placementinfoMap[$.Person__c] default []) filter ( ( ($.Placement_Start_Date_Division_Wide__c as :date) >= (case1.Case_Open_Date__c) ) and ( ($.Placement_Start_Date_Division_Wide__c as :date) <= (case1.Case_Close_Date__c) ) and ( ($.Placement_End_Date_Division_Wide__c == null) or ( (($.Placement_End_Date_Division_Wide__c as :date) >= (case1.Case_Close_Date__c as :date) ) and (($.Placement_End_Date_Division_Wide__c as :date) < ( (case1.Case_Close_Date__c as :date) + |P91D| ) )  ) ) )) orderBy ($.Placement_Start_Date_Division_Wide__c as :date) )[0] ),	
	"CaseCloseDate" : $.Case__r.Case_Close_Date__c as :date as :string {format : "MMddyyyy"},

	//"FosterCareServicesPlacement" : using (case1 = $.Case__r default {}) (((flowVars.placementinfoMap2[$.Person__c] default []) filter ( ( ($.Placement_Start_Date_Division_Wide__c as :date) >= (case1.Case_Open_Date__c) ) and ( ($.Placement_Start_Date_Division_Wide__c as :date) <= (case1.Case_Close_Date__c) ) and ( ($.Placement_End_Date_Division_Wide__c == null) or (($.Placement_End_Date_Division_Wide__c as :date) >= (case1.Case_Close_Date__c) )  ) ))[0]),
	"FosterCareServicesPlacement" : using (case1 = $.Case__r default {}) ((((flowVars.placementinfoMap2[$.Person__c] default []) filter ( ( ($.Placement_Start_Date_Division_Wide__c as :date) >= (case1.Case_Open_Date__c) ) and ( ($.Placement_Start_Date_Division_Wide__c as :date) <= (case1.Case_Close_Date__c) ) and ( ($.Placement_End_Date_Division_Wide__c == null) or (($.Placement_End_Date_Division_Wide__c as :date) >= (case1.Case_Close_Date__c) )  ) )) orderBy ($.Placement_Start_Date_Division_Wide__c as :date))[-1]),
	
	"AdoptionServices" : using (case1 = $.Case__r default {})  ( "1" when ( ( ( sizeOf (flowVars.currentAssociatedCases	filter ( ($.Case_Type__c == "Permanency") and ($.Case_Subtype__c == "Adoption")  and ( (($.Case_Open_Date__c as :date) <= ((case1.Case_Close_Date__c) + |P90D|)) and ( ($.Case_Open_Date__c as :date) > (case1.Case_Open_Date__c) )	 ) and ( ($.Case_Close_Date__c != null) and (($.Case_Close_Date__c as :date) >= ((case1.Case_Close_Date__c) + |P90D|) ) )) ) ) > 0 ) ) otherwise "2" ),	
	
	"CaseManagementServices" : using (case1 = $.Case__r default {}) ( "1" when ( (sizeOf (flowVars.currentAssociatedCases filter ( (["Guardianship","Permanency","Treatment"] contains ($.Case_Type__c default "")) and ( ($.Case_Close_Date__c != null) and  (($.Case_Close_Date__c as :date) > ((case1.Case_Close_Date__c) + |P90D|) ) )  ) ) ) > 0 ) otherwise "2" ),

	"IndependentandTransitionalLivingServices" : using (case1 = $.Case__r default {}) ("1" when ( ( sizeOf ( (flowVars.ilcasesMap[$.Person__c] default []) filter (( (($.Case__r.Case_Open_Date__c as :date) >= case1.Case_Open_Date__c) and (($.Case__r.Case_Open_Date__c as :date) <= case1.Case_Close_Date__c) ) and ( ($.Case__r.Case_Close_Date__c == null) or ( ($.Case__r.Case_Close_Date__c as :date) > ((case1.Case_Close_Date__c as :date ) + |P90D| ) )  ) ) ) ) > 0 ) otherwise "2" ),
	
	"WorkerID" : encryptPad($.Case__r.Assigned_Worker__r.DEL_PID__c) when (($.Case__r.Assigned_Worker__r.DEL_PID__c != null) ) otherwise ($.Case__r.Assigned_Worker__r.DEL_PID__c default ""),
	"SupervisorID" : encryptPad($.Case__r.Assigned_Supervisor__r.DEL_PID__c) when (($.Case__r.Assigned_Supervisor__r.DEL_PID__c != null) ) otherwise ($.Case__r.Assigned_Supervisor__r.DEL_PID__c default ""),
	
	"Perpetrator1" : (((( (flowVars.findingsInfoMap[flowVars.caseId] default {})[$.Id] ) default [] ) filter ((($.Finding_ID__r.Finding_Status__c default "") == "Completed" ) ) ) distinctBy $.Finding_ID__r.Perpetrator__c)[0], // Distinct perp logic need to be applied here only
	"Perpetrator2" : (((( (flowVars.findingsInfoMap[flowVars.caseId] default {})[$.Id] ) default [] ) filter ((($.Finding_ID__r.Finding_Status__c default "") == "Completed" ) ) ) distinctBy $.Finding_ID__r.Perpetrator__c)[1], // Distinct perp logic need to be applied here only
	"Perpetrator3" : (((( (flowVars.findingsInfoMap[flowVars.caseId] default {})[$.Id] ) default [] ) filter ((($.Finding_ID__r.Finding_Status__c default "") == "Completed" ) ) ) distinctBy $.Finding_ID__r.Perpetrator__c)[2], // Distinct perp logic need to be applied here only
	
	"PerpetratorFindings" : ((( (flowVars.findingsInfoMap[flowVars.caseId] default {})[$.Id] ) default [] ) filter (($.Finding_ID__r.Finding_Status__c default "") == "Completed" ) ) , //All Findings realted to Perps
	
	"ReportDispIs1" : true when ($.Case__r.Status__c != "Abridged" and $.Case__r.Investigation_Outcome__c == "Substantiated" ) otherwise false,
	"Case" : $.Case__r,
	"AFCARSID" : encryptPad($.Person_PID__c) when ($.Person_PID__c !=null ) otherwise ($.Person_PID__c default ""),
	"IncidentDate"  : ($.Case__r.Associated_Intake__r.Incident_Date__c as :date  as :string {format : "MMddyyyy"}) when ($.Case__r.Associated_Intake__r.Incident_Date__c != null) otherwise "",
	"CustodyEndDate" :  ( (flowVars.FirstEverCustody[$.Person__c].CustodyEndDate[-1] as :date {format: "yyyy-MM-dd"} ) as :string {format : "MMddyyyy"}) when (flowVars.FirstEverCustody[$.Person__c].CustodyEndDate[-1] != null) otherwise "",
	"FosterCareDischargeDate" : $."FosterCareDischargeDate" default "",		
	"" : ""

}]]></dw:set-payload>
                    </dw:transform-message>
                    <dw:transform-message doc:name="Transform Message : Calculate Dependent Elements">
                        <dw:input-payload mimeType="application/java"/>
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%function pad(char, times) (char ++ pad(char, times - 1)) when times > 0 otherwise ""
%function getAge(date1,date2)  ( abs (date1 - date2).years)
%function encrypt(str) (( pad("0",( 12 - ( sizeOf (( 999999999999 - (str as :number)) as :string ) ))) ++ (999999999999 - (str as :number)) ) splitBy "" reduce ((val,acc = "") -> acc ++ (flowVars.LOVReturned[ ("ENCRYPTION_MAPPING-" ++ val)][0] default ""))   )
%function encryptPad(str) ( (encrypt(str)) when ((flowVars.ReportData.Encrypt_PID__c != null ) and (flowVars.ReportData.Encrypt_PID__c == "true" )) otherwise (( pad("0",(12 - (sizeOf str))) ++ str) when (str != null) otherwise "" ) )
%function raceDetermine(primary,secondary,expectedvalue) ("1" when ( ((primary default "") == expectedvalue) or ((secondary default "") == expectedvalue)) otherwise ("9" when ((primary default "") == "Unable to Determine") otherwise "2"))
%var priority = {
"Physical Abuse" : "Physical Abuse",
"Abuse" : "Abuse",
"Neglect" : "Neglect",
"Sexual Abuse/Exploitation" : "Sexual Abuse/Exploitation",
"Sex Abuse" : "Sex Abuse",
"Emotional Neglect (Mild To Moderate)" : "Emotional Neglect",
"Emotional Neglect (Severe)" : "Emotional Neglect",
"Emotional Abuse (Mild To Moderate)" : "Emotional Neglect",
"Emotional Abuse (Severe)" : "Emotional Neglect",
"Emotional Abuse/Neglect" : "Emotional Neglect",
"Dependency" : "Dependency"
}
---
payload map {
	"Client PID" : $.PID default "",
	"Case ID" : $.CaseID default "",
	"Error Message" : ([$."InvestigationStartDateError",$."NotificationsError"] filter ($ != null))  ,
	"SubmissionYear"  : $.SubmissionYear default "",
	"StateTerritory" : $.StateTerritory default "",
	"ReportID" : $.ReportID default "",
	"ChildID" :  $.ChildID default "",	
	"CountyofReport" :  $.CountyofReport default "",
	"ReportDate" : $.ReportDate default "",		
	"InvestigationStartDate" : $.InvestigationStartDate default "",	
	"ReportSource" : $.ReportSource default "",
	"ReportDisposition" : $.ReportDisposition default "",
	"ReportDispositionDate" : $.ReportDispositionDate default "",
	"Notifications" : $.Notifications default "",  
	
	"ChildAgeatReport" :  ( "77" when (($.ChildDateofBirth as :date {format : "MMddyyyy"}) > ($.IntakeReportDate as :date) ) otherwise ( pad("0",(2 - (sizeOf ( (getAge($.IntakeReportDate,($.ChildDateofBirth as :date {format : "MMddyyyy"}))) as :string ) ))) ++ ( (getAge($.IntakeReportDate,($.ChildDateofBirth as :date {format : "MMddyyyy"}))) as :string )) when (getAge($.IntakeReportDate,($.ChildDateofBirth as :date {format : "MMddyyyy"})) <= 75) otherwise "75"  ) when ( (($.ChildDateofBirth default "") != "") and ($.IntakeReportDate != null)) otherwise "",
	"ChildDateofBirth" : $.ChildDateofBirth default "",
	"ChildSex" :  $.ChildSex default "",	
	"ChildRaceAmericanIndianorAlaskaNative" :  $.ChildRaceAmericanIndianorAlaskaNative default "",
	"ChildRaceAsian" : $.ChildRaceAsian default "",
	"ChildRaceBlackorAfricanAmerican" : $.ChildRaceBlackorAfricanAmerican default "",
	"ChildRaceNativeHawaiianorOtherPacificIslander" : $.ChildRaceNativeHawaiianorOtherPacificIslander default "",
	"ChildRaceWhite" : $.ChildRaceWhite default "",
	"ChildRaceUnabletoDetermine" : $.ChildRaceUnabletoDetermine default "",
	"ChildEthnicity" : $.ChildEthnicity default "",
	"CountyofResidence" : $.CountyofResidence default "",
	"LivingArrangement" : ($."LivingArrangement" default "") when ($.checkCase == true ) otherwise ($."LivingArrangement2" default ""),
	"MilitaryFamilyMember" : ($."MilitaryFamilyMember" default "") when ($.checkCase == true ) otherwise ($."MilitaryFamilyMember2" default ""),
	"PriorVictims"  : $.PriorVictims default "",
	
	"PrimaryAllegation" : $."PrimaryAllegation",
	"FindingAllegation" : $."FindingAllegation",
	"FindingAllegationString" : $."FindingAllegationString",
	"Maltreatment-1Type" : "6" when (flowVars.nonVictimPerson[$$] == true) otherwise ($."Maltreatment-1Type" default "6"),
	"Maltreatment-1DispositionLevel" : ("07" when ($."ReportDisposition" == "07") otherwise ("05" when ((($."FindingAllegation" default [] contains $."Maltreatment-1Type") == false) and ($."PrimaryAllegation" default [] contains $."Maltreatment-1Type") == true) otherwise ($."Maltreatment-1DispositionLevel")) when (flowVars.currentcase.Status__c != "Abridged") otherwise ("07" when (flowVars.currentcase.Status__c == "Abridged") otherwise "99")),
	//"FindingAllegation" : ($."FindingAllegation" -- [$."FindingAllegation"[0]] default []) when (($."FindingAllegation"[0] default "") == $."Maltreatment-1Type") otherwise [],
	//"PrimaryAllegation" : ($."PrimaryAllegation" -- [$."PrimaryAllegation"[0]] default []) when (($."PrimaryAllegation"[0] default "") == $."Maltreatment-1Type") otherwise [],
		
	"Maltreatment-2Type" : ($."Maltreatment-2Type" default "") when ( ($."Maltreatment-2Type" != $."Maltreatment-1Type") and ($."Maltreatment-2Type" != null) and ($."Maltreatment-2Type" != "") ) otherwise ($."Maltreatment-3Type" default "") when ( ($."Maltreatment-3Type" != $."Maltreatment-1Type") and ($."Maltreatment-3Type" != $."Maltreatment-2Type") and ($."Maltreatment-3Type" != null) and ($."Maltreatment-3Type" != null) and ($."Maltreatment-2Type" != null) and ($."Maltreatment-2Type" != "") ) otherwise ($."Maltreatment-4Type" default "") when ( ($."Maltreatment-4Type" != $."Maltreatment-1Type") and ($."Maltreatment-4Type" != $."Maltreatment-2Type") and ($."Maltreatment-4Type" != $."Maltreatment-3Type") and ($."Maltreatment-4Type" != null) and ($."Maltreatment-4Type" != "") and ($."Maltreatment-3Type" != null) and ($."Maltreatment-2Type" != null)) otherwise ( ($."PrimaryAllegation"[0] when (($."PrimaryAllegation"[0] != $."Maltreatment-1Type") and ($."PrimaryAllegation"[0] != $."Maltreatment-2Type") and ($."PrimaryAllegation"[0] != null) and ($."PrimaryAllegation"[0] != "")) otherwise ($."PrimaryAllegation"[1] when (($."PrimaryAllegation"[1] != $."Maltreatment-1Type") and ($."PrimaryAllegation"[1] != $."Maltreatment-2Type") and ($."PrimaryAllegation"[1] != null) and ($."PrimaryAllegation"[1] != "")) otherwise ($."PrimaryAllegation"[2] when (($."PrimaryAllegation"[2] != $."Maltreatment-1Type") and ($."PrimaryAllegation"[2] != $."Maltreatment-2Type") and ($."PrimaryAllegation"[2] != null) and ($."PrimaryAllegation"[2] != "")) otherwise ($."PrimaryAllegation"[3] when (($."PrimaryAllegation"[3] != $."Maltreatment-1Type") and ($."PrimaryAllegation"[3] != $."Maltreatment-2Type") and ($."PrimaryAllegation"[3] != null) and ($."PrimaryAllegation"[3] != null)) otherwise "" ))))),
	//"Maltreatment-2Type" : $."FindingAllegation"[0] when (( sizeOf ($."FindingAllegation" ) ) > 0 ) otherwise $."PrimaryAllegation"[0]  when (( sizeOf ($."PrimaryAllegation") )> 0) otherwise "",
	"Maltreatment-2DispositionLevel" : ("07" when ($."ReportDisposition" == "07") otherwise ("05" when ((($."FindingAllegation" default [] contains $."Maltreatment-2Type") == false) and ($."PrimaryAllegation" default [] contains $."Maltreatment-2Type") == true) otherwise ($."Maltreatment-2DispositionLevel")) when (flowVars.currentcase.Status__c != "Abridged") otherwise ("07" when (flowVars.currentcase.Status__c == "Abridged") otherwise "99")),

	//"FindingAllegation" : ($."FindingAllegation" -- [$."FindingAllegation"[0]] default []) when (($."FindingAllegation"[0] default "") == $."Maltreatment-2Type") otherwise [],
	//"PrimaryAllegation" : ($."PrimaryAllegation" -- [$."PrimaryAllegation"[0]] default []) when (($."PrimaryAllegation"[0] default "") == $."Maltreatment-2Type") otherwise [],
	
	"Maltreatment-3Type" : ($."Maltreatment-3Type" default "") when ( ($."Maltreatment-3Type" != $."Maltreatment-1Type") and ($."Maltreatment-3Type" != $."Maltreatment-2Type") and ($."Maltreatment-3Type" != null) and ($."Maltreatment-3Type" != "") ) otherwise ($."Maltreatment-4Type" default "") when ( ($."Maltreatment-4Type" != $."Maltreatment-1Type") and ($."Maltreatment-4Type" != $."Maltreatment-2Type") and ($."Maltreatment-4Type" != $."Maltreatment-3Type") and ($."Maltreatment-4Type" != null) and ($."Maltreatment-3Type" != null) and ($."Maltreatment-4Type" != "")) otherwise ( ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 1] when (($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 1] != $."Maltreatment-1Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 1] != $."Maltreatment-2Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 1] != $."Maltreatment-3Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 1] != null) and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 1] != "")) otherwise ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 2] when (($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 2] != $."Maltreatment-1Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 2] != $."Maltreatment-2Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 2] != $."Maltreatment-3Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 2] != null) and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 2] != "")) otherwise ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 3] when (($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 3] != $."Maltreatment-1Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 3] != $."Maltreatment-2Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 3] != $."Maltreatment-3Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 3] != null) and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 3] != "")) otherwise ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 4] when (($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 4] != $."Maltreatment-1Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 4] != $."Maltreatment-2Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 4] != $."Maltreatment-3Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 4] != null) and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 4] != "")) otherwise "" ))))),
	//"Maltreatment-3Type" : $."FindingAllegation"[0] when (( sizeOf ($."FindingAllegation" )) > 0) otherwise $."PrimaryAllegation"[0]  when (( sizeOf ($."PrimaryAllegation")) > 0) otherwise "",
	"Maltreatment-3DispositionLevel" : ("07" when ($."ReportDisposition" == "07") otherwise ("05" when ((($."FindingAllegation" default [] contains $."Maltreatment-3Type") == false) and ($."PrimaryAllegation" default [] contains $."Maltreatment-3Type") == true) otherwise ($."Maltreatment-3DispositionLevel")) when (flowVars.currentcase.Status__c != "Abridged") otherwise ("07" when (flowVars.currentcase.Status__c == "Abridged") otherwise "99")),
	
	//"FindingAllegation" : ($."FindingAllegation" -- [$."FindingAllegation"[0]] default []) when (($."FindingAllegation"[0] default "") == $."Maltreatment-3Type") otherwise [],
	//"PrimaryAllegation" : ($."PrimaryAllegation" -- [$."PrimaryAllegation"[0]] default []) when (($."PrimaryAllegation"[0] default "") == $."Maltreatment-3Type") otherwise [],
	
	"Maltreatment-4Type" : ($."Maltreatment-4Type" default "") when ( ($."Maltreatment-4Type" != $."Maltreatment-1Type") and ($."Maltreatment-4Type" != $."Maltreatment-2Type") and ($."Maltreatment-4Type" != $."Maltreatment-3Type") and ($."Maltreatment-4Type" != null) ) otherwise ( ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 1] when (($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 1] != $."Maltreatment-1Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 1] != $."Maltreatment-2Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 1] != $."Maltreatment-3Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 1] != $."Maltreatment-4Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 1] != null)) otherwise ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 2] when (($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 2] != $."Maltreatment-1Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 2] != $."Maltreatment-2Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 2] != $."Maltreatment-3Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 2] != $."Maltreatment-4Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 2] != null)) otherwise ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 3] when (($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 3] != $."Maltreatment-1Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 3] != $."Maltreatment-2Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 3] != $."Maltreatment-3Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 3] != $."Maltreatment-4Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 3] != null)) otherwise ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 4] when (($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 4] != $."Maltreatment-1Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 4] != $."Maltreatment-2Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 4] != $."Maltreatment-3Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 4] != $."Maltreatment-4Type") and ($."PrimaryAllegation"[(sizeOf ($."PrimaryAllegation")) - 4] != null)) otherwise "" ))))),
	//"Maltreatment-4Type" : ($."Maltreatment-4Type" default "") when ( ($."Maltreatment-4Type" != $."Maltreatment-1Type") and ($."Maltreatment-4Type" != $."Maltreatment-2Type") and ($."Maltreatment-4Type" != $."Maltreatment-3Type") and ($."Maltreatment-4Type" != null) ) otherwise ( ($."PrimaryAllegation"[0] when (($."PrimaryAllegation"[0] != $."Maltreatment-1Type") and ($."PrimaryAllegation"[0] != $."Maltreatment-2Type") and ($."PrimaryAllegation"[0] != $."Maltreatment-3Type") and ($."PrimaryAllegation"[0] != $."Maltreatment-4Type") and ($."PrimaryAllegation"[0] != null)) otherwise ($."PrimaryAllegation"[1] when (($."PrimaryAllegation"[1] != $."Maltreatment-1Type") and ($."PrimaryAllegation"[1] != $."Maltreatment-2Type") and ($."PrimaryAllegation"[1] != $."Maltreatment-3Type") and ($."PrimaryAllegation"[1] != $."Maltreatment-4Type") and ($."PrimaryAllegation"[1] != null)) otherwise ($."PrimaryAllegation"[2] when (($."PrimaryAllegation"[2] != $."Maltreatment-1Type") and ($."PrimaryAllegation"[2] != $."Maltreatment-2Type") and ($."PrimaryAllegation"[2] != $."Maltreatment-3Type") and ($."PrimaryAllegation"[2] != $."Maltreatment-4Type") and ($."PrimaryAllegation"[2] != null)) otherwise ($."PrimaryAllegation"[3] when (($."PrimaryAllegation"[3] != $."Maltreatment-1Type") and ($."PrimaryAllegation"[3] != $."Maltreatment-2Type") and ($."PrimaryAllegation"[3] != $."Maltreatment-3Type") and ($."PrimaryAllegation"[3] != $."Maltreatment-4Type") and ($."PrimaryAllegation"[3] != null)) otherwise "" ))))),
	//"Maltreatment-4Type" : $."FindingAllegation"[0] when (( sizeOf ($."FindingAllegation" )) > 0) otherwise $."PrimaryAllegation"[0]  when (( sizeOf ($."PrimaryAllegation") ) > 0) otherwise "",
	"Maltreatment-4DispositionLevel" : ("07" when ($."ReportDisposition" == "07") otherwise ("05" when ((($."FindingAllegation" default [] contains $."Maltreatment-4Type") == false) and ($."PrimaryAllegation" default [] contains $."Maltreatment-4Type") == true) otherwise ($."Maltreatment-4DispositionLevel")) when (flowVars.currentcase.Status__c != "Abridged") otherwise ("07" when (flowVars.currentcase.Status__c == "Abridged") otherwise "99")),
	"MaltreatmentDeath" : "2" when ($."ReportDisposition" != "01") otherwise ($."MaltreatmentDeath" default ""),
	
	"AlcoholAbuse-Child" : ($."AlcoholAbuse-Child" default "") when ($.checkCase == true ) otherwise ($."AlcoholAbuse-Child2" default ""),
	"DrugAbuse-Child" : ($."DrugAbuse-Child" default "") when ($.checkCase == true ) otherwise ($."DrugAbuse-Child2" default ""),
	"MentalRetardation-Child" : ($."MentalRetardation-Child" default "") when ($.checkCase == true ) otherwise ($."MentalRetardation-Child2" default ""),
	"EmotionallyDisturbed-Child" : ($."EmotionallyDisturbed-Child" default "") when ($.checkCase == true ) otherwise ($."EmotionallyDisturbed-Child2" default ""),
	"VisuallyorHearingImpaired-Child" : ($."VisuallyorHearingImpaired-Child" default "") when ($.checkCase == true ) otherwise ($."VisuallyorHearingImpaired-Child2" default ""),
	"LearningDisability-Child" : ($."LearningDisability-Child" default "") when ($.checkCase == true ) otherwise ($."LearningDisability-Child2" default ""),
	"PhysicallyDisabled-Child" : ($."PhysicallyDisabled-Child" default "") when ($.checkCase == true ) otherwise ($."PhysicallyDisabled-Child2" default ""),
	"BehaviorProblem-Child" : ($."BehaviorProblem-Child" default "") when ($.checkCase == true ) otherwise ($."BehaviorProblem-Child2" default ""),
	"OtherMedicalCondition-Child" : ($."OtherMedicalCondition-Child" default "") when ($.checkCase == true ) otherwise ($."OtherMedicalCondition-Child2" default ""),
	"AlcoholAbuse-Caregiver(s)" : ($."AlcoholAbuse-Caregiver(s)" default "") when ($.checkCase == true ) otherwise ($."AlcoholAbuse-Caregiver(s)2" default ""),
	"DrugAbuse-Caregiver(s)" : ($."DrugAbuse-Caregiver(s)" default "") when ($.checkCase == true ) otherwise ($."DrugAbuse-Caregiver(s)2" default ""),
	"MentalRetardation-Caregiver(s)" : ($."MentalRetardation-Caregiver(s)" default "") when ($.checkCase == true ) otherwise ($."MentalRetardation-Caregiver(s)2" default ""),
	"EmotionallyDisturbed-Caregiver(s)" : ($."EmotionallyDisturbed-Caregiver(s)" default "") when ($.checkCase == true ) otherwise ($."EmotionallyDisturbed-Caregiver(s)2" default ""),
	"VisuallyorHearingImpaired-Caregiver(s)" :( $."VisuallyorHearingImpaired-Caregiver(s)" default "") when ($.checkCase == true ) otherwise ($."VisuallyorHearingImpaired-Caregiver(s)2" default ""),
	"LearningDisability-Caregiver(s)" : ($."LearningDisability-Caregiver(s)" default "") when ($.checkCase == true ) otherwise ($."LearningDisability-Caregiver(s)2" default ""),
	"PhysicallyDisabled-Caregiver(s)" : ($."PhysicallyDisabled-Caregiver(s)" default "") when ($.checkCase == true ) otherwise ($."PhysicallyDisabled-Caregiver(s)2" default ""),
	"OtherMedicalCondition-Caregiver(s)" : ($."OtherMedicalCondition-Caregiver(s)" default "") when ($.checkCase == true ) otherwise ($."OtherMedicalCondition-Caregiver(s)2" default ""),
	"DomesticViolence" : ($."DomesticViolence" default "") when ($.checkCase == true ) otherwise ($."DomesticViolence2" default ""),
	"InadequateHousing" : ($."InadequateHousing" default "") when ($.checkCase == true ) otherwise ($."InadequateHousing2" default ""),
	"FinancialProblem" : ($."FinancialProblem" default "") when ($.checkCase == true ) otherwise ($."FinancialProblem2" default ""),
		
	"PublicAssistance" : $."PublicAssistance" default "",
	
	"PostResponseServices"  : $."PostResponseServices" default "",
	
	"ServiceDate" : (($.ServiceDatePlacement.Placement_Start_Date_Division_Wide__c as :date as :string {format : "MMddyyyy"}) when ($.ServiceDatePlacement != null) otherwise $.CaseCloseDate) when ($.PostResponseServices == "1") otherwise "" ,

	"FamilySupportServices" : ("1" when (($.EarliestCaseConf.Family_Support_Services__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Family_Support_Services__c == null) or ($.EarliestCaseConf.Family_Support_Services__c == "Unknown") ) otherwise "2") ) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
	"FamilyPreservationServices" : ( "1" when (($.EarliestCaseConf.Family_Preservation_Services__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Family_Preservation_Services__c == null) or ($.EarliestCaseConf.Family_Preservation_Services__c == "Unknown")) otherwise "2") ) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,	
	
	"FosterCareServices" : ("1" when ($.FosterCareServicesPlacement != null) otherwise "2") when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
	"RemovalDate" : ( ($.FosterCareServicesPlacement.Placement_Start_Date_Division_Wide__c as :date as :string {format : "MMddyyyy"} ) when (($.FosterCareServicesPlacement != null) and ($.FosterCareServicesPlacement.Placement_Start_Date_Division_Wide__c != null)) otherwise "" ) when ($.PostResponseServices == "1") otherwise "",
	
	"JuvenileCourtPetition" : ("1" when ( ($.petition != null) and ($.petition.Petition_Children__r.Case_ID__r.Case_Type__c == "Family Investigation" ) ) otherwise "2") when ($.PostResponseServices == "1") otherwise $.PostResponseServices,	
	"PetitionDate" : ( ( $.petition.Petition_Children__r.Petition_Date__c as :date as :string {format : "MMddyyyy"} ) when (( $.petition != null ) and ($.petition.Petition_Children__r.Petition_Date__c != null) and ($.petition.Petition_Children__r.Case_ID__r.Case_Type__c == "Family Investigation" ) ) otherwise "" ) when ($.PostResponseServices == "1") otherwise "",
	"Court-AppointedRepresentative" : ("1" when ( ($.petition != null) and ($.petition.Petition_Children__r.Case_ID__r.Case_Type__c == "Family Investigation" )) otherwise "2") when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
	
	"AdoptionServices" : $."AdoptionServices" default "",
	"CaseManagementServices" : $."CaseManagementServices" default "",
	
	"CounselingServices" : ("1" when (($.EarliestCaseConf.Counseling_Services__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Counseling_Services__c == null) or ($.EarliestCaseConf.Counseling_Services__c == "Unknown")) otherwise "2") ) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
	"DaycareServices-Child" : ("1" when (($.EarliestCaseConf.Daycare_Services_Child__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Daycare_Services_Child__c == null) or ($.EarliestCaseConf.Daycare_Services_Child__c == "Unknown")) otherwise "2") ) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
	"EducationalandTrainingServices" : ("1" when (($.EarliestCaseConf.Educational_and_Training_Services__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Educational_and_Training_Services__c == null) or ($.EarliestCaseConf.Educational_and_Training_Services__c == "Unknown")) otherwise "2")) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
	"EmploymentServices" : ("1" when (($.EarliestCaseConf.Employment_Services__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Employment_Services__c == null) or ($.EarliestCaseConf.Employment_Services__c == "Unknown")) otherwise "2") ) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
	"FamilyPlanningServices" : ("1" when (($.EarliestCaseConf.Family_Planning_Services__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Family_Planning_Services__c == null) or ($.EarliestCaseConf.Family_Planning_Services__c == "Unknown")) otherwise "2") ) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
	"Health-RelatedandHomeHealthServices" : ("1" when (($.EarliestCaseConf.Health_Related_and_Home_Health_Services__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Health_Related_and_Home_Health_Services__c == null) or ($.EarliestCaseConf.Health_Related_and_Home_Health_Services__c == "Unknown")) otherwise "2") ) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
	"Home-BasedServices" : ("1" when (($.EarliestCaseConf.Home_Based_Services__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Home_Based_Services__c == null) or ($.EarliestCaseConf.Home_Based_Services__c == "Unknown")) otherwise "2") ) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
	"HousingServices" : ("1" when (($.EarliestCaseConf.Housing_Services__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Housing_Services__c == null) or ($.EarliestCaseConf.Housing_Services__c == "Unknown")) otherwise "2") ) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
	
	"IndependentandTransitionalLivingServices" : ($."IndependentandTransitionalLivingServices" default "")  when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
	
	"InformationandReferralServices" : ("1" when (($.EarliestCaseConf.Information_and_Referral_Services__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Information_and_Referral_Services__c == null) or ($.EarliestCaseConf.Information_and_Referral_Services__c == "Unknown") ) otherwise "2") ) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
	"LegalServices" : ("1" when (($.EarliestCaseConf.Legal_Services__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Legal_Services__c == null) or ($.EarliestCaseConf.Legal_Services__c == "Unknown") ) otherwise "2") ) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
    "MentalHealthServices" : ("1" when (($.EarliestCaseConf.Mental_Health_Services__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Mental_Health_Services__c == null) or ($.EarliestCaseConf.Mental_Health_Services__c == "Unknown") ) otherwise "2") ) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
    "PregnancyParentingServicesforYoungParents" : ("1" when (($.EarliestCaseConf.Parenting_Services_for_Young_Parents__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Parenting_Services_for_Young_Parents__c == null) or ($.EarliestCaseConf.Parenting_Services_for_Young_Parents__c == "Unknown")) otherwise "2") ) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
    
	"RespiteCareServices" : "",

	"SpecialServices-Disabled" : ("1" when (($.EarliestCaseConf.Special_Services_Disabled__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Special_Services_Disabled__c == null) or ($.EarliestCaseConf.Special_Services_Disabled__c == "Unknown")) otherwise "2") ) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,	
	
	"SpecialServices-JuvenileDelinquent" : "",
	
	"SubstanceAbuseServices" : ("1" when (($.EarliestCaseConf.Substance_Abuse_Services__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Substance_Abuse_Services__c == null) or ($.EarliestCaseConf.Substance_Abuse_Services__c == "Unknown")) otherwise "2") ) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
	"TransportationServices" : ("1" when (($.EarliestCaseConf.Transportation_Services__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Transportation_Services__c == null) or ($.EarliestCaseConf.Transportation_Services__c == "Unknown")) otherwise "2") ) when ($.PostResponseServices == "1") otherwise $.PostResponseServices,
	"OtherServices" : ("1" when (($.EarliestCaseConf.Other_Services__c default "") == "Yes") otherwise ("9" when ( ($.EarliestCaseConf == null) or ($.EarliestCaseConf.Other_Services__c == null) or ($.EarliestCaseConf.Other_Services__c == "Unknown")) otherwise "2") )  when ($.PostResponseServices == "1") otherwise $.PostResponseServices,

	"WorkerID" : $."WorkerID" default "",
	"SupervisorID" : $."SupervisorID" default "",


	"Perpetrator-1ID" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise (encryptPad($.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.DEL_PID__c) when ( (($.ReportDispIs1 == true) and ($.Perpetrator1 != null) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) ) and ($.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.DEL_PID__c != null) ) otherwise ""),
	"Perpetrator-1Relationship" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( flowVars.LOVReturned[( "PERP_RELATION-" ++ ( upper ($.Perpetrator1.Victim_Perpetrator_Relationship__c ) ) )][0] default "99") when ( (($.ReportDispIs1 == true) and ($.Perpetrator1 != null))  ) otherwise ""),
	"Perpetrator-1asParent" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( flowVars.LOVReturned[( "PERP_PARENT-" ++ ( upper ($.Perpetrator1.Victim_Perpetrator_Relationship__c ) ) )][0] default "") when ( (($.ReportDispIs1 == true) and ($.Perpetrator1 != null)) and ($.Perpetrator1.Victim_Perpetrator_Relationship__c != null) ) otherwise ""),	
	"Perpetrator-1asCaregiver" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( ( "1" when ( ($.Perpetrator1.Finding_ID__r.Perpetrator__c == $.PrimaryCaregiverID) or ( $.Perpetrator1.Finding_ID__r.Perpetrator__c == $.SecondaryCaregiverID ) ) otherwise "2" ) when (($.PrimaryCaregiverID != null) or ($.SecondaryCaregiverID != null) ) otherwise "9" ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator1 != null)) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) ) otherwise ""), 
	"Perpetrator-1AgeatReport" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise (using ( perpage =  (( pad("0",(2 - (sizeOf ( getAge($.Case.Associated_Intake__r.Report_Date__c,( $.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.Birthdate as :date ) ) as :string )))) ++ ( getAge($.Case.Associated_Intake__r.Report_Date__c,( $.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.Birthdate as :date ) ) as :string ) ) when ( ($.Case.Associated_Intake__r.Report_Date__c != null) and ($.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.Birthdate != null) ) otherwise "" ) ) (  (perpage when ((perpage as :number) < 75) otherwise "75" ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator1 != null)) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) and (perpage != "")  ) otherwise "" )),
	"Perpetrator-1Sex" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( flowVars.LOVReturned[( "CHILD_SEX-" ++ ($.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.DEL_Gender__c default "" ))][0] default "9") when ( (($.ReportDispIs1 == true) and ($.Perpetrator1 != null)) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-1RaceAmericanIndianAlaskaNative" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( raceDetermine(($.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c default "" ),(  $.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Secondary__c default "" ),"American Indian or Alaskan Native") ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator1 != null)) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-1RaceAsian" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( raceDetermine(($.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c default "" ),(  $.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Secondary__c default "" ),"Asian") ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator1 != null)) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-1RaceBlackorAfricanAmerican" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( raceDetermine(($.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c default "" ),(  $.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Secondary__c default "" ),"Black or African American") ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator1 != null)) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-1RaceNativeHawaiianorOtherPacificIslander" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( raceDetermine(($.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c default "" ),(  $.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Secondary__c default "" ),"Native Hawaiian or Other Pacific Islander") ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator1 != null)) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-1RaceWhite" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( raceDetermine(($.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c default "" ),(  $.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Secondary__c default "" ),"White") ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator1 != null)) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-1RaceUnabletoDetermine" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( "1" when ($.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c == "Unable to Determine" ) otherwise "2" )  when ( (($.ReportDispIs1 == true) and ($.Perpetrator1 != null)) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-1Ethnicity" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( flowVars.LOVReturned[("CHILD_ETHNICITY-" ++ ($.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__r.DEL_Ethnicity__c default "" ))][0] default "9")  when ( (($.ReportDispIs1 == true) and ($.Perpetrator1 != null)) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-1MilitaryMember" : "" when ((("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( ("1" when ( ( $.Perpetrator1.Finding_ID__r.Perpetrator__c == $.PrimaryCaregiverID) and (($.PrimaryCaregiverMOM default "") == "Yes") ) otherwise ( "1" when ( ( $.Perpetrator1.Finding_ID__r.Perpetrator__c == $.SecondaryCaregiverID) and ( ($.SecondaryCaregiverMOM default "") == "Yes") ) otherwise "2" ) ) when ( (($.PrimaryCaregiverID != null) and ($.PrimaryCaregiverMOM != null) )  or (($.SecondaryCaregiverID != null) and ($.SecondaryCaregiverMOM != null) )  ) otherwise "9" ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator1 != null)) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) ) otherwise ""), 
	"Perpetrator-1PriorAbuser" : "" when ((("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( using (findingid = $.Perpetrator1.Finding_ID__r.Id default "") ( ("1" when ( ( sizeOf ((flowVars.perpSummaryMap[$.Perpetrator1.Finding_ID__r.Perpetrator__r.Person__c] default []) filter ($.Findings_ID__c != findingid) and (($.Start_Date__c as :date) < (flowVars.currentcase.Case_Close_Date__c as :date) ) ) ) > 0 ) otherwise "2"  ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator1 != null) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) )  ) otherwise "" )),
	
	
	"Perpetrator-1Maltreatment-1" : "" when ((("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise (	using (perp1 = $.Perpetrator1.Finding_ID__r.Perpetrator__c default "Perp", malType = $."Maltreatment-1TypeString"  ) ( ( "1" when (( sizeOf ( $.PerpetratorFindings filter (($.Finding_ID__r.Perpetrator__c == perp1) and ((malType == ($.Finding_ID__r.Primary_Finding_Type__c default "") ) or (malType == (priority[$.Finding_ID__r.Maltreatment_Type__c] default "") ) ) ) ) ) > 0 ) otherwise "2" ) when ( ( ($.ReportDispIs1 == true) and ($.Perpetrator1 != null) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) ) ) otherwise "" ) ),
	"Perpetrator-1Maltreatment-2" : "" when ((("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( using (perp1 = $.Perpetrator1.Finding_ID__r.Perpetrator__c default "Perp", malType = $."Maltreatment-2TypeString"  ) ( ( "1" when (( sizeOf ( $.PerpetratorFindings filter (($.Finding_ID__r.Perpetrator__c == perp1) and ((malType == ($.Finding_ID__r.Primary_Finding_Type__c default "") ) or (malType == (priority[$.Finding_ID__r.Maltreatment_Type__c] default "") ) ) ) ) ) > 0 ) otherwise "2" ) when ( ( ($.ReportDispIs1 == true) and ($.Perpetrator1 != null) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) ) ) otherwise "" ) ),	
	"Perpetrator-1Maltreatment-3" : "" when ((("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( using (perp1 = $.Perpetrator1.Finding_ID__r.Perpetrator__c default "Perp", malType = $."Maltreatment-3TypeString"  ) ( ( "1" when (( sizeOf ( $.PerpetratorFindings filter (($.Finding_ID__r.Perpetrator__c == perp1) and ((malType == ($.Finding_ID__r.Primary_Finding_Type__c default "") ) or (malType == (priority[$.Finding_ID__r.Maltreatment_Type__c] default "") ) ) ) ) ) > 0 ) otherwise "2" ) when ( ( ($.ReportDispIs1 == true) and ($.Perpetrator1 != null) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) ) ) otherwise "" ) ),
	"Perpetrator-1Maltreatment-4" : "" when ((("Maltreatment-1Type" == "6") or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) or ($.Perpetrator1.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( using (perp1 = $.Perpetrator1.Finding_ID__r.Perpetrator__c default "Perp", malType = $."Maltreatment-4TypeString"  ) ( ( "1" when (( sizeOf ( $.PerpetratorFindings filter (($.Finding_ID__r.Perpetrator__c == perp1) and ((malType == ($.Finding_ID__r.Primary_Finding_Type__c default "") ) or (malType == (priority[$.Finding_ID__r.Maltreatment_Type__c] default "") ) ) ) ) ) > 0 ) otherwise "2" ) when ( ( ($.ReportDispIs1 == true) and ($.Perpetrator1 != null) and ($.Perpetrator1.Finding_ID__r.Perpetrator__c != null) ) ) otherwise "" ) ),

	"Perpetrator-2ID" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( encryptPad($.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.DEL_PID__c) when ( (($.ReportDispIs1 == true) and ($.Perpetrator2 != null) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) ) and ($.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.DEL_PID__c != null) ) otherwise ""),
	"Perpetrator-2Relationship" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( flowVars.LOVReturned[( "PERP_RELATION-" ++ ( upper ($.Perpetrator2.Victim_Perpetrator_Relationship__c ) ) )][0] default "99") when ( (($.ReportDispIs1 == true) and ($.Perpetrator2 != null))  ) otherwise ""),
	"Perpetrator-2asParent" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( flowVars.LOVReturned[( "PERP_PARENT-" ++ ( upper ($.Perpetrator2.Victim_Perpetrator_Relationship__c ) ) )][0] default "") when ( (($.ReportDispIs1 == true) and ($.Perpetrator2 != null)) and ($.Perpetrator2.Victim_Perpetrator_Relationship__c != null) ) otherwise ""),	
	"Perpetrator-2asCaregiver" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( ( "1" when ( ($.Perpetrator2.Finding_ID__r.Perpetrator__c == $.PrimaryCaregiverID) or ( $.Perpetrator2.Finding_ID__r.Perpetrator__c == $.SecondaryCaregiverID ) ) otherwise "2" ) when (($.PrimaryCaregiverID != null) or ($.SecondaryCaregiverID != null) ) otherwise "9" ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator2 != null)) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) ) otherwise ""), 
	"Perpetrator-2AgeatReport" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( using ( perpage =  (( pad("0",(2 - (sizeOf ( getAge($.Case.Associated_Intake__r.Report_Date__c,( $.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.Birthdate as :date ) ) as :string )))) ++ ( getAge($.Case.Associated_Intake__r.Report_Date__c,( $.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.Birthdate as :date ) ) as :string ) ) when ( ($.Case.Associated_Intake__r.Report_Date__c != null) and ($.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.Birthdate != null) ) otherwise "" ) ) (  (perpage when ((perpage as :number) < 75) otherwise "75" ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator2 != null)) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) and (perpage != "")  ) otherwise "" )),
	"Perpetrator-2Sex" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( flowVars.LOVReturned[( "CHILD_SEX-" ++ ($.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.DEL_Gender__c default "" ))][0] default "9") when ( (($.ReportDispIs1 == true) and ($.Perpetrator2 != null)) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-2RaceAmericanIndianAlaskaNative" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( raceDetermine(($.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c default "" ),(  $.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Secondary__c default "" ),"American Indian or Alaskan Native") ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator2 != null)) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-2RaceAsian" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( raceDetermine(($.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c default "" ),(  $.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Secondary__c default "" ),"Asian") ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator2 != null)) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-2RaceBlackorAfricanAmerican" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( raceDetermine(($.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c default "" ),(  $.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Secondary__c default "" ),"Black or African American") ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator2 != null)) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-2RaceNativeHawaiianorOtherPacificIslander" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( raceDetermine(($.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c default "" ),(  $.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Secondary__c default "" ),"Native Hawaiian or Other Pacific Islander") ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator2 != null)) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-2RaceWhite" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( raceDetermine(($.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c default "" ),(  $.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Secondary__c default "" ),"White") ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator2 != null)) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-2RaceUnabletoDetermine" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( "1" when ($.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c == "Unable to Determine" ) otherwise "2" )  when ( (($.ReportDispIs1 == true) and ($.Perpetrator2 != null)) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-2Ethnicity" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( flowVars.LOVReturned[("CHILD_ETHNICITY-" ++ ($.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__r.DEL_Ethnicity__c default "" ))][0] default "9")  when ( (($.ReportDispIs1 == true) and ($.Perpetrator2 != null)) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-2MilitaryMember" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( ("1" when ( ( $.Perpetrator2.Finding_ID__r.Perpetrator__c == $.PrimaryCaregiverID) and (($.PrimaryCaregiverMOM default "") == "Yes") ) otherwise ( "1" when ( ( $.Perpetrator2.Finding_ID__r.Perpetrator__c == $.SecondaryCaregiverID) and ( ($.SecondaryCaregiverMOM default "") == "Yes") ) otherwise "2" ) ) when ( (($.PrimaryCaregiverID != null) and ($.PrimaryCaregiverMOM != null) )  or (($.SecondaryCaregiverID != null) and ($.SecondaryCaregiverMOM != null) )  ) otherwise "9" ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator2 != null)) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) ) otherwise ""), 
	"Perpetrator-2PriorAbuser" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( using (findingid = $.Perpetrator2.Finding_ID__r.Id default "") ( ("1" when ( ( sizeOf ((flowVars.perpSummaryMap[$.Perpetrator2.Finding_ID__r.Perpetrator__r.Person__c] default []) filter ($.Findings_ID__c != findingid) and (($.Start_Date__c as :date) < (flowVars.currentcase.Case_Close_Date__c as :date) ) ) ) > 0 ) otherwise "2"  ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator2 != null) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) )  ) otherwise "" )),
	
	"Perpetrator-2Maltreatment-1" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( using (perp2 = $.Perpetrator2.Finding_ID__r.Perpetrator__c default "Perp", malType = $."Maltreatment-1TypeString"  ) ( ( "1" when (( sizeOf ( $.PerpetratorFindings filter (($.Finding_ID__r.Perpetrator__c == perp2) and ((malType == ($.Finding_ID__r.Primary_Finding_Type__c default "") ) or (malType == (priority[$.Finding_ID__r.Maltreatment_Type__c] default "") ) ) ) ) ) > 0 ) otherwise "2" ) when ( ( ($.ReportDispIs1 == true) and ($.Perpetrator2 != null) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) ) ) otherwise "" ) ),
	"Perpetrator-2Maltreatment-2" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( using (perp2 = $.Perpetrator2.Finding_ID__r.Perpetrator__c default "Perp", malType = $."Maltreatment-2TypeString"  ) ( ( "1" when (( sizeOf ( $.PerpetratorFindings filter (($.Finding_ID__r.Perpetrator__c == perp2) and ((malType == ($.Finding_ID__r.Primary_Finding_Type__c default "") ) or (malType == (priority[$.Finding_ID__r.Maltreatment_Type__c] default "") ) ) ) ) ) > 0 ) otherwise "2" ) when ( ( ($.ReportDispIs1 == true) and ($.Perpetrator2 != null) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) ) ) otherwise "" ) ),	
	"Perpetrator-2Maltreatment-3" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( using (perp2 = $.Perpetrator2.Finding_ID__r.Perpetrator__c default "Perp", malType = $."Maltreatment-3TypeString"  ) ( ( "1" when (( sizeOf ( $.PerpetratorFindings filter (($.Finding_ID__r.Perpetrator__c == perp2) and ((malType == ($.Finding_ID__r.Primary_Finding_Type__c default "") ) or (malType == (priority[$.Finding_ID__r.Maltreatment_Type__c] default "") ) ) ) ) ) > 0 ) otherwise "2" ) when ( ( ($.ReportDispIs1 == true) and ($.Perpetrator2 != null) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) ) ) otherwise "" ) ),
	"Perpetrator-2Maltreatment-4" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator2.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( using (perp2 = $.Perpetrator2.Finding_ID__r.Perpetrator__c default "Perp", malType = $."Maltreatment-4TypeString"  ) ( ( "1" when (( sizeOf ( $.PerpetratorFindings filter (($.Finding_ID__r.Perpetrator__c == perp2) and ((malType == ($.Finding_ID__r.Primary_Finding_Type__c default "") ) or (malType == (priority[$.Finding_ID__r.Maltreatment_Type__c] default "") ) ) ) ) ) > 0 ) otherwise "2" ) when ( ( ($.ReportDispIs1 == true) and ($.Perpetrator2 != null) and ($.Perpetrator2.Finding_ID__r.Perpetrator__c != null) ) ) otherwise "" ) ),
	
	"Perpetrator-3ID" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( encryptPad($.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.DEL_PID__c) when ( (($.ReportDispIs1 == true) and ($.Perpetrator3 != null) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) ) and ($.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.DEL_PID__c != null) ) otherwise ""),
	"Perpetrator-3Relationship" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( flowVars.LOVReturned[( "PERP_RELATION-" ++ ( upper ($.Perpetrator3.Victim_Perpetrator_Relationship__c ) ) )][0] default "99") when ( (($.ReportDispIs1 == true) and ($.Perpetrator3 != null))  ) otherwise ""),
	"Perpetrator-3asParent" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( flowVars.LOVReturned[( "PERP_PARENT-" ++ ( upper ($.Perpetrator3.Victim_Perpetrator_Relationship__c ) ) )][0] default "") when ( (($.ReportDispIs1 == true) and ($.Perpetrator3 != null)) and ($.Perpetrator3.Victim_Perpetrator_Relationship__c != null) ) otherwise ""),	
	"Perpetrator-3asCaregiver" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( ( "1" when ( ($.Perpetrator3.Finding_ID__r.Perpetrator__c == $.PrimaryCaregiverID) or ( $.Perpetrator3.Finding_ID__r.Perpetrator__c == $.SecondaryCaregiverID ) ) otherwise "2" ) when (($.PrimaryCaregiverID != null) or ($.SecondaryCaregiverID != null) ) otherwise "9" ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator3 != null)) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) ) otherwise ""), 
	"Perpetrator-3AgeatReport" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( using ( perpage =  (( pad("0",(2 - (sizeOf ( getAge($.Case.Associated_Intake__r.Report_Date__c,( $.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.Birthdate as :date ) ) as :string )))) ++ ( getAge($.Case.Associated_Intake__r.Report_Date__c,( $.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.Birthdate as :date ) ) as :string ) ) when ( ($.Case.Associated_Intake__r.Report_Date__c != null) and ($.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.Birthdate != null) ) otherwise "" ) ) (  (perpage when ((perpage as :number) < 75) otherwise "75" ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator3 != null)) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) and (perpage != "")  ) otherwise "" )),
	"Perpetrator-3Sex" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( flowVars.LOVReturned[( "CHILD_SEX-" ++ ($.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.DEL_Gender__c default "" ))][0] default "9") when ( (($.ReportDispIs1 == true) and ($.Perpetrator3 != null)) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-3RaceAmericanIndianAlaskaNative" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( raceDetermine(($.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c default "" ),(  $.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Secondary__c default "" ),"American Indian or Alaskan Native") ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator3 != null)) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-3RaceAsian" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( raceDetermine(($.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c default "" ),(  $.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Secondary__c default "" ),"Asian") ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator3 != null)) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-3RaceBlackorAfricanAmerican" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( raceDetermine(($.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c default "" ),(  $.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Secondary__c default "" ),"Black or African American") ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator3 != null)) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-3RaceNativeHawaiianorOtherPacificIslander" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( raceDetermine(($.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c default "" ),(  $.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Secondary__c default "" ),"Native Hawaiian or Other Pacific Islander") ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator3 != null)) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-3RaceWhite" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( raceDetermine(($.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c default "" ),(  $.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Secondary__c default "" ),"White") ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator3 != null)) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-3RaceUnabletoDetermine" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( "1" when ($.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c == "Unable to Determine" ) otherwise "2" )  when ( (($.ReportDispIs1 == true) and ($.Perpetrator3 != null)) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-3Ethnicity" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( flowVars.LOVReturned[("CHILD_ETHNICITY-" ++ ($.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__r.DEL_Ethnicity__c default "" ))][0] default "9")  when ( (($.ReportDispIs1 == true) and ($.Perpetrator3 != null)) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) ) otherwise ""),
	"Perpetrator-3MilitaryMember" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( ( ("1" when ( ( $.Perpetrator3.Finding_ID__r.Perpetrator__c == $.PrimaryCaregiverID) and (($.PrimaryCaregiverMOM default "") == "Yes") ) otherwise ( "1" when ( ( $.Perpetrator3.Finding_ID__r.Perpetrator__c == $.SecondaryCaregiverID) and ( ($.SecondaryCaregiverMOM default "") == "Yes") ) otherwise "2" ) ) when ( (($.PrimaryCaregiverID != null) and ($.PrimaryCaregiverMOM != null) )  or (($.SecondaryCaregiverID != null) and ($.SecondaryCaregiverMOM != null) )  ) otherwise "9" ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator3 != null)) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) ) otherwise ""), 
	"Perpetrator-3PriorAbuser" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( using (findingid = $.Perpetrator3.Finding_ID__r.Id default "") ( ("1" when ( ( sizeOf ((flowVars.perpSummaryMap[$.Perpetrator3.Finding_ID__r.Perpetrator__r.Person__c] default []) filter ($.Findings_ID__c != findingid) and (($.Start_Date__c as :date) < (flowVars.currentcase.Case_Close_Date__c as :date) ) ) ) > 0 ) otherwise "2"  ) when ( (($.ReportDispIs1 == true) and ($.Perpetrator3 != null) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) )  ) otherwise "" )),
	
	"Perpetrator-3Maltreatment-1" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( using (perp3 = $.Perpetrator3.Finding_ID__r.Perpetrator__c default "Perp", malType = $."Maltreatment-1TypeString"  ) ( ( "1" when (( sizeOf ( $.PerpetratorFindings filter (($.Finding_ID__r.Perpetrator__c == perp3) and ((malType == ($.Finding_ID__r.Primary_Finding_Type__c default "") ) or (malType == (priority[$.Finding_ID__r.Maltreatment_Type__c] default "") ) ) ) ) ) > 0 ) otherwise "2" ) when ( ( ($.ReportDispIs1 == true) and ($.Perpetrator3 != null) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) ) ) otherwise "" ) ),
	"Perpetrator-3Maltreatment-2" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( using (perp3 = $.Perpetrator3.Finding_ID__r.Perpetrator__c default "Perp", malType = $."Maltreatment-2TypeString"  ) ( ( "1" when (( sizeOf ( $.PerpetratorFindings filter (($.Finding_ID__r.Perpetrator__c == perp3) and ((malType == ($.Finding_ID__r.Primary_Finding_Type__c default "") ) or (malType == (priority[$.Finding_ID__r.Maltreatment_Type__c] default "") ) ) ) ) ) > 0 ) otherwise "2" ) when ( ( ($.ReportDispIs1 == true) and ($.Perpetrator3 != null) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) ) ) otherwise "" ) ),	
	"Perpetrator-3Maltreatment-3" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( using (perp3 = $.Perpetrator3.Finding_ID__r.Perpetrator__c default "Perp", malType = $."Maltreatment-3TypeString"  ) ( ( "1" when (( sizeOf ( $.PerpetratorFindings filter (($.Finding_ID__r.Perpetrator__c == perp3) and ((malType == ($.Finding_ID__r.Primary_Finding_Type__c default "") ) or (malType == (priority[$.Finding_ID__r.Maltreatment_Type__c] default "") ) ) ) ) ) > 0 ) otherwise "2" ) when ( ( ($.ReportDispIs1 == true) and ($.Perpetrator3 != null) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) ) ) otherwise "" ) ),
	"Perpetrator-3Maltreatment-4" : "" when (("Maltreatment-1Type" == "6") or ($.Perpetrator3.Finding_ID__r.Perpetrator_Outcome__c != "Substantiated") ) otherwise ( using (perp3 = $.Perpetrator3.Finding_ID__r.Perpetrator__c default "Perp", malType = $."Maltreatment-4TypeString"  ) ( ( "1" when (( sizeOf ( $.PerpetratorFindings filter (($.Finding_ID__r.Perpetrator__c == perp3) and ((malType == ($.Finding_ID__r.Primary_Finding_Type__c default "") ) or (malType == (priority[$.Finding_ID__r.Maltreatment_Type__c] default "") ) ) ) ) ) > 0 ) otherwise "2" ) when ( ( ($.ReportDispIs1 == true) and ($.Perpetrator3 != null) and ($.Perpetrator3.Finding_ID__r.Perpetrator__c != null) ) ) otherwise "" ) ),
	
	"AFCARSID" : $."AFCARSID" default "",
	"IncidentDate" : $."IncidentDate" default "",
	"ReportTime" : $."ReportTime" default "",
	"InvestigationStartTime" : $."InvestigationStartTime" default "",
	"DateofDeath" : ($."DateofDeath") when ($.MaltreatmentDeath == "1") otherwise "",
	"DateofDeathError" : "No Date of Death found" when (($.MaltreatmentDeath == "1") and ($.DateofDeath == "") ) otherwise null,
	"FosterCareDischargeDate" : ($.FosterCareServicesPlacement.Placement_Episode__r.Episode_End_Date__c as :date as :string {format : "MMddyyyy"} ) when (($.FosterCareServicesPlacement != null) and ($.PostResponseServices == "1") and ($.FosterCareServicesPlacement.Placement_Episode__r.Episode_End_Date__c != null)) otherwise "",
	"CustodyEndDate": $."CustodyEndDate",
	"HasAPlanofSafeCare" : $."HasAPlanofSafeCare" default "",
	"CARA-RelatedServices" : $."CARA-RelatedServices" default ""
}	
]]></dw:set-payload>
                    </dw:transform-message>
                    <dw:transform-message doc:name="Transform Message : Calculate Aggregate Elements">
                        <dw:input-payload mimeType="application/java"/>
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map {
	"Client PID" : $."Client PID",
	"Case ID" : $."Case ID",
	"Error Message" : (($."Error Message" default [] ) ++ ([$.DateofDeathError] filter ($ != null)  ) ) joinBy "," ,
	"SubmissionYear"  : $.SubmissionYear default "",
	"StateTerritory" : $.StateTerritory default "",
	"ReportID" : $.ReportID default "",
	"ChildID" :  $.ChildID default "",	
	"CountyofReport" :  $.CountyofReport default "",
	"ReportDate" : $.ReportDate default "",		
	"InvestigationStartDate" : $.InvestigationStartDate default "",	
	"ReportSource" : $.ReportSource default "",
	"ReportDisposition" : $.ReportDisposition default "",
	"ReportDispositionDate" : $.ReportDispositionDate default "",
	"Notifications" : $.Notifications default "",  
	
	"ChildAgeatReport" :  $."ChildAgeatReport",
	"ChildDateofBirth" : $.ChildDateofBirth default "",
	"ChildSex" :  $.ChildSex,	
	"ChildRaceAmericanIndianorAlaskaNative" :  $.ChildRaceAmericanIndianorAlaskaNative default "",
	"ChildRaceAsian" : $.ChildRaceAsian default "",
	"ChildRaceBlackorAfricanAmerican" : $.ChildRaceBlackorAfricanAmerican default "",
	"ChildRaceNativeHawaiianorOtherPacificIslander" : $.ChildRaceNativeHawaiianorOtherPacificIslander default "",
	"ChildRaceWhite" : $.ChildRaceWhite default "",
	"ChildRaceUnabletoDetermine" : $.ChildRaceUnabletoDetermine default "",
	"ChildEthnicity" : $.ChildEthnicity default "",
	"CountyofResidence" : $.CountyofResidence default "",
	"LivingArrangement" : $.LivingArrangement default "", 
	"MilitaryFamilyMember"   : $.MilitaryFamilyMember default "",
	"PriorVictims"  : $.PriorVictims default "",
	
	"Maltreatment-1Type" : "6" when (flowVars.nonVictimPerson[$$] == true) otherwise (($."Maltreatment-1Type" default "6") replace "9" with ""),
	"Maltreatment-1DispositionLevel" : "08" when (($."Maltreatment-1Type" default "") == "6") otherwise ("07" when ($."ReportDisposition" == "07")  otherwise (("05" when ((($."FindingAllegation" default [] contains $."Maltreatment-1Type") == false) and ($."PrimaryAllegation" default [] contains $."Maltreatment-1Type") == true) otherwise ($."Maltreatment-1DispositionLevel")) when (flowVars.currentcase.Status__c != "Abridged") otherwise ("07" when (flowVars.currentcase.Status__c == "Abridged") otherwise "99") default "")),
	"Maltreatment-2Type" : "" when (($."Maltreatment-2Type" == $."Maltreatment-1Type") or (flowVars.nonVictimPerson[$$] == true)) otherwise (($."Maltreatment-2Type" default "") replace "6" with "") when ($."Maltreatment-2Type" == "6") otherwise (($."Maltreatment-2Type" default "") replace "9" with ""),
	"Maltreatment-2DispositionLevel" : "" when ((($."Maltreatment-2Type" default "") == "9") or (flowVars.nonVictimPerson[$$] == true) or (($."Maltreatment-2Type" default "") == "6") or ($."Maltreatment-2Type" == "") or ($."Maltreatment-2Type" == $."Maltreatment-1Type") ) otherwise ("07" when ($."ReportDisposition" == "07") otherwise ( "05" when ((($."FindingAllegation" default [] contains $."Maltreatment-2Type") == false) and ($."PrimaryAllegation" default [] contains $."Maltreatment-2Type") == true) otherwise ($."Maltreatment-2DispositionLevel" default ""))),
	"Maltreatment-3Type" : "" when ((flowVars.nonVictimPerson[$$] == true) or ($."Maltreatment-3Type" == $."Maltreatment-2Type") or ($."Maltreatment-3Type" == $."Maltreatment-1Type") ) otherwise (($."Maltreatment-3Type" default "") replace "6" with "") when ($."Maltreatment-3Type" == "6") otherwise (($."Maltreatment-3Type" default "") replace "9" with ""),
	"Maltreatment-3DispositionLevel" : "" when ((($."Maltreatment-3Type" default "") == "9") or (flowVars.nonVictimPerson[$$] == true) or ($."Maltreatment-3Type" == "") or ($."Maltreatment-3Type" == $."Maltreatment-2Type") or ($."Maltreatment-3Type" == $."Maltreatment-1Type") ) otherwise ("07" when ($."ReportDisposition" == "07") otherwise ("05" when ((($."FindingAllegation" default [] contains $."Maltreatment-3Type") == false) and ($."PrimaryAllegation" default [] contains $."Maltreatment-3Type") == true) otherwise ($."Maltreatment-3DispositionLevel" default ""))),
	"Maltreatment-4Type" : "" when ((flowVars.nonVictimPerson[$$] == true) or ($."Maltreatment-4Type" == $."Maltreatment-3Type") or ($."Maltreatment-4Type" == $."Maltreatment-2Type") or ($."Maltreatment-4Type" == $."Maltreatment-1Type")) otherwise (($."Maltreatment-3Type" default "") replace "6" with "") when ($."Maltreatment-4Type" == "6") otherwise (($."Maltreatment-4Type" default "") replace "9" with ""),
	"Maltreatment-4DispositionLevel" : "" when ((($."Maltreatment-4Type" default "") == "9") or ($."Maltreatment-4Type" == "") or (flowVars.nonVictimPerson[$$] == true) or ($."Maltreatment-4Type" == $."Maltreatment-3Type") or ($."Maltreatment-4Type" == $."Maltreatment-2Type") or ($."Maltreatment-4Type" == $."Maltreatment-1Type")) otherwise ("07" when ($."ReportDisposition" == "07") otherwise ("05" when ((($."FindingAllegation" default [] contains $."Maltreatment-4Type") == false) and ($."PrimaryAllegation" default [] contains $."Maltreatment-4Type") == true) otherwise ($."Maltreatment-4DispositionLevel" default ""))),
	"MaltreatmentDeath" : $."MaltreatmentDeath" default "",
	
	"AlcoholAbuse-Child" : $."AlcoholAbuse-Child",
	"DrugAbuse-Child" : $."DrugAbuse-Child",
	"MentalRetardation-Child" : $."MentalRetardation-Child",
	"EmotionallyDisturbed-Child" : $."EmotionallyDisturbed-Child",
	"VisuallyorHearingImpaired-Child" : $."VisuallyorHearingImpaired-Child",
	"LearningDisability-Child" : $."LearningDisability-Child",
	"PhysicallyDisabled-Child" : $."PhysicallyDisabled-Child",
	"BehaviorProblem-Child" : $."BehaviorProblem-Child",
	"OtherMedicalCondition-Child" : $."OtherMedicalCondition-Child",
	"AlcoholAbuse-Caregiver(s)" : $."AlcoholAbuse-Caregiver(s)",
	"DrugAbuse-Caregiver(s)" : $."DrugAbuse-Caregiver(s)",
	"MentalRetardation-Caregiver(s)" : $."MentalRetardation-Caregiver(s)",
	"EmotionallyDisturbed-Caregiver(s)" : $."EmotionallyDisturbed-Caregiver(s)",
	"VisuallyorHearingImpaired-Caregiver(s)" : $."VisuallyorHearingImpaired-Caregiver(s)",
	"LearningDisability-Caregiver(s)" : $."LearningDisability-Caregiver(s)",
	"PhysicallyDisabled-Caregiver(s)" : $."PhysicallyDisabled-Caregiver(s)",
	"OtherMedicalCondition-Caregiver(s)" : $."OtherMedicalCondition-Caregiver(s)",
	"DomesticViolence" : $."DomesticViolence",
	"InadequateHousing" : $."InadequateHousing",
	"FinancialProblem" : $."FinancialProblem",		
	"PublicAssistance" : $."PublicAssistance" default "",
	
	"PostResponseServices"  : $."PostResponseServices",
	
	"ServiceDate" : $."ServiceDate" default "",
	"FamilySupportServices" : $."FamilySupportServices",
	"FamilyPreservationServices" : $."FamilyPreservationServices",	
	"FosterCareServices" : $."FosterCareServices" default "",
	"RemovalDate" : $."RemovalDate" default "",
	"JuvenileCourtPetition" : $."JuvenileCourtPetition",
	"PetitionDate" : $."PetitionDate",
	"Court-AppointedRepresentative" : $."Court-AppointedRepresentative",
	"AdoptionServices" : $."AdoptionServices" default "",
	"CaseManagementServices" : $."CaseManagementServices" default "",
	
	"CounselingServices" : $."CounselingServices",
	"DaycareServices-Child" : $."DaycareServices-Child",
	"EducationalandTrainingServices" : $."EducationalandTrainingServices",
	"EmploymentServices" : $."EmploymentServices",
	"FamilyPlanningServices" : $."FamilyPlanningServices",
	"Health-RelatedandHomeHealthServices" : $."Health-RelatedandHomeHealthServices",
	"Home-BasedServices" : $."Home-BasedServices",
	"HousingServices" : $."HousingServices",
	
	"IndependentandTransitionalLivingServices" : $."IndependentandTransitionalLivingServices" default "",
	
	"InformationandReferralServices" : $."InformationandReferralServices",
	"LegalServices" : $."LegalServices",
    "MentalHealthServices" : $."MentalHealthServices",
    "PregnancyParentingServicesforYoungParents" : $."PregnancyParentingServicesforYoungParents",
    
	"RespiteCareServices" : "",
	
	"SpecialServices-Disabled" : $."SpecialServices-Disabled",
	
	"SpecialServices-JuvenileDelinquent" : "",
	
	"SubstanceAbuseServices" : $."SubstanceAbuseServices",
	"TransportationServices" : $."TransportationServices",
	"OtherServices" : $."OtherServices",
	"WorkerID" : $."WorkerID" default "",
	"SupervisorID" : $."SupervisorID" default "",


	"Perpetrator-1ID" : $."Perpetrator-1ID",
	"Perpetrator-1Relationship" : $."Perpetrator-1Relationship",
	"Perpetrator-1asParent" : $."Perpetrator-1asParent" when ((flowVars.currentcase.Case_Type__c == "Family Investigation") and ($."Perpetrator-1Relationship" == "01")) otherwise "",	
	"Perpetrator-1asCaregiver" : $."Perpetrator-1asCaregiver", 
	"Perpetrator-1AgeatReport" : $."Perpetrator-1AgeatReport",
	"Perpetrator-1Sex" : $."Perpetrator-1Sex",
	"Perpetrator-1RaceAmericanIndianAlaskaNative" : $."Perpetrator-1RaceAmericanIndianAlaskaNative",
	"Perpetrator-1RaceAsian" : $."Perpetrator-1RaceAsian",
	"Perpetrator-1RaceBlackorAfricanAmerican" : $."Perpetrator-1RaceBlackorAfricanAmerican",
	"Perpetrator-1RaceNativeHawaiianorOtherPacificIslander" : $."Perpetrator-1RaceNativeHawaiianorOtherPacificIslander",
	"Perpetrator-1RaceWhite" : $."Perpetrator-1RaceWhite",
	"Perpetrator-1RaceUnabletoDetermine" : $."Perpetrator-1RaceUnabletoDetermine",
	"Perpetrator-1Ethnicity" : $."Perpetrator-1Ethnicity",
	"Perpetrator-1MilitaryMember" : $."Perpetrator-1MilitaryMember",
	//"Perpetrator-1MilitaryMember" : $."Perpetrator-1MilitaryMember" when (($."Perpetrator-1asCaregiver" != "") or ($."Perpetrator-1asCaregiver" != "2") ) otherwise "",
	"Perpetrator-1PriorAbuser" : $."Perpetrator-1PriorAbuser" default "",
	"Perpetrator-1Maltreatment-1" : $."Perpetrator-1Maltreatment-1" default "",
	"Perpetrator-1Maltreatment-2" : $."Perpetrator-1Maltreatment-2" default "",
	"Perpetrator-1Maltreatment-3" : $."Perpetrator-1Maltreatment-3" default "",
	"Perpetrator-1Maltreatment-4" : $."Perpetrator-1Maltreatment-4" default "",

	"Perpetrator-2ID" : $."Perpetrator-2ID" default "" ,
	"Perpetrator-2Relationship" : $."Perpetrator-2Relationship" default "",
	"Perpetrator-2asParent" : $."Perpetrator-2asParent" when ((flowVars.currentcase.Case_Type__c == "Family Investigation") and ($."Perpetrator-2Relationship" == "01")) otherwise "",
	"Perpetrator-2asCaregiver" : $."Perpetrator-2asCaregiver" default "",
	"Perpetrator-2AgeatReport" : $."Perpetrator-2AgeatReport" default "",
	"Perpetrator-2Sex" : $."Perpetrator-2Sex" default "",
	"Perpetrator-2RaceAmericanIndianAlaskaNative" : $."Perpetrator-2RaceAmericanIndianAlaskaNative" default "",
	"Perpetrator-2RaceAsian" : $."Perpetrator-2RaceAsian" default "",
	"Perpetrator-2RaceBlackorAfricanAmerican" : $."Perpetrator-2RaceBlackorAfricanAmerican" default "",
	"Perpetrator-2RaceNativeHawaiianorOtherPacificIslander" : $."Perpetrator-2RaceNativeHawaiianorOtherPacificIslander" default "",
	"Perpetrator-2RaceWhite" : $."Perpetrator-2RaceWhite" default "",
	"Perpetrator-2RaceUnabletoDetermine" : $."Perpetrator-2RaceUnabletoDetermine" default "",
	"Perpetrator-2Ethnicity" : $."Perpetrator-2Ethnicity" default "",
	"Perpetrator-2MilitaryMember" : $."Perpetrator-2MilitaryMember",
	//"Perpetrator-2MilitaryMember" : $."Perpetrator-2MilitaryMember" when (($."Perpetrator-2asCaregiver" != "") or ($."Perpetrator-2asCaregiver" != "2") ) otherwise "",
	"Perpetrator-2PriorAbuser" : $."Perpetrator-2PriorAbuser" default "",
	"Perpetrator-2Maltreatment-1" : $."Perpetrator-2Maltreatment-1" default "",
	"Perpetrator-2Maltreatment-2" : $."Perpetrator-2Maltreatment-2" default "",
	"Perpetrator-2Maltreatment-3" : $."Perpetrator-2Maltreatment-3" default "",
	"Perpetrator-2Maltreatment-4" : $."Perpetrator-2Maltreatment-4" default "",
	
	"Perpetrator-3ID" : $."Perpetrator-3ID" default "",
	"Perpetrator-3Relationship" : $."Perpetrator-3Relationship" default "",
	"Perpetrator-3asParent" : $."Perpetrator-3asParent" when ((flowVars.currentcase.Case_Type__c == "Family Investigation") and ($."Perpetrator-3Relationship" == "01")) otherwise "",
	"Perpetrator-3asCaregiver" : $."Perpetrator-3asCaregiver" default "",
	"Perpetrator-3AgeatReport" : $."Perpetrator-3AgeatReport" default "",
	"Perpetrator-3Sex" : $."Perpetrator-3Sex" default "",
	"Perpetrator-3RaceAmericanIndianAlaskaNative" : $."Perpetrator-3RaceAmericanIndianAlaskaNative" default "",
	"Perpetrator-3RaceAsian" : $."Perpetrator-3RaceAsian" default "",
	"Perpetrator-3RaceBlackorAfricanAmerican" : $."Perpetrator-3RaceBlackorAfricanAmerican" default "",
	"Perpetrator-3RaceNativeHawaiianorOtherPacificIslander" : $."Perpetrator-3RaceNativeHawaiianorOtherPacificIslander" default "",
	"Perpetrator-3RaceWhite" : $."Perpetrator-3RaceWhite" default "",
	"Perpetrator-3RaceUnabletoDetermine" : $."Perpetrator-3RaceUnabletoDetermine" default "",
	"Perpetrator-3Ethnicity" : $."Perpetrator-3Ethnicity" default "",
	"Perpetrator-3MilitaryMember" : $."Perpetrator-3MilitaryMember",
	//"Perpetrator-3MilitaryMember" : $."Perpetrator-3MilitaryMember" when (($."Perpetrator-3asCaregiver" != "") or ($."Perpetrator-3asCaregiver" != "2") ) otherwise "",
	"Perpetrator-3PriorAbuser" : $."Perpetrator-3PriorAbuser" default "",
	"Perpetrator-3Maltreatment-1" : $."Perpetrator-3Maltreatment-1" default "",
	"Perpetrator-3Maltreatment-2" : $."Perpetrator-3Maltreatment-2" default "",
	"Perpetrator-3Maltreatment-3" : $."Perpetrator-3Maltreatment-3" default "",
	"Perpetrator-3Maltreatment-4" : $."Perpetrator-3Maltreatment-4" default "",
	
	"AFCARSID" : $."AFCARSID" default "",
	"IncidentDate" : $."IncidentDate" default "",
	"ReportTime" : $."ReportTime" default "",
	"InvestigationStartTime" : $."InvestigationStartTime" default "",
	"DateofDeath" : $."DateofDeath" default "",
	"FosterCareDischargeDate" : $."FosterCareDischargeDate" when ($."FosterCareDischargeDate" != "" and $."CustodyEndDate" == "") otherwise ($."CustodyEndDate" when (($."CustodyEndDate" != "") and ($."FosterCareDischargeDate" != "") and ($."FosterCareDischargeDate" >= $."CustodyEndDate")) otherwise ""),
	"HasAPlanofSafeCare" : $."HasAPlanofSafeCare" default "",
	"CARA-RelatedServices" : $."CARA-RelatedServices" default ""
}	
]]></dw:set-payload>
                    </dw:transform-message>
                    <dw:transform-message doc:name="Transform Message : Collect NCANDS Report records">
                        <dw:set-variable variableName="elementDetails"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.elementDetails default []) 
 ++ (payload)]]></dw:set-variable>
                    </dw:transform-message>
                </when>
                <otherwise>
                    <logger message="No Person Cases identified for the current Case under Iteration" level="INFO" doc:name="Logger : No Person Cases Identified"/>
                </otherwise>
            </choice>

        </foreach>

    </sub-flow>

    <sub-flow name="ncands-report-generation-get-priorabusers-Sub_Flow" doc:description="Flow to get Prior Abuser Information using Perpetrator Contact Id">
        <logger message="Flow to get Prior Abuser Information using Perpetrator Contact Id Invoked" level="INFO" doc:name="Logger : Prior Abuser information" doc:description="Log entry for getting Prior Abuser information"/>
        <set-variable variableName="perpSummaryMap" value="#[dw(&quot;{}&quot;)]" doc:name="Variable : Initialize Perp Summary Map" doc:description="Initialize Perp Summary Map"/>
    
        <foreach collection="#[flowVars.PerpContactIDList]" doc:name="For Each : Contact" doc:description="Iterate over each Perpetrator Contact in the report. Iterating over 150 Contacts at a time." batchSize="150">
            <dw:transform-message doc:name="Transform Message : DeSerialize Payload">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Prepare where clause">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $ ++ "'")) joinBy ","]]></dw:set-payload>
            </dw:transform-message>
            <sfdc:query config-ref="Salesforce__Basic_Authentication" query="Select Id, Person__c, Start_Date__c, Findings_ID__c from DEL_Perpetrator_Summary__c where Person__c IN (#[payload]) and Start_Date__c != null" doc:name="Salesforce : Get Perpetrator Summary Records" doc:description="Query Salesforce to get prior Abuser Information using Perpetrator Contact Salesfrce Id"/>
            <dw:transform-message doc:name="Transform Message : Consume payload">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Group Get Perpetrator Summary Records">
                <dw:set-variable variableName="perpSummaryMap"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.perpSummaryMap) ++ (payload groupBy $.Person__c)]]></dw:set-variable>
            </dw:transform-message>
        </foreach>
    </sub-flow>


    <sub-flow name="ncands-report-generation-get-independentcasesinfo-Sub_Flow" doc:description="Flow to get Independent Living Case information using Contact Id">
        <logger message="Invoked flow to gather Independent Living Cases information" level="INFO" doc:name="Logger : Independent Living Cases" doc:description="Log entry for Independent Living Cases"/>
        <foreach collection="#[flowVars.ContactIDList]" doc:name="For Each : Contact" doc:description="Iterate over each Contact qualified for the report" batchSize="150">
            <dw:transform-message doc:name="Transform Message : DeSerialize Payload">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Prepare where clause">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $ ++ "'")) joinBy ","]]></dw:set-payload>
            </dw:transform-message>
            <sfdc:query config-ref="Salesforce__Basic_Authentication" query="Select Id, Person__c, Case__c,Case__r.Case_Close_Date__c, Case__r.Case_Open_Date__c from DEL_Person_Cases__c where Case__r.Case_Type__c = 'Independent Living' AND Case__r.Active_Status__c = 'Active' AND Person__c IN (#[payload])" doc:name="Salesforce : Get Independent Living Cases" doc:description="Get Independent Living Cases related to the Persons"/>
            <dw:transform-message doc:name="Transform Message : Consume payload">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Group Independent Living Cases by Person">
                <dw:set-variable variableName="ilcasesMap"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.ilcasesMap default {}) ++ (payload groupBy $.Person__c)]]></dw:set-variable>
            </dw:transform-message>
        </foreach>
    </sub-flow>    
    
    <sub-flow name="ncands-report-generation-get-petitions-Sub_Flow" doc:description="Flow to get Petition information using Contact Id">
        <logger message="Flow invoked to get Petition related information" level="INFO" doc:name="Logger : Petition Information" doc:description="Log entry for Petition Information"/>
        <foreach collection="#[flowVars.ContactIDList]" doc:name="For Each : Contact" doc:description="Iterate over each Contact indetified for the report" batchSize="150">
            <dw:transform-message doc:name="Transform Message : DeSerialize Payload">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Prepare where clause">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $ ++ "'")) joinBy ","]]></dw:set-payload>
            </dw:transform-message>
            <sfdc:query config-ref="Salesforce__Basic_Authentication" query="SELECT Id, Case_Person__r.Person__c, Petition_Children__r.Petition_Date__c, Petition_Children__r.Case_ID__r.Case_type__c   FROM DEL_Person_Involved__c WHERE Petition_Children__r.Recordtype.developerName = 'DFS_Dependency_Neglect_Petition' AND Case_Person__r.Person__c IN (#[payload])" doc:name="Salesforce : Get Petitions" doc:description="Get Petitions related to the Persons"/>
            <dw:transform-message doc:name="Transform Message : Consume payload">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Group Petitions">
                <dw:set-variable variableName="petitionsMap"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.petitionsMap default {}) ++ (payload groupBy $.Case_Person__r.Person__c)]]></dw:set-variable>
            </dw:transform-message>
        </foreach>
    </sub-flow>
    <sub-flow name="ncands-report-generation-get-findingsinfo-Sub_Flow" doc:description="Flow to get Finding, Victim, Perpetrator Details">
        <logger message="Flow invoked to get Finding, Victim, Perpetrator details" level="INFO" doc:name="Logger : Findings information" doc:description="Log entry for Findings information"/>
        <set-variable variableName="PerpContactIDList" value="#[dw(&quot;[]&quot;)]" doc:name="Variable : Initialize Perp Contact List" doc:description="Initialize Perp Contact List"/>
        <set-variable variableName="findingsInfoMap" value="#[dw(&quot;{}&quot;)]" doc:name="Variable : Initialize Findings Map" doc:description="Initialize Findings Information Map"/>
                <foreach collection="#[flowVars.CaseList]" batchSize="150" doc:name="For Each : Case" doc:description="Iterate over each Investigation Case in the report">
            <dw:transform-message doc:name="Transform Message : DeSerialize payload">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Prepare where clause">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $ ++ "'")) joinBy ","]]></dw:set-payload>
            </dw:transform-message>
            <sfdc:query config-ref="Salesforce__Basic_Authentication" query="Select Id, Case_ID__c, Perpetrator__c, Perpetrator__r.Person__c, (Select Id, Victim__c, Finding_ID__r.Id, Finding_ID__r.Finding_Type__c, Finding_ID__r.Maltreatment_Type__c, Finding_ID__r.Perpetrator_Outcome__c, Finding_ID__r.Primary_Finding_Type__c, Finding_ID__r.Finding_Status__c, Finding_ID__r.CPR_Level__c,Victim_Perpetrator_Relationship__c,Finding_ID__r.Perpetrator__r.Person__c,Finding_ID__r.Perpetrator__r.Person__r.DEL_PID__c,Finding_ID__r.Perpetrator__r.Person__r.BirthDate,Finding_ID__r.Perpetrator__r.Person__r.DEL_Gender__c,Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Primary__c,Finding_ID__r.Perpetrator__r.Person__r.DEL_Ethnicity__c,Finding_ID__r.Perpetrator__r.Person__r.DEL_Race_Secondary__c,Finding_ID__r.LastModifiedDate,Finding_ID__r.Perpetrator__c  from Victims__r where Victim_Information_Status__c = 'Completed' order by CreatedDate desc) from DEL_Finding__c where Case_ID__c IN (#[payload])" doc:name="Salesforce : Get Finding Details" doc:description="Get Finding Details"/>
            <dw:transform-message doc:name="Transform Message : Consume payload">
                 <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Get Perp Contact List">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-variable variableName="PerpContactIDList"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.PerpContactIDList default [])
++ (payload.Perpetrator__r.Person__c default [] )]]></dw:set-variable>
            </dw:transform-message>                            
            <dw:transform-message doc:name="Transform Message : Group By Case and Victim">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
((payload default []) groupBy $.Case_ID__c) mapObject {
	($$ as :string) : (((flatten $.Victims__r filter ($.Victim__c != null) default []) groupBy $.Victim__c) default {})  
}]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Group Finding Details">
                 <dw:input-payload mimeType="application/java"/>
                <dw:set-variable variableName="findingsInfoMap"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.findingsInfoMap) ++ (payload )]]></dw:set-variable>
            </dw:transform-message>
        
        </foreach>
		
    </sub-flow>
    
    
    <sub-flow name="ncands-report-get-victimDetails-Sub_Flow" doc:description="Flow to get Victim Details">
        <logger message="Flow invoked to get Victim Details" level="INFO" doc:name="Logger : Victim Details" doc:description="Log Enry for Victim Details"/>
        <foreach collection="#[flowVars.personCasesIDList]" batchSize="150" doc:name="For Each Person Case" doc:description="Iterate over each Person Cases identified for the report">
            <dw:transform-message doc:name="Transform Message : DeSerialize payload">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Prepare where clause">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $ ++ "'")) joinBy ","]]></dw:set-payload>
            </dw:transform-message>
            <sfdc:query config-ref="Salesforce__Basic_Authentication" query="Select Id, Victim__c, Prior_Victim__c, Finding_ID__c, Finding_ID__r.Primary_Finding_Type__c, Finding_ID__r.Perpetrator_Outcome__c, Finding_ID__r.Finding_Status__c, Finding_ID__r.Maltreatment_Type__c, Finding_ID__r.Finding_Type__c  from DEL_Victim__c  where Victim__c IN (#[payload])" doc:name="Salesforce : Get Victim Details" doc:description="Get Victim Details"/>
            <dw:transform-message doc:name="Transform Message : Consume payload">
                 <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Group Victim Details">
                 <dw:input-payload mimeType="application/java"/><dw:set-variable variableName="victimDetailsMap"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.victimDetailsMap default {})
++ ((payload groupBy $.Victim__c))]]></dw:set-variable>
            </dw:transform-message>
        
        </foreach>

    </sub-flow>
    <sub-flow name="ncands-report-get-intakePersonDetails-Sub_Flow" doc:description="Flow to get Intake Person Details">
        <logger message="Flow invoked to get Intake Person details" level="INFO" doc:name="Logger : Intake Person Details" doc:description="Log entry for Intake Person Details"/>
        <foreach collection="#[flowVars.AssociatedIntakeIDList]" batchSize="150" doc:name="For Each Associated Intake" doc:description="Iterate over each Intake associated with the Investigation Cases used in the report">
            <dw:transform-message doc:name="Transform Message : DeSerialize payload">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Prepare where clause">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $ ++ "'")) joinBy ","]]></dw:set-payload>
            </dw:transform-message>
            <sfdc:query config-ref="Salesforce__Basic_Authentication" query="SELECT Id,Intake__c, DOB__c, Gender__c,Ethnicity__c, Race__c,  Validated_Person_Name__c, Validated_Person_Name__r.DEL_Race_Primary__c, Validated_Person_Name__r.DEL_Race_Secondary__c,Intake_Address__c,Intake_Address__r.County__c FROM DEL_Intake_Person__c where Validated_Person_Name__c != null and Intake__c IN (#[payload]) " doc:name="Salesforce : Get Intake Persons Info"/>
            <dw:transform-message doc:name="Transform Message : Consume payload">
                 <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Group Inake Person by Intake">
                 <dw:input-payload mimeType="application/java"/><dw:set-variable variableName="intakePersonsMap"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.intakePersonsMap default {})
++ ((payload groupBy $.Intake__c) mapObject {
	($$ as :string) : $ groupBy $.Validated_Person_Name__c
})]]></dw:set-variable>
            </dw:transform-message>        
        </foreach>
    </sub-flow>

	
    <sub-flow name="ncands-report-get-case-initialinterviewinfo-Sub_Flow" doc:description="Flow to gather Initial Interview Details">
        <logger message="Flow invoked to gather Initial Interview Details" level="INFO" doc:name="Logger : Initial Interview" doc:description="Log entry for Initial Interview"/>
        <foreach collection="#[flowVars.CaseIDList]" doc:name="For Each : Iterate over each Case" doc:description="Iterate over each Investigation Case in the report" batchSize="150">
            <dw:transform-message doc:name="Transform Message : DeSerialize payload">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Prepare where clause">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $ ++ "'")) joinBy ","]]></dw:set-payload>
            </dw:transform-message>
            <sfdc:query config-ref="Salesforce__Basic_Authentication" query="Select Id, Case_ID__c, Interview_DateTime__c from DEL_Initial_Interview__c where Case_ID__c IN (#[payload]) AND Interview_Status__c = 'Completed' order by Interview_DateTime__c asc" doc:name="Salesforce : Get Initial Interview Info" doc:description="Get Initial Interview Info for the specified Cases"/>
            <dw:transform-message doc:name="Transform Message : Consume Payload">
                 <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Group Initial Interview Information">
                 <dw:input-payload mimeType="application/java"/><dw:set-variable variableName="initInterview"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.initInterview default {}) ++ (payload groupBy $.Case_ID__c)]]></dw:set-variable>
            </dw:transform-message>
        </foreach>
    </sub-flow>
    <sub-flow name="ncands-report_get_person_cases_Sub_Flow" doc:description="Flow to get Person Cases details for the report.">
        <logger message="Invoke flow to get Person Cases details for the report." level="INFO" doc:name="Logger : Person Cases details" doc:description="Log entry for Person Cases details"/>
        <foreach collection="#[flowVars.CaseIDList]" batchSize="150" doc:name="For Each : Iterate over each Case" doc:description="Iterate over each Case">
            <dw:transform-message doc:name="Transform Message : DeSerialize payload">
                 <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Prepare Where Clause">
                 <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $ ++ "'")) joinBy ","]]></dw:set-payload>
            </dw:transform-message>
            <sfdc:query config-ref="Salesforce__Basic_Authentication" query="SELECT Id, Case__c, Case__r.Investigation_Outcome__c, Case__r.Abridge_Reason__c , Case__r.Name, Case__r.Assigned_Worker__r.DEL_PID__c, Case__r.Assigned_Supervisor__r.DEL_PID__c, Case__r.Associated_Intake__c, Case__r.Associated_Intake__r.Name, Case__r.Associated_Intake__r.County__c, Case__r.Associated_Intake__r.Report_Date__c, Case__r.Associated_Intake__r.Incident_Date__c,  Case__r.Associated_Intake__r.Report_Source__c,Case__r.Associated_Intake__r.Report_Referred_to_Law_Enforcement__c , Case__r.Case_Close_Date__c, Case__r.Case_Open_Date__c, Case__r.Status__c, Case__r.Case_Type__c, Case__r.Living_Arrangement__c, Case__r.Primary_Caregiver__c, Case__r.Secondary_Caregiver__c, Case__r.Primary_Caregiver_Member_of_Military__c, Case__r.Secondary_Caregiver_Member_of_Military__c, Role__c, Relation__c, Person_PID__c, Person__r.BirthDate, Person__r.DEL_Gender__c, Person__r.DEL_Race_Primary__c, Person__r.DEL_Race_Secondary__c,Person__r.DEL_Ethnicity__c,Person__r.DEL_Date_of_Death__c,Person__c,Victim_Perpetrator_Relationship__c, Case__r.Alcohol_Abuse__c, Case__r.Drug_Abuse__c, Case__r.Mental_Retardation__c, Case__r.Clinically_Diag_Emotional_Disturbance__c, Case__r.Visually_Hearing_Impaired__c, Case__r.Learning_Disability__c, Case__r.Phy_Defect_Handicap_Delayed_Phy_Dev__c, Case__r.Behavior_Problem_Child__c, Case__r.Other_Med_Diag_Condition_With_Spl_Care__c, Case__r.Addiction_Alcohol_Misuse__c, Case__r.Addiction_Drug_Misuse__c, Case__r.Mental_Retardation_Caregiver__c, Case__r.Clinically_Diag_Emotional_Dist_Caregiver__c, Case__r.Visually_Hearing_Impaired_caregiver__c, Case__r.Learning_Disability_Caregiver__c, Case__r.Physically_Disabled_Defects_Handicaps__c, Case__r.Other_Medical_Chronic_Condition__c, Case__r.Domestic_Violence__c, Case__r.Housing_Problems__c, Case__r.Low_Income_Financial_Stress__c  FROM DEL_Person_Cases__c where Case__c IN (#[payload]) and Person_PID__c != null" doc:name="Salesforce : Get Person Cases Details" doc:description="Get Person Cases Details"/>
            <dw:transform-message doc:name="Transform Message : Consume Payload">
                <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Group and Add enteries to Person Cases Map">
                <dw:input-payload mimeType="application/java"/><dw:set-variable variableName="personCasesMap"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.personCasesMap default {}) 
++
( ( payload default []) groupBy $.Case__c)]]></dw:set-variable>
            </dw:transform-message>
        </foreach>
    </sub-flow>

    <sub-flow name="ncands-report-get-Case-and-client-details">
        <logger message="#[flowVars.query]" level="INFO" doc:name="Logger : Query Case Details"/>
        <sfdc:query config-ref="Salesforce__Basic_Authentication_dev" query="#[flowVars.query]" doc:name="Salesforce : Get Case Details"/>
        <dw:transform-message doc:name="Transform Message : Get Case Records">
            <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map $) ]]></dw:set-payload>
        </dw:transform-message>
        <validation:is-true config-ref="Validation_Configuration1" message="No Records Exists with the provided criteria" exceptionClass="java.lang.Exception" expression="#[payload.size() &gt; 0]" doc:name="Validation : Check if any Case Records Exists" doc:description="Check if any Case Records Exists with the user specified criteria"/>
     

    </sub-flow>
   
    <sub-flow name="NCANDS_callLOVflow" doc:description="Flow to set LOV Parameters to be retrieved through LOV Framework">
        <set-payload value="{&quot;Direction&quot; : &quot;Outbound&quot;, &quot;LOVNames&quot; : &quot;'ENCRYPTION_MAPPING','LIVING_ARRANGEMENT','CHILD_ETHNICITY','CHILD_SEX','REPORT_SOURCE','DISPOSITION_MAP','COUNTY_MAP','ABRIDGE_REASON','MALTREATMENT_TYPE','PERP_PARENT','PERP_RELATION'&quot;}" mimeType="application/json" doc:name="Set Payload"/>
        <flow-ref name="lovquerySub_Flow" doc:name="lovquerySub_Flow"/>
    </sub-flow>
   <sub-flow name="ncands-report-get-IntakeInfo-Sub_Flow" doc:description="Flow to get Intake information">
        <logger message="Flow to get Intake information" level="INFO" doc:name="Logger : Intake information" doc:description="Log entry for Intake information"/>
        <foreach collection="#[flowVars.AssociatedIntakeIDList]" doc:name="For Each : Iterate over 150 records at a time" batchSize="150">
        
            <dw:transform-message doc:name="Transform Message : Get Comma Separated Associated Intake Id List">
                <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $ ++ "'")) joinBy ","]]></dw:set-payload>
            </dw:transform-message>
            <sfdc:query config-ref="Salesforce__Basic_Authentication_dev" query="SELECT ID, Primary_Allegation__c, Physical_Abuse__c , Neglect__c,Sexual_Abuse_Exploitation__c ,Emotional_Abuse_Neglect__c ,Dependency__c,Death_of_Child__c,Human_Trafficking_Allegation_Type__c,Death_Due_To_Abuse__c,Death_Due_To_Neglect__c,Infant_with_prenatal_substance_exposure__c,Sexual_Trafficking__c,Other_Trafficking__c,Sudden_unexpected_and_unexplained_death__c, (SELECT ID,Role__c,Validated_Person_Name__c FROM Intake_Persons__r),(SELECT ID,County__c FROM Intake_Addresses__r) FROM DEL_Intake__c WHERE ID IN (#[payload])" doc:name="Salesforce : Get Intake Info Records" doc:description="Get Intake information using Intake Salesforce Ids"/>
			<!--Death_of_Child__c,Human_Trafficking_Allegation_Type__c,Death_Due_To_Abuse__c,Death_Due_To_Neglect__c,Infant_with_prenatal_substance_exposure__c,Sexual_Trafficking__c,Other_Trafficking__c,Sudden_unexpected_and_unexplained_death__c,-->
            <dw:transform-message doc:name="Transform Message : Consume payload">
                <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Get Intake Info">
                <dw:input-payload mimeType="application/java"/><dw:set-variable variableName="intakeInfoRecordsMap"><![CDATA[%dw 1.0
%output application/java
%var priorityMap = {
	"Physical Abuse" : "1",
	"Neglect" : "2",
	"Sexual Abuse/Exploitation" : "4",
	"Emotional Abuse/Neglect" : "5",
	"Dependency" : "8",
	"Human Trafficking" : "7",
	"Blank" : "6"
}
%var intakeToFindingMap = {
	"Physical Abuse" : ["Abuse"],
	"Neglect" : ["Neglect"],
	"Sexual Abuse/Exploitation" : ["Sex Abuse"],
	"Emotional Abuse/Neglect" : ["Abuse","Neglect"],
	"Dependency" : ["Dependency"]
}
---
(flowVars.intakeInfoRecordsMap default []) ++ 
(
	(payload default []) map {
		"Id" : $.Id,
		"Primary_Allegation__c" : $.Primary_Allegation__c,
		"Sexual_Abuse_Exploitation__c" : $.Sexual_Abuse_Exploitation__c,
		"Physical_Abuse__c" : $.Physical_Abuse__c,
		"Neglect__c" : $.Neglect__c,
		"Dependency__c" : $.Dependency__c,
		"Emotional_Abuse_Neglect__c" : $.Emotional_Abuse_Neglect__c,
		"Death_of_Child__c" : $.Death_of_Child__c,
		"Human_Trafficking_Allegation_Type__c" : $.Human_Trafficking_Allegation_Type__c,
		"Infant_is_substance_affected__c" : $.Infant_is_substance_affected__c,
		"Infant_or_mother_with_positive_toxicolog__c" : $.Infant_or_mother_with_positive_toxicolog__c,
		"Infant_with_prenatal_substance_exposure__c" : $.Infant_with_prenatal_substance_exposure__c,
		"Mother_with_positive_toxicology_within_6__c" : $.Mother_with_positive_toxicology_within_6__c,
		"Nature_of_Complaint_Report__c" : $.Nature_of_Complaint_Report__c,
		"Death_Due_To_Abuse__c" : $.Death_Due_To_Abuse__c,
		"Death_Due_To_Neglect__c" : $.Death_Due_To_Neglect__c,
		"Sudden_unexpected_and_unexplained_death__c" : $.Sudden_unexpected_and_unexplained_death__c,
		"Other_Trafficking__c" : $.Other_Trafficking__c,
		"Sexual_Trafficking__c" : $.Sexual_Trafficking__c,
		"MaltreatmentList" : [
					((priorityMap["Human Trafficking"]) when (($.Sexual_Trafficking__c == "true") and ($.Primary_Allegation__c == "Human Trafficking") ) otherwise (priorityMap[$.Primary_Allegation__c default "Blank"])),
					((priorityMap["Physical Abuse"]) when ((($.Physical_Abuse__c == "true") and ($.Primary_Allegation__c != "Physical Abuse") ) or (($.Death_Due_To_Abuse__c == "true") and ($.Primary_Allegation__c != "Physical Abuse") )) otherwise null),
					((priorityMap["Neglect"]) when ((($.Neglect__c == "true") and ($.Primary_Allegation__c != "Neglect") ) or (($.Infant_with_prenatal_substance_exposure__c == "true") and ($.Primary_Allegation__c != "Neglect") ) or (($.Death_Due_To_Neglect__c == "true") and ($.Primary_Allegation__c != "Neglect") ) or (($.Sudden_unexpected_and_unexplained_death__c == "true") and ($.Primary_Allegation__c != "Neglect") )) otherwise null),
					((priorityMap["Sexual Abuse/Exploitation"]) when (($.Sexual_Abuse_Exploitation__c == "true") and ($.Primary_Allegation__c != "Sexual Abuse/Exploitation") ) otherwise null),
					((priorityMap["Emotional Abuse/Neglect"]) when ((($.Emotional_Abuse_Neglect__c == "true") and ($.Primary_Allegation__c != "Emotional Abuse/Neglect") ) or (($.Other_Trafficking__c == "true") and ($.Primary_Allegation__c != "Human Trafficking") )) otherwise null),
					((priorityMap["Human Trafficking"]) when (($.Sexual_Trafficking__c == "true") and ($.Primary_Allegation__c != "Human Trafficking") ) otherwise null),
					((priorityMap["Dependency"]) when (($.Dependency__c == "true") and ($.Primary_Allegation__c != "Dependency") ) otherwise null)
				] filter ($ != null) orderBy $,
		"MaltreatmentType" : [
					(intakeToFindingMap[$.Primary_Allegation__c default ""] default []),
					((intakeToFindingMap["Physical Abuse"]) when (($.Physical_Abuse__c == "true") and ($.Primary_Allegation__c != "Physical Abuse") ) otherwise null),
					((intakeToFindingMap["Neglect"]) when (($.Neglect__c == "true") and ($.Primary_Allegation__c != "Neglect") ) otherwise null),
					((intakeToFindingMap["Sexual Abuse/Exploitation"]) when (($.Sexual_Abuse_Exploitation__c == "true") and ($.Primary_Allegation__c != "Sexual Abuse/Exploitation") ) otherwise null),
					((intakeToFindingMap["Emotional Abuse/Neglect"]) when (($.Emotional_Abuse_Neglect__c == "true") and ($.Primary_Allegation__c != "Emotional Abuse/Neglect") ) otherwise null),
					((intakeToFindingMap["Dependency"]) when (($.Dependency__c == "true") and ($.Primary_Allegation__c != "Dependency") ) otherwise null)
				] filter ($ != null),				
		"Intake_Persons__r" : $.Intake_Persons__r,
		"Intake_Addresses__r" : $.Intake_Addresses__r			
	}
 
)]]></dw:set-variable>
            </dw:transform-message>
        </foreach>
            <dw:transform-message doc:name="Transform Message : Get Findings">
                <dw:input-payload mimeType="application/java"/><dw:set-variable variableName="intakeInfoRecordsMap"><![CDATA[%dw 1.0
%output application/java
---
flowVars.intakeInfoRecordsMap default [] groupBy $.Id]]></dw:set-variable>
            </dw:transform-message>           
    </sub-flow>       

    <sub-flow name="ncands-report-get-sdkriskassessment-Sub_Flow" doc:description="Flow to get Risk Assessment details">
        <logger message="Flow invoked to get Risk Assessment details" level="INFO" doc:name="Logger : Risk Assessment Details"/>
    <set-variable variableName="sdkAssessmentMap" value="#[dw(&quot;{}&quot;)]" doc:name="Variable: Initialize Risk Assessment Info Map for Element 55" doc:description="Initialize Risk Assessment Info Map which will be used for calculation of Element 55"/>
        <foreach collection="#[flowVars.CaseList]" batchSize="150" doc:name="For Each">
            <dw:transform-message doc:name="Transform Message : DeSerialize payload">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Prepare where clause">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $ ++ "'")) joinBy ","]]></dw:set-payload>
            </dw:transform-message>
            <sfdc:query config-ref="Salesforce__Basic_Authentication" query="SELECT Id, Case_Id__c, S3__c, LastModifiedDate FROM DEL_Assessment__c WHERE Case_Id__c IN (#[payload]) AND Recordtype.Name = 'Investigation Risk Assessment'" doc:name="Salesforce : Get SDM Risk Assessment" doc:description="Get SDM Risk Assessment details using Case Salesforce Id"/>
            <dw:transform-message doc:name="Transform Message : Consume payload">
                 <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Group SDM Risk Assessment Details per Case">
                 <dw:input-payload mimeType="application/java"/><dw:set-variable variableName="sdkAssessmentMap"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.sdkAssessmentMap default {})
++ ((payload groupBy $.Case_Id__c))]]></dw:set-variable>
            </dw:transform-message>
        </foreach>
    </sub-flow>
 
    <sub-flow name="ncands-report-get-ncandsriskfactors-Sub_Flow" doc:description="Flow to get NCANDS Risk Factors information">
        <logger message="flow invoked to get NCANDS Risk Factors information" level="INFO" doc:name="Logger : NCANDS Risk Factors information" doc:description="Log entry for NCANDS Risk Factors information"/>
        <foreach collection="#[flowVars.personCasesIDList]" batchSize="150" doc:name="For Each">
            <dw:transform-message doc:name="Transform Message : DeSerialize payload">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Prepare where clause">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $ ++ "'")) joinBy ","]]></dw:set-payload>
            </dw:transform-message>
            <sfdc:query config-ref="Salesforce__Basic_Authentication" query="SELECT Id, Case_Person_ID__c, Alcohol_Abuse__c, Drug_Abuse__c, Intellectual_Disability__c, Clinically_Diag_Emotional_Disturbance__c, Visually_Hearing_Impaired__c, Learning_Disability__c, Phy_Defect_Handicap_Delayed_Phy_Dev__c, Behavior_Problem_Child__c, Other_Med_Diag_Condition_With_Spl_Care__c, Has_a_Plan_of_Safe_Care_CARA__c, Referral_to_CARA_Related_Services__c, Living_Arrangement__c FROM DEL_NCANDS_Risk_Factors_Children__c  where Case_Person_ID__c IN (#[payload])" doc:name="Salesforce : Get NCANDS Risk Factors" doc:description="Get NCANDS Risk Factors Details using Person Case ID"/>
            <dw:transform-message doc:name="Transform Message : Consume payload">
                 <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Group NCANDS Risk Factors">
                 <dw:input-payload mimeType="application/java"/><dw:set-variable variableName="ncandsriskfactorsMap"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.ncandsriskfactorsMap default {})
++ ((payload groupBy $.Case_Person_ID__c))]]></dw:set-variable>
            </dw:transform-message>
        </foreach>
    </sub-flow> 

    <sub-flow name="ncands-report-get-ncandsriskfactorscaregiver-Sub_Flow" doc:description="Flow to get NCANDS Risk Factors Caregiver information">
        <logger message="Log Entry for NCANDS Risk Factors information" level="INFO" doc:name="Logger : NCANDS Risk Factors information" doc:description="Log Entry for NCANDS Risk Factors Caregiver information"/>
        <foreach collection="#[flowVars.CaseIDList]" batchSize="150" doc:name="For Each Case" doc:description="Iterate over each investigation case">
            <dw:transform-message doc:name="Transform Message : DeSerialize payload">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Prepare where clause">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $ ++ "'")) joinBy ","]]></dw:set-payload>
            </dw:transform-message>
            <sfdc:query config-ref="Salesforce__Basic_Authentication" query="SELECT Id, Case_ID__c, Alcohol_Abuse__c, Drug_Abuse__c, Intellectual_Disability__c,Clinically_Diag_Emotional_Dist_Caregiver__c, Visually_Hearing_Impaired_caregiver__c,Learning_Disability_Caregiver__c, Physically_Disabled_Defects_Handicaps__c, Other_Medical_Chronic_Condition__c,Domestic_Violence__c, Housing_Problems__c,Low_Income_Financial_Stress__c, Primary_Caregiver_Member_of_Military__c, Secondary_Caregiver_Member_of_Military__c, Primary_Caregiver__c, Secondary_Caregiver__c FROM DEL_NCANDS_Risk_Factors_Caregiver__c  where Case_ID__c IN (#[payload])" doc:name="Salesforce : Get NCANDS Risk Factors Caregiver" doc:description="Get NCANDS Risk Factors Caregiver Details using Person Case ID"/>
            <dw:transform-message doc:name="Transform Message : Consume payload">
                 <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Group SDM Risk Assessment Details">
                 <dw:input-payload mimeType="application/java"/><dw:set-variable variableName="ncandsriskfactorsCaregiverMap"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.ncandsriskfactorsCaregiverMap default {})
++ ((payload groupBy $.Case_ID__c))]]></dw:set-variable>
            </dw:transform-message>
        </foreach>
    </sub-flow>

    <sub-flow name="ncands-report-get-placementsinfo-Sub_Flow" doc:description="Flow to get Placement related information">
        <logger message="Flow invoked to get Placement related information" level="INFO" doc:name="Logger : Placement information" doc:description="Log entry for Placement information"/>
        <set-variable variableName="placementIDList" value="#[dw(&quot;[]&quot;)]" doc:name="Variable : Initialize Placement ID List" doc:description="Initialize Placement ID List
These Placement Id's will be used to get Level of Care info which is required for checking for Respite services"/>
        <set-variable variableName="placementinfoMap" value="#[dw(&quot;{}&quot;)]" doc:name="Variable: Initialize Placement Info Map for Element 60" doc:description="Initialize Placement Info Map which will be used for calculation of Element 60"/>
        <foreach collection="#[flowVars.ContactIDList]" batchSize="150" doc:name="For Each Person List" doc:description="Iterate over each Person in the report in a group of 150 at one time">
            <dw:transform-message doc:name="Transform Message : DeSerialize payload">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Prepare where clause">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $ ++ "'")) joinBy ","]]></dw:set-payload>
            </dw:transform-message>
            <sfdc:query config-ref="Salesforce__Basic_Authentication" query="Select Id, Contact__c, Case_Person__c, Foster_Care_Setting_Type__c, Division__c, Home_Placement_Type__c, Placement_Start_Date_Division_Wide__c, Placement_End_Date_Division_Wide__c, Placement_Episode__c, Placement_Episode__r.Episode_End_Date__c from DEL_Placement__c where Contact__c IN (#[payload]) and Placement_Start_Date_Division_Wide__c != null and Latest_Version_Placement__c = true and Foster_Care_Setting_Type__c='Foster Care'" doc:name="Salesforce : Get Placement Information" doc:description="Get Placement Information"/>
            <dw:transform-message doc:name="Transform Message : Consume payload">
                 <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Group Placement Info">
                 <dw:input-payload mimeType="application/java"/>
            <dw:set-variable variableName="placementIDList"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.placementIDList default []) ++ (payload.Id default []) ]]></dw:set-variable>                 
				 <dw:set-variable variableName="placementinfoMap"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.placementinfoMap default {})
++ (payload groupBy $.Contact__c) ]]></dw:set-variable>
            </dw:transform-message>
        </foreach>
        <dw:transform-message doc:name="Transform Message : Get Unique Placement ID List">
            <dw:set-variable variableName="placementIDList"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.placementIDList default []) distinctBy $ ]]></dw:set-variable>
        </dw:transform-message>
        <flow-ref name="ncands-report-get-LOCinfo-Sub_Flow" doc:name="ncands-report-get-LOCinfo-Sub_Flow"/>
        <dw:transform-message doc:name="Transform Message : Filter Respite, TRU and TMV">
            <dw:set-variable variableName="placementinfoMap2"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.placementinfoMap default {}) mapObject {
	($$ as :string) : ($ default []) filter (
		  ( ( sizeOf (flowVars.locinfoMap[$.Id] default [])) == 0 )  and 
		  ($.Foster_Care_Setting_Type__c == "Foster Care" ) and 
		  ($.Division__c == "DFS" ) and
		  (($.Home_Placement_Type__c default "" ) == "")
	)
}]]></dw:set-variable>
        </dw:transform-message>
    </sub-flow> 

    <sub-flow name="ncands-report-get-LOCinfo-Sub_Flow" doc:description="Flow to get LOC information for Checking for Respite Placements">
        <foreach collection="#[flowVars.placementIDList]" batchSize="150" doc:name="For Each">
            <dw:transform-message doc:name="Transform Message : DeSerialize payload">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Prepare where clause">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $ ++ "'")) joinBy ","]]></dw:set-payload>
            </dw:transform-message>
            <sfdc:query config-ref="Salesforce__Basic_Authentication" query="Select Id, Placement__c from DEL_Level_Of_Care__c where Level_of_Care_Reason__c = 'Respite' and Placement__c IN (#[payload])" doc:name="Salesforce : Get LOC Information" doc:description="Query to get LOC information for Checking for Respite Placements"/>
            <dw:transform-message doc:name="Transform Message : Consume payload">
                 <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Group LOC Info">
                 <dw:input-payload mimeType="application/java"/>
				 <dw:set-variable variableName="locinfoMap"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.locinfoMap default {})
++ (payload groupBy $.Placement__c) ]]></dw:set-variable>
            </dw:transform-message>
        </foreach>
    </sub-flow> 

    <sub-flow name="ncands-report-get-Conference-Details-Sub_Flow" doc:description="Flow to get Case Conference details related to the associated Cases">
        <logger message="Flow invoked to get Case Conference details related to the associated Cases" level="INFO" doc:name="Logger : Case Conference details" doc:description="Log entry for Case Conference details"/>
    <foreach collection="#[flowVars.AssociatedIDList]" batchSize="150" doc:name="For Each" doc:description="Iterate 150 records from Assessment ID List at a time. This is done because of the where clause charcter limit of 4000 charcters for an SOQL Query">
            <dw:transform-message doc:name="Transform Message : Get Comma Separated Case Id List">
                <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $ ++ "'")) joinBy ","]]></dw:set-payload>
            </dw:transform-message>    
        <sfdc:query config-ref="Salesforce__Basic_Authentication_dev" query="Select Id, Counseling_Services__c,Family_Support_Services__c,Family_Preservation_Services__c,Family_Planning_Services__c,Daycare_Services_Child__c,Educational_and_Training_Services__c,Employment_Services__c,Health_Related_and_Home_Health_Services__c,Home_Based_Services__c,Housing_Services__c,Information_and_Referral_Services__c,Legal_Services__c,Mental_Health_Services__c,Parenting_Services_for_Young_Parents__c,Special_Services_Disabled__c,Substance_Abuse_Services__c,Transportation_Services__c,Other_Services__c,Case_ID__c,DEL_Completed_Date__c,Conference_DateTime__c,LastModifiedDate,Case_ID__r.Case_Type__c, Case_ID__r.Case_Subtype__c ,Case_ID__r.Case_Open_Date__c,Case_ID__r.Case_Close_Date__c, Conference_Status__c FROM DEL_Case_Conference__c where Case_ID__c IN (#[payload])" doc:name="Salesforce : Get Conference Details" doc:description="Get Case Conference Details using the Case ID Comma separated,quoted String"/>
        <dw:transform-message doc:name="Transform Message : Get Associated Cases">
                <dw:input-payload mimeType="application/java"/><dw:set-variable variableName="associatedCasesMap"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.associatedCasesMap default []) ++ ((payload map $) default [])]]></dw:set-variable>
        </dw:transform-message>
        </foreach>

            <dw:transform-message doc:name="Transform Message : Get Associated Cases">
                <dw:input-payload mimeType="application/java"/><dw:set-variable variableName="associatedCasesMap"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.associatedCasesMap groupBy ($.Case_ID__c)) when ((flowVars.associatedCasesMap != null) and ( (sizeOf flowVars.associatedCasesMap) > 0) ) otherwise {}]]></dw:set-variable>
</dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Get Associated Cases">
                <dw:input-payload mimeType="application/java"/><dw:set-variable variableName="associatedCasesMap"><![CDATA[%dw 1.0
%output application/java
---
(((flowVars.CaseDetails map {
 	"Id" : $.Id,
 	"AssociatedCases" : (flatten ( ($.Associated_Cases__r.Associated_Case_ID__c default [] map (flowVars.associatedCasesMap[$]) filter $ != null) default [] ) )
 	 							++ (flatten ( ($.Associated_Cases_Second__r.Case_ID__c default [] map (flowVars.associatedCasesMap[$]) filter $ != null) default [] ) ) }
 	 							) groupBy $.Id) mapObject { ($$ as :string) : ($[0].AssociatedCases) distinctBy $.Id })]]></dw:set-variable>
</dw:transform-message>
           
    </sub-flow>

    <sub-flow name="ncands-report-generation-create-CSV-File-Sub_Flow" doc:description="Flow to generate CSV exception report file">

        <dw:transform-message doc:name="Transform Message : Create CSV Report">
            <dw:input-payload doc:sample="sample_data\map.dwl"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/csv header=true,quoteValues=true
---
flowVars.elementDetails map {
	"Client PID" : $."Client PID" default "",
	"Case ID" : $."Case ID" default "",	
	"Error Message" : $."Error Message"
}]]></dw:set-payload>
        </dw:transform-message>         
        <message-properties-transformer scope="invocation" doc:name="Message Properties : Prepare File Details">
            <add-message-property key="FileAttachment" value="#[payload]"/>
            <add-message-property key="FileName" value="#[dw('&quot;ExceptionLog_NCANDS_&quot; ++ (now as :string {format : &quot;yyyyMMddHHmmss&quot;})')]"/>
            <add-message-property key="FileExtn" value="csv"/>
            <add-message-property key="FileDescription" value="NCANDS.csv"/>
        </message-properties-transformer>
        <flow-ref name="stpv_add_attachment" doc:name="stpv_add_attachment"/>
    </sub-flow>
    
    <sub-flow name="ncands-report-get-case-reportinfo-Sub_Flow" doc:description="Flow to gather Initial report Details">
        <logger message="Flow invoked to gather Initial report Details" level="INFO" doc:name="Logger : Initial Report" doc:description="Log entry for Initial Report"/>
        <foreach collection="#[flowVars.AssociatedIntakeIDList]" doc:name="For Each : Iterate over each Intake" doc:description="Iterate over each intake in the report" batchSize="150">
            <dw:transform-message doc:name="Transform Message : DeSerialize payload">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Prepare where clause">
                <dw:input-payload mimeType="application/java"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $ ++ "'")) joinBy ","]]></dw:set-payload>
                <dw:set-variable variableName="AssociatedIntakeIDList1"><![CDATA[%dw 1.0
%output application/java
---
flowVars.AssociatedIntakeIDList map ("'" ++ $ ++ "'") joinBy ","]]></dw:set-variable>
            </dw:transform-message>
            <sfdc:query config-ref="Salesforce__Basic_Authentication" query="SELECT Id, Investigation_Number__c, Report_Date__c FROM DEL_Intake__c WHERE Id IN (#[payload])  AND Final_SDM_Decision__c = 'Screen In' " doc:name="Salesforce : Get Initial Interview Info" doc:description="Get Initial Interview Info for the specified Cases"/>
            <dw:transform-message doc:name="Transform Message : Consume Payload">
                 <dw:input-payload mimeType="application/java"/><dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
            </dw:transform-message>
            <dw:transform-message doc:name="Transform Message : Group Initial Report Information">
                 <dw:input-payload mimeType="application/java"/><dw:set-variable variableName="initReport"><![CDATA[%dw 1.0
%output application/java
---
(flowVars.initReport default {}) ++ (payload filter ($.Investigation_Number__c != null) groupBy $.Investigation_Number__c default [])]]></dw:set-variable>
            </dw:transform-message>
        </foreach>
    </sub-flow>
      <sub-flow name="ncands-Custody-records-Sub_Flow" doc:description="Flow to get Custody details for the report">
        <logger message="Getting Custody records" level="INFO" doc:name="Logger : Custody records"/>
		<dw:transform-message doc:name="Transform Message">
			<dw:set-variable variableName="caseCustody"><![CDATA[%dw 1.0
%output application/java
---
flowVars.CaseDetails.Person_Cases__r ]]></dw:set-variable>
		</dw:transform-message>
		<foreach doc:name="For Each" collection="#[flowVars.caseCustody]" >
			<dw:transform-message doc:name="Transform Message : DeSerialize payload">
				<dw:input-payload mimeType="application/java"/>
				<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
			</dw:transform-message>

			<dw:transform-message doc:name="Transform Message : Prepare where clause">
				<dw:input-payload mimeType="application/java"/>
				<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
(payload map ("'" ++ $.Person__c ++ "'")) joinBy ","]]></dw:set-payload>
			</dw:transform-message>
			<sfdc:query config-ref="Salesforce__Basic_Authentication" query="Select Id, Client_Name__c, Client_Name__r.DEL_PID__c, Start_Date__c, Actual_End_Date__c, CreatedDate from DEL_Custody__c where Client_Name__c IN (#[payload]) and Start_Date__c != null and (( Court_Order_ID__r.Petition_ID__c != '' and Converted_Data__c= false) or (Original_Custody__c= true)) and Custodian__c ='DSCYF/DFS' Order By  Start_Date__c asc" doc:name="Salesforce : Get Custody Details" doc:description="Get Custody Details"/>
			<dw:transform-message doc:name="Transform Message">
				<dw:input-payload mimeType="application/java"/>
				<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
			</dw:transform-message>
			<dw:transform-message doc:name="Transform Message : Check Duration">
				<dw:input-payload mimeType="application/java"/>
				<dw:set-variable variableName="CustodyDetails"><![CDATA[%dw 1.0
%output application/java
---
(payload map {
      CustodyID:$.Id,
      PersonID:$.Client_Name__c  default '',
      CustodyStartDate:$.Start_Date__c as :date default '',
      // Before MOCK Change CustodyEndDate:$.Actual_End_Date__c when ($.Actual_End_Date__c != null) otherwise ($.End_Date__c as :date default ''),
      // Before MOCK Change Duration:(($.Start_Date__c as :date) - ($.End_Date__c as :date)).days default 100
      //Change during MOCK ENV Test assuming Futuristic Date in case Actual Date is not found before it was End_Date__c 
      CustodyEndDate:($.Actual_End_Date__c as :date) when ($.Actual_End_Date__c != null) otherwise null,
      CompletedDate : ($.CreatedDate as :date) when ($.CreatedDate != null) otherwise null,
      
      //Change during MOCK ENV Test checking Actual_End_Date__c for Duration before it was End_Date__c
      Duration: ((  (($.Actual_End_Date__c as :date) - |P1D|) > ($.Start_Date__c as :date)  )) when ($.Actual_End_Date__c != null) otherwise true
      } filter ($.Duration == true) ) ++ (flowVars.CustodyDetails default [])]]></dw:set-variable>

			</dw:transform-message>
			<dw:transform-message doc:name="Transform Message">
				<dw:input-payload mimeType="application/java"/>
				<dw:set-variable variableName="FinalCustody"><![CDATA[%dw 1.0
%output application/java
---
flowVars.CustodyDetails
]]></dw:set-variable>
				<dw:set-variable variableName="CustodyList"><![CDATA[%dw 1.0
%output application/java
---
flowVars.CustodyDetails
]]></dw:set-variable>
				<dw:set-variable variableName="FirstEverCustody"><![CDATA[%dw 1.0
%output application/java
---
flowVars.CustodyDetails groupBy $.PersonID]]></dw:set-variable>
			</dw:transform-message>

		</foreach>


    </sub-flow>
</mule>
	
